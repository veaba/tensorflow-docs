/***********************
 * @name JS
 * @author Jo.gel
 * @date 2019/8/2 0002
 * @link 所有link 必须是以一级级相对的/xx开头的绝对
 *    - 以.html作为结尾
 * @children [] 如果是字符串，则相对
 ***********************/
module.exports = {
	tfLinks: [
		{ title: "Overview", type: "group", link: "/tf/Overview" },
		{ title: "tf.AggregationMethod", type: "group", link: "tf/AggregationMethod" },
		{ title: "tf.argsort", type: "group", link: "tf/argsort" },
		{ title: "tf.batch_to_space", type: "group", link: "tf/batch_to_space" },
		{ title: "tf.bitcast", type: "group", link: "tf/bitcast" },
		{ title: "tf.boolean_mask", type: "group", link: "tf/boolean_mask" },
		{ title: "tf.broadcast_dynamic_shape", type: "group", link: "tf/broadcast_dynamic_shape" },
		{ title: "tf.broadcast_static_shape", type: "group", link: "tf/broadcast_static_shape" },
		{ title: "tf.broadcast_to", type: "group", link: "tf/broadcast_to" },
		{ title: "tf.case", type: "group", link: "tf/case" },
		{ title: "tf.clip_by_global_norm", type: "group", link: "tf/clip_by_global_norm" },
		{ title: "tf.clip_by_norm", type: "group", link: "tf/clip_by_norm" },
		{ title: "tf.clip_by_value", type: "group", link: "tf/clip_by_value" },
		{ title: "tf.concat", type: "group", link: "tf/concat" },
		{ title: "tf.cond", type: "group", link: "tf/cond" },
		{ title: "tf.constant", type: "group", link: "tf/constant" },
		{ title: "tf.constant_initializer", type: "group", link: "tf/constant_initializer" },
		{ title: "tf.control_dependencies", type: "group", link: "tf/control_dependencies" },
		{ title: "tf.convert_to_tensor", type: "group", link: "tf/convert_to_tensor" },
		{ title: "tf.CriticalSection", type: "group", link: "tf/CriticalSection" },
		{ title: "tf.custom_gradient", type: "group", link: "tf/custom_gradient" },
		{ title: "tf.device", type: "group", link: "tf/device" },
		{ title: "tf.DeviceSpec", type: "group", link: "tf/DeviceSpec" },
		{ title: "tf.dynamic_partition", type: "group", link: "tf/dynamic_partition" },
		{ title: "tf.dynamic_stitch", type: "group", link: "tf/dynamic_stitch" },
		{ title: "tf.edit_distance", type: "group", link: "tf/edit_distance" },
		{ title: "tf.einsum", type: "group", link: "tf/einsum" },
		{ title: "tf.ensure_shape", type: "group", link: "tf/ensure_shape" },
		{ title: "tf.executing_eagerly", type: "group", link: "tf/executing_eagerly" },
		{ title: "tf.expand_dims", type: "group", link: "tf/expand_dims" },
		{ title: "tf.extract_volume_patches", type: "group", link: "tf/extract_volume_patches" },
		{ title: "tf.eye", type: "group", link: "tf/eye" },
		{ title: "tf.fill", type: "group", link: "tf/fill" },
		{ title: "tf.fingerprint", type: "group", link: "tf/fingerprint" },
		{ title: "tf.foldl", type: "group", link: "tf/foldl" },
		{ title: "tf.foldr", type: "group", link: "tf/foldr" },
		{ title: "tf.function", type: "group", link: "tf/function" },
		{ title: "tf.gather", type: "group", link: "tf/gather" },
		{ title: "tf.gather_nd", type: "group", link: "tf/gather_nd" },
		{ title: "tf.get_logger", type: "group", link: "tf/get_logger" },
		{ title: "tf.get_static_value", type: "group", link: "tf/get_static_value" },
		{ title: "tf.gradients", type: "group", link: "tf/gradients" },
		{ title: "tf.GradientTape", type: "group", link: "tf/GradientTape" },
		{ title: "tf.grad_pass_through", type: "group", link: "tf/grad_pass_through" },
		{ title: "tf.Graph", type: "group", link: "tf/Graph" },
		{ title: "tf.group", type: "group", link: "tf/group" },
		{ title: "tf.guarantee_const", type: "group", link: "tf/guarantee_const" },
		{ title: "tf.hessians", type: "group", link: "tf/hessians" },
		{ title: "tf.histogram_fixed_width", type: "group", link: "tf/histogram_fixed_width" },
		{ title: "tf.histogram_fixed_width_bins", type: "group", link: "tf/histogram_fixed_width_bins" },
		{ title: "tf.identity", type: "group", link: "tf/identity" },
		{ title: "tf.identity_n", type: "group", link: "tf/identity_n" },
		{ title: "tf.IndexedSlices", type: "group", link: "tf/IndexedSlices" },
		{ title: "tf.IndexedSlicesSpec", type: "group", link: "tf/IndexedSlicesSpec" },
		{ title: "tf.init_scope", type: "group", link: "tf/init_scope" },
		{ title: "tf.is_tensor", type: "group", link: "tf/is_tensor" },
		{ title: "tf.linspace", type: "group", link: "tf/linspace" },
		{ title: "tf.load_library", type: "group", link: "tf/load_library" },
		{ title: "tf.load_op_library", type: "group", link: "tf/load_op_library" },
		{ title: "tf.make_ndarray", type: "group", link: "tf/make_ndarray" },
		{ title: "tf.make_tensor_proto", type: "group", link: "tf/make_tensor_proto" },
		{ title: "tf.map_fn", type: "group", link: "tf/map_fn" },
		{ title: "tf.meshgrid", type: "group", link: "tf/meshgrid" },
		{ title: "tf.Module", type: "group", link: "tf/Module" },
		{ title: "tf.name_scope", type: "group", link: "tf/name_scope" },
		{ title: "tf.nondifferentiable_batch_function", type: "group", link: "tf/nondifferentiable_batch_function" },
		{ title: "tf.norm", type: "group", link: "tf/norm" },
		{ title: "tf.no_gradient", type: "group", link: "tf/no_gradient" },
		{ title: "tf.no_op", type: "group", link: "tf/no_op" },
		{ title: "tf.numpy_function", type: "group", link: "tf/numpy_function" },
		{ title: "tf.ones", type: "group", link: "tf/ones" },
		{ title: "tf.ones_initializer", type: "group", link: "tf/ones_initializer" },
		{ title: "tf.ones_like", type: "group", link: "tf/ones_like" },
		{ title: "tf.one_hot", type: "group", link: "tf/one_hot" },
		{ title: "tf.Operation", type: "group", link: "tf/Operation" },
		{ title: "tf.OptionalSpec", type: "group", link: "tf/OptionalSpec" },
		{ title: "tf.pad", type: "group", link: "tf/pad" },
		{ title: "tf.parallel_stack", type: "group", link: "tf/parallel_stack" },
		{ title: "tf.print", type: "group", link: "tf/print" },
		{ title: "tf.py_function", type: "group", link: "tf/py_function" },
		{ title: "tf.RaggedTensor", type: "group", link: "tf/RaggedTensor" },
		{ title: "tf.RaggedTensorSpec", type: "group", link: "tf/RaggedTensorSpec" },
		{ title: "tf.random_normal_initializer", type: "group", link: "tf/random_normal_initializer" },
		{ title: "tf.random_uniform_initializer", type: "group", link: "tf/random_uniform_initializer" },
		{ title: "tf.range", type: "group", link: "tf/range" },
		{ title: "tf.rank", type: "group", link: "tf/rank" },
		{ title: "tf.realdiv", type: "group", link: "tf/realdiv" },
		{ title: "tf.recompute_grad", type: "group", link: "tf/recompute_grad" },
		{ title: "tf.reduce_all", type: "group", link: "tf/reduce_all" },
		{ title: "tf.RegisterGradient", type: "group", link: "tf/RegisterGradient" },
		{ title: "tf.register_tensor_conversion_function", type: "group", link: "tf/register_tensor_conversion_function" },
		{ title: "tf.required_space_to_batch_paddings", type: "group", link: "tf/required_space_to_batch_paddings" },
		{ title: "tf.reshape", type: "group", link: "tf/reshape" },
		{ title: "tf.reverse", type: "group", link: "tf/reverse" },
		{ title: "tf.reverse_sequence", type: "group", link: "tf/reverse_sequence" },
		{ title: "tf.roll", type: "group", link: "tf/roll" },
		{ title: "tf.scan", type: "group", link: "tf/scan" },
		{ title: "tf.scatter_nd", type: "group", link: "tf/scatter_nd" },
		{ title: "tf.searchsorted", type: "group", link: "tf/searchsorted" },
		{ title: "tf.sequence_mask", type: "group", link: "tf/sequence_mask" },
		{ title: "tf.shape", type: "group", link: "tf/shape" },
		{ title: "tf.shape_n", type: "group", link: "tf/shape_n" },
		{ title: "tf.size", type: "group", link: "tf/size" },
		{ title: "tf.slice", type: "group", link: "tf/slice" },
		{ title: "tf.sort", type: "group", link: "tf/sort" },
		{ title: "tf.space_to_batch", type: "group", link: "tf/space_to_batch" },
		{ title: "tf.space_to_batch_nd", type: "group", link: "tf/space_to_batch_nd" },
		{ title: "tf.SparseTensorSpec", type: "group", link: "tf/SparseTensorSpec" },
		{ title: "tf.split", type: "group", link: "tf/split" },
		{ title: "tf.squeeze", type: "group", link: "tf/squeeze" },
		{ title: "tf.stack", type: "group", link: "tf/stack" },
		{ title: "tf.stop_gradient", type: "group", link: "tf/stop_gradient" },
		{ title: "tf.strided_slice", type: "group", link: "tf/strided_slice" },
		{ title: "tf.switch_case", type: "group", link: "tf/switch_case" },
		{ title: "tf.Tensor", type: "group", link: "tf/Tensor" },
		{ title: "tf.TensorArray", type: "group", link: "tf/TensorArray" },
		{ title: "tf.TensorArraySpec", type: "group", link: "tf/TensorArraySpec" },
		{ title: "tf.tensordot", type: "group", link: "tf/tensordot" },
		{ title: "tf.TensorShape", type: "group", link: "tf/TensorShape" },
		{ title: "tf.TensorSpec", type: "group", link: "tf/TensorSpec" },
		{ title: "tf.tensor_scatter_nd_add", type: "group", link: "tf/tensor_scatter_nd_add" },
		{ title: "tf.tensor_scatter_nd_sub", type: "group", link: "tf/tensor_scatter_nd_sub" },
		{ title: "tf.tensor_scatter_nd_update", type: "group", link: "tf/tensor_scatter_nd_update" },
		{ title: "tf.tile", type: "group", link: "tf/tile" },
		{ title: "tf.timestamp", type: "group", link: "tf/timestamp" },
		{ title: "tf.transpose", type: "group", link: "tf/transpose" },
		{ title: "tf.truncatediv", type: "group", link: "tf/truncatediv" },
		{ title: "tf.truncatemod", type: "group", link: "tf/truncatemod" },
		{ title: "tf.tuple", type: "group", link: "tf/tuple" },
		{ title: "tf.TypeSpec", type: "group", link: "tf/TypeSpec" },
		{ title: "tf.UnconnectedGradients", type: "group", link: "tf/UnconnectedGradients" },
		{ title: "tf.unique", type: "group", link: "tf/unique" },
		{ title: "tf.unique_with_counts", type: "group", link: "tf/unique_with_counts" },
		{ title: "tf.unravel_index", type: "group", link: "tf/unravel_index" },
		{ title: "tf.unstack", type: "group", link: "tf/unstack" },
		{ title: "tf.Variable", type: "group", link: "tf/Variable" },
		{ title: "tf.Variable.SaveSliceInfo", type: "group", link: "tf/Variable.SaveSliceInfo" },
		{ title: "tf.VariableAggregation", type: "group", link: "tf/VariableAggregation" },
		{ title: "tf.VariableSynchronization", type: "group", link: "tf/VariableSynchronization" },
		{ title: "tf.variable_creator_scope", type: "group", link: "tf/variable_creator_scope" },
		{ title: "tf.vectorized_map", type: "group", link: "tf/vectorized_map" },
		{ title: "tf.where", type: "group", link: "tf/where" },
		{ title: "tf.while_loop", type: "group", link: "tf/while_loop" },
		{ title: "tf.zeros", type: "group", link: "tf/zeros" },
		{ title: "tf.zeros_initializer", type: "group", link: "tf/zeros_initializer" },
		{ title: "tf.zeros_like", type: "group", link: "tf/zeros_like" },
		{ title: "tf.Overview", type: "group", link: "tf/Overview" },
		{ title: "tf.AggregationMethod", type: "group", link: "tf/AggregationMethod" },
		{ title: "tf.argsort", type: "group", link: "tf/argsort" },
		{ title: "tf.batch_to_space", type: "group", link: "tf/batch_to_space" },
		{ title: "tf.bitcast", type: "group", link: "tf/bitcast" },
		{ title: "tf.boolean_mask", type: "group", link: "tf/boolean_mask" },
		{ title: "tf.broadcast_dynamic_shape", type: "group", link: "tf/broadcast_dynamic_shape" },
		{ title: "tf.broadcast_static_shape", type: "group", link: "tf/broadcast_static_shape" },
		{ title: "tf.broadcast_to", type: "group", link: "tf/broadcast_to" },
		{ title: "tf.case", type: "group", link: "tf/case" },
		{ title: "tf.clip_by_global_norm", type: "group", link: "tf/clip_by_global_norm" },
		{ title: "tf.clip_by_norm", type: "group", link: "tf/clip_by_norm" },
		{ title: "tf.clip_by_value", type: "group", link: "tf/clip_by_value" },
		{ title: "tf.concat", type: "group", link: "tf/concat" },
		{ title: "tf.cond", type: "group", link: "tf/cond" },
		{ title: "tf.constant", type: "group", link: "tf/constant" },
		{ title: "tf.constant_initializer", type: "group", link: "tf/constant_initializer" },
		{ title: "tf.control_dependencies", type: "group", link: "tf/control_dependencies" },
		{ title: "tf.convert_to_tensor", type: "group", link: "tf/convert_to_tensor" },
		{ title: "tf.CriticalSection", type: "group", link: "tf/CriticalSection" },
		{ title: "tf.custom_gradient", type: "group", link: "tf/custom_gradient" },
		{ title: "tf.device", type: "group", link: "tf/device" },
		{ title: "tf.DeviceSpec", type: "group", link: "tf/DeviceSpec" },
		{ title: "tf.dynamic_partition", type: "group", link: "tf/dynamic_partition" },
		{ title: "tf.dynamic_stitch", type: "group", link: "tf/dynamic_stitch" },
		{ title: "tf.edit_distance", type: "group", link: "tf/edit_distance" },
		{ title: "tf.einsum", type: "group", link: "tf/einsum" },
		{ title: "tf.ensure_shape", type: "group", link: "tf/ensure_shape" },
		{ title: "tf.executing_eagerly", type: "group", link: "tf/executing_eagerly" },
		{ title: "tf.expand_dims", type: "group", link: "tf/expand_dims" },
		{ title: "tf.extract_volume_patches", type: "group", link: "tf/extract_volume_patches" },
		{ title: "tf.eye", type: "group", link: "tf/eye" },
		{ title: "tf.fill", type: "group", link: "tf/fill" },
		{ title: "tf.fingerprint", type: "group", link: "tf/fingerprint" },
		{ title: "tf.foldl", type: "group", link: "tf/foldl" },
		{ title: "tf.foldr", type: "group", link: "tf/foldr" },
		{ title: "tf.function", type: "group", link: "tf/function" },
		{ title: "tf.gather", type: "group", link: "tf/gather" },
		{ title: "tf.gather_nd", type: "group", link: "tf/gather_nd" },
		{ title: "tf.get_logger", type: "group", link: "tf/get_logger" },
		{ title: "tf.get_static_value", type: "group", link: "tf/get_static_value" },
		{ title: "tf.gradients", type: "group", link: "tf/gradients" },
		{ title: "tf.GradientTape", type: "group", link: "tf/GradientTape" },
		{ title: "tf.grad_pass_through", type: "group", link: "tf/grad_pass_through" },
		{ title: "tf.Graph", type: "group", link: "tf/Graph" },
		{ title: "tf.group", type: "group", link: "tf/group" },
		{ title: "tf.guarantee_const", type: "group", link: "tf/guarantee_const" },
		{ title: "tf.hessians", type: "group", link: "tf/hessians" },
		{ title: "tf.histogram_fixed_width", type: "group", link: "tf/histogram_fixed_width" },
		{ title: "tf.histogram_fixed_width_bins", type: "group", link: "tf/histogram_fixed_width_bins" },
		{ title: "tf.identity", type: "group", link: "tf/identity" },
		{ title: "tf.identity_n", type: "group", link: "tf/identity_n" },
		{ title: "tf.IndexedSlices", type: "group", link: "tf/IndexedSlices" },
		{ title: "tf.IndexedSlicesSpec", type: "group", link: "tf/IndexedSlicesSpec" },
		{ title: "tf.init_scope", type: "group", link: "tf/init_scope" },
		{ title: "tf.is_tensor", type: "group", link: "tf/is_tensor" },
		{ title: "tf.linspace", type: "group", link: "tf/linspace" },
		{ title: "tf.load_library", type: "group", link: "tf/load_library" },
		{ title: "tf.load_op_library", type: "group", link: "tf/load_op_library" },
		{ title: "tf.make_ndarray", type: "group", link: "tf/make_ndarray" },
		{ title: "tf.make_tensor_proto", type: "group", link: "tf/make_tensor_proto" },
		{ title: "tf.map_fn", type: "group", link: "tf/map_fn" },
		{ title: "tf.meshgrid", type: "group", link: "tf/meshgrid" },
		{ title: "tf.Module", type: "group", link: "tf/Module" },
		{ title: "tf.name_scope", type: "group", link: "tf/name_scope" },
		{ title: "tf.nondifferentiable_batch_function", type: "group", link: "tf/nondifferentiable_batch_function" },
		{ title: "tf.norm", type: "group", link: "tf/norm" },
		{ title: "tf.no_gradient", type: "group", link: "tf/no_gradient" },
		{ title: "tf.no_op", type: "group", link: "tf/no_op" },
		{ title: "tf.numpy_function", type: "group", link: "tf/numpy_function" },
		{ title: "tf.ones", type: "group", link: "tf/ones" },
		{ title: "tf.ones_initializer", type: "group", link: "tf/ones_initializer" },
		{ title: "tf.ones_like", type: "group", link: "tf/ones_like" },
		{ title: "tf.one_hot", type: "group", link: "tf/one_hot" },
		{ title: "tf.Operation", type: "group", link: "tf/Operation" },
		{ title: "tf.OptionalSpec", type: "group", link: "tf/OptionalSpec" },
		{ title: "tf.pad", type: "group", link: "tf/pad" },
		{ title: "tf.parallel_stack", type: "group", link: "tf/parallel_stack" },
		{ title: "tf.print", type: "group", link: "tf/print" },
		{ title: "tf.py_function", type: "group", link: "tf/py_function" },
		{ title: "tf.RaggedTensor", type: "group", link: "tf/RaggedTensor" },
		{ title: "tf.RaggedTensorSpec", type: "group", link: "tf/RaggedTensorSpec" },
		{ title: "tf.random_normal_initializer", type: "group", link: "tf/random_normal_initializer" },
		{ title: "tf.random_uniform_initializer", type: "group", link: "tf/random_uniform_initializer" },
		{ title: "tf.range", type: "group", link: "tf/range" },
		{ title: "tf.rank", type: "group", link: "tf/rank" },
		{ title: "tf.realdiv", type: "group", link: "tf/realdiv" },
		{ title: "tf.recompute_grad", type: "group", link: "tf/recompute_grad" },
		{ title: "tf.reduce_all", type: "group", link: "tf/reduce_all" },
		{ title: "tf.RegisterGradient", type: "group", link: "tf/RegisterGradient" },
		{ title: "tf.register_tensor_conversion_function", type: "group", link: "tf/register_tensor_conversion_function" },
		{ title: "tf.required_space_to_batch_paddings", type: "group", link: "tf/required_space_to_batch_paddings" },
		{ title: "tf.reshape", type: "group", link: "tf/reshape" },
		{ title: "tf.reverse", type: "group", link: "tf/reverse" },
		{ title: "tf.reverse_sequence", type: "group", link: "tf/reverse_sequence" },
		{ title: "tf.roll", type: "group", link: "tf/roll" },
		{ title: "tf.scan", type: "group", link: "tf/scan" },
		{ title: "tf.scatter_nd", type: "group", link: "tf/scatter_nd" },
		{ title: "tf.searchsorted", type: "group", link: "tf/searchsorted" },
		{ title: "tf.sequence_mask", type: "group", link: "tf/sequence_mask" },
		{ title: "tf.shape", type: "group", link: "tf/shape" },
		{ title: "tf.shape_n", type: "group", link: "tf/shape_n" },
		{ title: "tf.size", type: "group", link: "tf/size" },
		{ title: "tf.slice", type: "group", link: "tf/slice" },
		{ title: "tf.sort", type: "group", link: "tf/sort" },
		{ title: "tf.space_to_batch", type: "group", link: "tf/space_to_batch" },
		{ title: "tf.space_to_batch_nd", type: "group", link: "tf/space_to_batch_nd" },
		{ title: "tf.SparseTensorSpec", type: "group", link: "tf/SparseTensorSpec" },
		{ title: "tf.split", type: "group", link: "tf/split" },
		{ title: "tf.squeeze", type: "group", link: "tf/squeeze" },
		{ title: "tf.stack", type: "group", link: "tf/stack" },
		{ title: "tf.stop_gradient", type: "group", link: "tf/stop_gradient" },
		{ title: "tf.strided_slice", type: "group", link: "tf/strided_slice" },
		{ title: "tf.switch_case", type: "group", link: "tf/switch_case" },
		{ title: "tf.Tensor", type: "group", link: "tf/Tensor" },
		{ title: "tf.TensorArray", type: "group", link: "tf/TensorArray" },
		{ title: "tf.TensorArraySpec", type: "group", link: "tf/TensorArraySpec" },
		{ title: "tf.tensordot", type: "group", link: "tf/tensordot" },
		{ title: "tf.TensorShape", type: "group", link: "tf/TensorShape" },
		{ title: "tf.TensorSpec", type: "group", link: "tf/TensorSpec" },
		{ title: "tf.tensor_scatter_nd_add", type: "group", link: "tf/tensor_scatter_nd_add" },
		{ title: "tf.tensor_scatter_nd_sub", type: "group", link: "tf/tensor_scatter_nd_sub" },
		{ title: "tf.tensor_scatter_nd_update", type: "group", link: "tf/tensor_scatter_nd_update" },
		{ title: "tf.tile", type: "group", link: "tf/tile" },
		{ title: "tf.timestamp", type: "group", link: "tf/timestamp" },
		{ title: "tf.transpose", type: "group", link: "tf/transpose" },
		{ title: "tf.truncatediv", type: "group", link: "tf/truncatediv" },
		{ title: "tf.truncatemod", type: "group", link: "tf/truncatemod" },
		{ title: "tf.tuple", type: "group", link: "tf/tuple" },
		{ title: "tf.TypeSpec", type: "group", link: "tf/TypeSpec" },
		{ title: "tf.UnconnectedGradients", type: "group", link: "tf/UnconnectedGradients" },
		{ title: "tf.unique", type: "group", link: "tf/unique" },
		{ title: "tf.unique_with_counts", type: "group", link: "tf/unique_with_counts" },
		{ title: "tf.unravel_index", type: "group", link: "tf/unravel_index" },
		{ title: "tf.unstack", type: "group", link: "tf/unstack" },
		{ title: "tf.Variable", type: "group", link: "tf/Variable" },
		{ title: "tf.Variable.SaveSliceInfo", type: "group", link: "tf/Variable.SaveSliceInfo" },
		{ title: "tf.VariableAggregation", type: "group", link: "tf/VariableAggregation" },
		{ title: "tf.VariableSynchronization", type: "group", link: "tf/VariableSynchronization" },
		{ title: "tf.variable_creator_scope", type: "group", link: "tf/variable_creator_scope" },
		{ title: "tf.vectorized_map", type: "group", link: "tf/vectorized_map" },
		{ title: "tf.where", type: "group", link: "tf/where" },
		{ title: "tf.while_loop", type: "group", link: "tf/while_loop" },
		{ title: "tf.zeros", type: "group", link: "tf/zeros" },
		{ title: "tf.zeros_initializer", type: "group", link: "tf/zeros_initializer" },
		{ title: "tf.zeros_like", type: "group", link: "tf/zeros_like" }
	],
	tfAudioLinks: [
		{ title: "Overview", type: "group", link: "/tf.audio/Overview" },
		{ title: "decode_wav", type: "group", link: "/tf.audio/decode_wav" },
		{ title: "encode_wav", type: "group", link: "/tf.audio/encode_wav" },
	],
	tfAutographLinks: [
		{ title: "Overview", type: "group", link: "/tf.autograph/Overview" },
		{ title: "set_verbosity", type: "group", link: "/tf.autograph/set_verbosity" },
		{ title: "to_code", type: "group", link: "/tf.autograph/to_code" },
		{ title: "to_graph", type: "group", link: "/tf.autograph/to_graph" },
		{ title: "trace", type: "group", link: "/tf.autograph/trace" },
		{
			type: "group",
			title: "experimental",
			link: "/tf.autograph/experimental",
			children: [
				{ title: "Overview", type: "group", link: "/tf.autograph/experimental/Overview" },
				{ title: "do_not_convert", type: "group", link: "/tf.autograph/experimental/do_not_convert" },
				{ title: "Feature", type: "group", link: "/tf.autograph/experimental/Feature" }
			]
		}

	],
	tfBitwiseLinks: [],
	tfCompatLinks: [],
	tfConfigLinks: [],
	tfDataLinks: [],
	tfDebuggingLinks: [],
	tfDistributeLinks: [],
	tfDtypesLinks: [],
	tfEstimatorLinks: [],
	tfErrorsLinks: [],
	tfExperimentalLinks: [],
	tfFeatureColumnLinks: [],
	tfGraphUtilLinks: [],
	tfImageLinks: [],
	tfInitializersLinks: [],
	tfIOLinks: [],
	tfKerasLinks: [],
	tfLinalgLinks: [],
	tfLiteLinks: [],
	tfLookupLinks: [],
	tfLossesLinks: [],
	tfMathLinks: [],
	tfMetricsLinks: [],
	tfNestLinks: [],
	tfNNLinks: [],
	tfOptimizersLinks: [],
	tfQuantizationLinks: [],
	tfQueueLinks: [],
	tfRaggedLinks: [],
	tfRandomLinks: [],
	tfRawOpsLinks: [],
	tfSetsLinks: [],
	tfSignalLinks: [],
	tfSparseLinks: [],
	tfStringsLinks: [],
	tfSummaryLinks: [],
	tfSysconfigLinks: [],
	tfTestLinks: [],
	tfTpuLinks: [],
	tfTrainLinks: [],
	tfVersionLinks: [],
	tfXlaLinks: [],
	allSymbolsLinks: []
};
