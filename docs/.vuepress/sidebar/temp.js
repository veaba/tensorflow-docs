const Overview={title:"Overview",type:"group",link:"Overview"}
module.exports = {
    tfLinks: [
        { title: "Overview", type: "group", link: "/tf/Overview" },
        { title: "tf.AggregationMethod", type: "group", link: "tf/AggregationMethod" },
        { title: "tf.argsort", type: "group", link: "tf/argsort" },
        { title: "tf.batch_to_space", type: "group", link: "tf/batch_to_space" },
        { title: "tf.bitcast", type: "group", link: "tf/bitcast" },
        { title: "tf.boolean_mask", type: "group", link: "tf/boolean_mask" },
        { title: "tf.broadcast_dynamic_shape", type: "group", link: "tf/broadcast_dynamic_shape" },
        { title: "tf.broadcast_static_shape", type: "group", link: "tf/broadcast_static_shape" },
        { title: "tf.broadcast_to", type: "group", link: "tf/broadcast_to" },
        { title: "tf.case", type: "group", link: "tf/case" },
        { title: "tf.clip_by_global_norm", type: "group", link: "tf/clip_by_global_norm" },
        { title: "tf.clip_by_norm", type: "group", link: "tf/clip_by_norm" },
        { title: "tf.clip_by_value", type: "group", link: "tf/clip_by_value" },
        { title: "tf.concat", type: "group", link: "tf/concat" },
        { title: "tf.cond", type: "group", link: "tf/cond" },
        { title: "tf.constant", type: "group", link: "tf/constant" },
        { title: "tf.constant_initializer", type: "group", link: "tf/constant_initializer" },
        { title: "tf.control_dependencies", type: "group", link: "tf/control_dependencies" },
        { title: "tf.convert_to_tensor", type: "group", link: "tf/convert_to_tensor" },
        { title: "tf.CriticalSection", type: "group", link: "tf/CriticalSection" },
        { title: "tf.custom_gradient", type: "group", link: "tf/custom_gradient" },
        { title: "tf.device", type: "group", link: "tf/device" },
        { title: "tf.DeviceSpec", type: "group", link: "tf/DeviceSpec" },
        { title: "tf.dynamic_partition", type: "group", link: "tf/dynamic_partition" },
        { title: "tf.dynamic_stitch", type: "group", link: "tf/dynamic_stitch" },
        { title: "tf.edit_distance", type: "group", link: "tf/edit_distance" },
        { title: "tf.einsum", type: "group", link: "tf/einsum" },
        { title: "tf.ensure_shape", type: "group", link: "tf/ensure_shape" },
        { title: "tf.executing_eagerly", type: "group", link: "tf/executing_eagerly" },
        { title: "tf.expand_dims", type: "group", link: "tf/expand_dims" },
        { title: "tf.extract_volume_patches", type: "group", link: "tf/extract_volume_patches" },
        { title: "tf.eye", type: "group", link: "tf/eye" },
        { title: "tf.fill", type: "group", link: "tf/fill" },
        { title: "tf.fingerprint", type: "group", link: "tf/fingerprint" },
        { title: "tf.foldl", type: "group", link: "tf/foldl" },
        { title: "tf.foldr", type: "group", link: "tf/foldr" },
        { title: "tf.function", type: "group", link: "tf/function" },
        { title: "tf.gather", type: "group", link: "tf/gather" },
        { title: "tf.gather_nd", type: "group", link: "tf/gather_nd" },
        { title: "tf.get_logger", type: "group", link: "tf/get_logger" },
        { title: "tf.get_static_value", type: "group", link: "tf/get_static_value" },
        { title: "tf.gradients", type: "group", link: "tf/gradients" },
        { title: "tf.GradientTape", type: "group", link: "tf/GradientTape" },
        { title: "tf.grad_pass_through", type: "group", link: "tf/grad_pass_through" },
        { title: "tf.Graph", type: "group", link: "tf/Graph" },
        { title: "tf.group", type: "group", link: "tf/group" },
        { title: "tf.guarantee_const", type: "group", link: "tf/guarantee_const" },
        { title: "tf.hessians", type: "group", link: "tf/hessians" },
        { title: "tf.histogram_fixed_width", type: "group", link: "tf/histogram_fixed_width" },
        { title: "tf.histogram_fixed_width_bins", type: "group", link: "tf/histogram_fixed_width_bins" },
        { title: "tf.identity", type: "group", link: "tf/identity" },
        { title: "tf.identity_n", type: "group", link: "tf/identity_n" },
        { title: "tf.IndexedSlices", type: "group", link: "tf/IndexedSlices" },
        { title: "tf.IndexedSlicesSpec", type: "group", link: "tf/IndexedSlicesSpec" },
        { title: "tf.init_scope", type: "group", link: "tf/init_scope" },
        { title: "tf.is_tensor", type: "group", link: "tf/is_tensor" },
        { title: "tf.linspace", type: "group", link: "tf/linspace" },
        { title: "tf.load_library", type: "group", link: "tf/load_library" },
        { title: "tf.load_op_library", type: "group", link: "tf/load_op_library" },
        { title: "tf.make_ndarray", type: "group", link: "tf/make_ndarray" },
        { title: "tf.make_tensor_proto", type: "group", link: "tf/make_tensor_proto" },
        { title: "tf.map_fn", type: "group", link: "tf/map_fn" },
        { title: "tf.meshgrid", type: "group", link: "tf/meshgrid" },
        { title: "tf.Module", type: "group", link: "tf/Module" },
        { title: "tf.name_scope", type: "group", link: "tf/name_scope" },
        { title: "tf.nondifferentiable_batch_function", type: "group", link: "tf/nondifferentiable_batch_function" },
        { title: "tf.norm", type: "group", link: "tf/norm" },
        { title: "tf.no_gradient", type: "group", link: "tf/no_gradient" },
        { title: "tf.no_op", type: "group", link: "tf/no_op" },
        { title: "tf.numpy_function", type: "group", link: "tf/numpy_function" },
        { title: "tf.ones", type: "group", link: "tf/ones" },
        { title: "tf.ones_initializer", type: "group", link: "tf/ones_initializer" },
        { title: "tf.ones_like", type: "group", link: "tf/ones_like" },
        { title: "tf.one_hot", type: "group", link: "tf/one_hot" },
        { title: "tf.Operation", type: "group", link: "tf/Operation" },
        { title: "tf.OptionalSpec", type: "group", link: "tf/OptionalSpec" },
        { title: "tf.pad", type: "group", link: "tf/pad" },
        { title: "tf.parallel_stack", type: "group", link: "tf/parallel_stack" },
        { title: "tf.print", type: "group", link: "tf/print" },
        { title: "tf.py_function", type: "group", link: "tf/py_function" },
        { title: "tf.RaggedTensor", type: "group", link: "tf/RaggedTensor" },
        { title: "tf.RaggedTensorSpec", type: "group", link: "tf/RaggedTensorSpec" },
        { title: "tf.random_normal_initializer", type: "group", link: "tf/random_normal_initializer" },
        { title: "tf.random_uniform_initializer", type: "group", link: "tf/random_uniform_initializer" },
        { title: "tf.range", type: "group", link: "tf/range" },
        { title: "tf.rank", type: "group", link: "tf/rank" },
        { title: "tf.realdiv", type: "group", link: "tf/realdiv" },
        { title: "tf.recompute_grad", type: "group", link: "tf/recompute_grad" },
        { title: "tf.reduce_all", type: "group", link: "tf/reduce_all" },
        { title: "tf.RegisterGradient", type: "group", link: "tf/RegisterGradient" },
        { title: "tf.register_tensor_conversion_function", type: "group", link: "tf/register_tensor_conversion_function" },
        { title: "tf.required_space_to_batch_paddings", type: "group", link: "tf/required_space_to_batch_paddings" },
        { title: "tf.reshape", type: "group", link: "tf/reshape" },
        { title: "tf.reverse", type: "group", link: "tf/reverse" },
        { title: "tf.reverse_sequence", type: "group", link: "tf/reverse_sequence" },
        { title: "tf.roll", type: "group", link: "tf/roll" },
        { title: "tf.scan", type: "group", link: "tf/scan" },
        { title: "tf.scatter_nd", type: "group", link: "tf/scatter_nd" },
        { title: "tf.searchsorted", type: "group", link: "tf/searchsorted" },
        { title: "tf.sequence_mask", type: "group", link: "tf/sequence_mask" },
        { title: "tf.shape", type: "group", link: "tf/shape" },
        { title: "tf.shape_n", type: "group", link: "tf/shape_n" },
        { title: "tf.size", type: "group", link: "tf/size" },
        { title: "tf.slice", type: "group", link: "tf/slice" },
        { title: "tf.sort", type: "group", link: "tf/sort" },
        { title: "tf.space_to_batch", type: "group", link: "tf/space_to_batch" },
        { title: "tf.space_to_batch_nd", type: "group", link: "tf/space_to_batch_nd" },
        { title: "tf.SparseTensorSpec", type: "group", link: "tf/SparseTensorSpec" },
        { title: "tf.split", type: "group", link: "tf/split" },
        { title: "tf.squeeze", type: "group", link: "tf/squeeze" },
        { title: "tf.stack", type: "group", link: "tf/stack" },
        { title: "tf.stop_gradient", type: "group", link: "tf/stop_gradient" },
        { title: "tf.strided_slice", type: "group", link: "tf/strided_slice" },
        { title: "tf.switch_case", type: "group", link: "tf/switch_case" },
        { title: "tf.Tensor", type: "group", link: "tf/Tensor" },
        { title: "tf.TensorArray", type: "group", link: "tf/TensorArray" },
        { title: "tf.TensorArraySpec", type: "group", link: "tf/TensorArraySpec" },
        { title: "tf.tensordot", type: "group", link: "tf/tensordot" },
        { title: "tf.TensorShape", type: "group", link: "tf/TensorShape" },
        { title: "tf.TensorSpec", type: "group", link: "tf/TensorSpec" },
        { title: "tf.tensor_scatter_nd_add", type: "group", link: "tf/tensor_scatter_nd_add" },
        { title: "tf.tensor_scatter_nd_sub", type: "group", link: "tf/tensor_scatter_nd_sub" },
        { title: "tf.tensor_scatter_nd_update", type: "group", link: "tf/tensor_scatter_nd_update" },
        { title: "tf.tile", type: "group", link: "tf/tile" },
        { title: "tf.timestamp", type: "group", link: "tf/timestamp" },
        { title: "tf.transpose", type: "group", link: "tf/transpose" },
        { title: "tf.truncatediv", type: "group", link: "tf/truncatediv" },
        { title: "tf.truncatemod", type: "group", link: "tf/truncatemod" },
        { title: "tf.tuple", type: "group", link: "tf/tuple" },
        { title: "tf.TypeSpec", type: "group", link: "tf/TypeSpec" },
        { title: "tf.UnconnectedGradients", type: "group", link: "tf/UnconnectedGradients" },
        { title: "tf.unique", type: "group", link: "tf/unique" },
        { title: "tf.unique_with_counts", type: "group", link: "tf/unique_with_counts" },
        { title: "tf.unravel_index", type: "group", link: "tf/unravel_index" },
        { title: "tf.unstack", type: "group", link: "tf/unstack" },
        { title: "tf.Variable", type: "group", link: "tf/Variable" },
        { title: "tf.Variable.SaveSliceInfo", type: "group", link: "tf/Variable.SaveSliceInfo" },
        { title: "tf.VariableAggregation", type: "group", link: "tf/VariableAggregation" },
        { title: "tf.VariableSynchronization", type: "group", link: "tf/VariableSynchronization" },
        { title: "tf.variable_creator_scope", type: "group", link: "tf/variable_creator_scope" },
        { title: "tf.vectorized_map", type: "group", link: "tf/vectorized_map" },
        { title: "tf.where", type: "group", link: "tf/where" },
        { title: "tf.while_loop", type: "group", link: "tf/while_loop" },
        { title: "tf.zeros", type: "group", link: "tf/zeros" },
        { title: "tf.zeros_initializer", type: "group", link: "tf/zeros_initializer" },
        { title: "tf.zeros_like", type: "group", link: "tf/zeros_like" },
        { title: "tf.Overview", type: "group", link: "tf/Overview" },
        { title: "tf.AggregationMethod", type: "group", link: "tf/AggregationMethod" },
        { title: "tf.argsort", type: "group", link: "tf/argsort" },
        { title: "tf.batch_to_space", type: "group", link: "tf/batch_to_space" },
        { title: "tf.bitcast", type: "group", link: "tf/bitcast" },
        { title: "tf.boolean_mask", type: "group", link: "tf/boolean_mask" },
        { title: "tf.broadcast_dynamic_shape", type: "group", link: "tf/broadcast_dynamic_shape" },
        { title: "tf.broadcast_static_shape", type: "group", link: "tf/broadcast_static_shape" },
        { title: "tf.broadcast_to", type: "group", link: "tf/broadcast_to" },
        { title: "tf.case", type: "group", link: "tf/case" },
        { title: "tf.clip_by_global_norm", type: "group", link: "tf/clip_by_global_norm" },
        { title: "tf.clip_by_norm", type: "group", link: "tf/clip_by_norm" },
        { title: "tf.clip_by_value", type: "group", link: "tf/clip_by_value" },
        { title: "tf.concat", type: "group", link: "tf/concat" },
        { title: "tf.cond", type: "group", link: "tf/cond" },
        { title: "tf.constant", type: "group", link: "tf/constant" },
        { title: "tf.constant_initializer", type: "group", link: "tf/constant_initializer" },
        { title: "tf.control_dependencies", type: "group", link: "tf/control_dependencies" },
        { title: "tf.convert_to_tensor", type: "group", link: "tf/convert_to_tensor" },
        { title: "tf.CriticalSection", type: "group", link: "tf/CriticalSection" },
        { title: "tf.custom_gradient", type: "group", link: "tf/custom_gradient" },
        { title: "tf.device", type: "group", link: "tf/device" },
        { title: "tf.DeviceSpec", type: "group", link: "tf/DeviceSpec" },
        { title: "tf.dynamic_partition", type: "group", link: "tf/dynamic_partition" },
        { title: "tf.dynamic_stitch", type: "group", link: "tf/dynamic_stitch" },
        { title: "tf.edit_distance", type: "group", link: "tf/edit_distance" },
        { title: "tf.einsum", type: "group", link: "tf/einsum" },
        { title: "tf.ensure_shape", type: "group", link: "tf/ensure_shape" },
        { title: "tf.executing_eagerly", type: "group", link: "tf/executing_eagerly" },
        { title: "tf.expand_dims", type: "group", link: "tf/expand_dims" },
        { title: "tf.extract_volume_patches", type: "group", link: "tf/extract_volume_patches" },
        { title: "tf.eye", type: "group", link: "tf/eye" },
        { title: "tf.fill", type: "group", link: "tf/fill" },
        { title: "tf.fingerprint", type: "group", link: "tf/fingerprint" },
        { title: "tf.foldl", type: "group", link: "tf/foldl" },
        { title: "tf.foldr", type: "group", link: "tf/foldr" },
        { title: "tf.function", type: "group", link: "tf/function" },
        { title: "tf.gather", type: "group", link: "tf/gather" },
        { title: "tf.gather_nd", type: "group", link: "tf/gather_nd" },
        { title: "tf.get_logger", type: "group", link: "tf/get_logger" },
        { title: "tf.get_static_value", type: "group", link: "tf/get_static_value" },
        { title: "tf.gradients", type: "group", link: "tf/gradients" },
        { title: "tf.GradientTape", type: "group", link: "tf/GradientTape" },
        { title: "tf.grad_pass_through", type: "group", link: "tf/grad_pass_through" },
        { title: "tf.Graph", type: "group", link: "tf/Graph" },
        { title: "tf.group", type: "group", link: "tf/group" },
        { title: "tf.guarantee_const", type: "group", link: "tf/guarantee_const" },
        { title: "tf.hessians", type: "group", link: "tf/hessians" },
        { title: "tf.histogram_fixed_width", type: "group", link: "tf/histogram_fixed_width" },
        { title: "tf.histogram_fixed_width_bins", type: "group", link: "tf/histogram_fixed_width_bins" },
        { title: "tf.identity", type: "group", link: "tf/identity" },
        { title: "tf.identity_n", type: "group", link: "tf/identity_n" },
        { title: "tf.IndexedSlices", type: "group", link: "tf/IndexedSlices" },
        { title: "tf.IndexedSlicesSpec", type: "group", link: "tf/IndexedSlicesSpec" },
        { title: "tf.init_scope", type: "group", link: "tf/init_scope" },
        { title: "tf.is_tensor", type: "group", link: "tf/is_tensor" },
        { title: "tf.linspace", type: "group", link: "tf/linspace" },
        { title: "tf.load_library", type: "group", link: "tf/load_library" },
        { title: "tf.load_op_library", type: "group", link: "tf/load_op_library" },
        { title: "tf.make_ndarray", type: "group", link: "tf/make_ndarray" },
        { title: "tf.make_tensor_proto", type: "group", link: "tf/make_tensor_proto" },
        { title: "tf.map_fn", type: "group", link: "tf/map_fn" },
        { title: "tf.meshgrid", type: "group", link: "tf/meshgrid" },
        { title: "tf.Module", type: "group", link: "tf/Module" },
        { title: "tf.name_scope", type: "group", link: "tf/name_scope" },
        { title: "tf.nondifferentiable_batch_function", type: "group", link: "tf/nondifferentiable_batch_function" },
        { title: "tf.norm", type: "group", link: "tf/norm" },
        { title: "tf.no_gradient", type: "group", link: "tf/no_gradient" },
        { title: "tf.no_op", type: "group", link: "tf/no_op" },
        { title: "tf.numpy_function", type: "group", link: "tf/numpy_function" },
        { title: "tf.ones", type: "group", link: "tf/ones" },
        { title: "tf.ones_initializer", type: "group", link: "tf/ones_initializer" },
        { title: "tf.ones_like", type: "group", link: "tf/ones_like" },
        { title: "tf.one_hot", type: "group", link: "tf/one_hot" },
        { title: "tf.Operation", type: "group", link: "tf/Operation" },
        { title: "tf.OptionalSpec", type: "group", link: "tf/OptionalSpec" },
        { title: "tf.pad", type: "group", link: "tf/pad" },
        { title: "tf.parallel_stack", type: "group", link: "tf/parallel_stack" },
        { title: "tf.print", type: "group", link: "tf/print" },
        { title: "tf.py_function", type: "group", link: "tf/py_function" },
        { title: "tf.RaggedTensor", type: "group", link: "tf/RaggedTensor" },
        { title: "tf.RaggedTensorSpec", type: "group", link: "tf/RaggedTensorSpec" },
        { title: "tf.random_normal_initializer", type: "group", link: "tf/random_normal_initializer" },
        { title: "tf.random_uniform_initializer", type: "group", link: "tf/random_uniform_initializer" },
        { title: "tf.range", type: "group", link: "tf/range" },
        { title: "tf.rank", type: "group", link: "tf/rank" },
        { title: "tf.realdiv", type: "group", link: "tf/realdiv" },
        { title: "tf.recompute_grad", type: "group", link: "tf/recompute_grad" },
        { title: "tf.reduce_all", type: "group", link: "tf/reduce_all" },
        { title: "tf.RegisterGradient", type: "group", link: "tf/RegisterGradient" },
        { title: "tf.register_tensor_conversion_function", type: "group", link: "tf/register_tensor_conversion_function" },
        { title: "tf.required_space_to_batch_paddings", type: "group", link: "tf/required_space_to_batch_paddings" },
        { title: "tf.reshape", type: "group", link: "tf/reshape" },
        { title: "tf.reverse", type: "group", link: "tf/reverse" },
        { title: "tf.reverse_sequence", type: "group", link: "tf/reverse_sequence" },
        { title: "tf.roll", type: "group", link: "tf/roll" },
        { title: "tf.scan", type: "group", link: "tf/scan" },
        { title: "tf.scatter_nd", type: "group", link: "tf/scatter_nd" },
        { title: "tf.searchsorted", type: "group", link: "tf/searchsorted" },
        { title: "tf.sequence_mask", type: "group", link: "tf/sequence_mask" },
        { title: "tf.shape", type: "group", link: "tf/shape" },
        { title: "tf.shape_n", type: "group", link: "tf/shape_n" },
        { title: "tf.size", type: "group", link: "tf/size" },
        { title: "tf.slice", type: "group", link: "tf/slice" },
        { title: "tf.sort", type: "group", link: "tf/sort" },
        { title: "tf.space_to_batch", type: "group", link: "tf/space_to_batch" },
        { title: "tf.space_to_batch_nd", type: "group", link: "tf/space_to_batch_nd" },
        { title: "tf.SparseTensorSpec", type: "group", link: "tf/SparseTensorSpec" },
        { title: "tf.split", type: "group", link: "tf/split" },
        { title: "tf.squeeze", type: "group", link: "tf/squeeze" },
        { title: "tf.stack", type: "group", link: "tf/stack" },
        { title: "tf.stop_gradient", type: "group", link: "tf/stop_gradient" },
        { title: "tf.strided_slice", type: "group", link: "tf/strided_slice" },
        { title: "tf.switch_case", type: "group", link: "tf/switch_case" },
        { title: "tf.Tensor", type: "group", link: "tf/Tensor" },
        { title: "tf.TensorArray", type: "group", link: "tf/TensorArray" },
        { title: "tf.TensorArraySpec", type: "group", link: "tf/TensorArraySpec" },
        { title: "tf.tensordot", type: "group", link: "tf/tensordot" },
        { title: "tf.TensorShape", type: "group", link: "tf/TensorShape" },
        { title: "tf.TensorSpec", type: "group", link: "tf/TensorSpec" },
        { title: "tf.tensor_scatter_nd_add", type: "group", link: "tf/tensor_scatter_nd_add" },
        { title: "tf.tensor_scatter_nd_sub", type: "group", link: "tf/tensor_scatter_nd_sub" },
        { title: "tf.tensor_scatter_nd_update", type: "group", link: "tf/tensor_scatter_nd_update" },
        { title: "tf.tile", type: "group", link: "tf/tile" },
        { title: "tf.timestamp", type: "group", link: "tf/timestamp" },
        { title: "tf.transpose", type: "group", link: "tf/transpose" },
        { title: "tf.truncatediv", type: "group", link: "tf/truncatediv" },
        { title: "tf.truncatemod", type: "group", link: "tf/truncatemod" },
        { title: "tf.tuple", type: "group", link: "tf/tuple" },
        { title: "tf.TypeSpec", type: "group", link: "tf/TypeSpec" },
        { title: "tf.UnconnectedGradients", type: "group", link: "tf/UnconnectedGradients" },
        { title: "tf.unique", type: "group", link: "tf/unique" },
        { title: "tf.unique_with_counts", type: "group", link: "tf/unique_with_counts" },
        { title: "tf.unravel_index", type: "group", link: "tf/unravel_index" },
        { title: "tf.unstack", type: "group", link: "tf/unstack" },
        { title: "tf.Variable", type: "group", link: "tf/Variable" },
        { title: "tf.Variable.SaveSliceInfo", type: "group", link: "tf/Variable.SaveSliceInfo" },
        { title: "tf.VariableAggregation", type: "group", link: "tf/VariableAggregation" },
        { title: "tf.VariableSynchronization", type: "group", link: "tf/VariableSynchronization" },
        { title: "tf.variable_creator_scope", type: "group", link: "tf/variable_creator_scope" },
        { title: "tf.vectorized_map", type: "group", link: "tf/vectorized_map" },
        { title: "tf.where", type: "group", link: "tf/where" },
        { title: "tf.while_loop", type: "group", link: "tf/while_loop" },
        { title: "tf.zeros", type: "group", link: "tf/zeros" },
        { title: "tf.zeros_initializer", type: "group", link: "tf/zeros_initializer" },
        { title: "tf.zeros_like", type: "group", link: "tf/zeros_like" }
    ],
    tfAudioLinks: [
        { title: "Overview", type: "group", link: "/tf.audio/Overview" },
        { title: "decode_wav", type: "group", link: "/tf.audio/decode_wav" },
        { title: "encode_wav", type: "group", link: "/tf.audio/encode_wav" },
    ],
    tfAutographLinks: [
        { title: "Overview", type: "group", link: "/tf.autograph/Overview" },
        { title: "set_verbosity", type: "group", link: "/tf.autograph/set_verbosity" },
        { title: "to_code", type: "group", link: "/tf.autograph/to_code" },
        { title: "to_graph", type: "group", link: "/tf.autograph/to_graph" },
        { title: "trace", type: "group", link: "/tf.autograph/trace" },
        {
            type: "group",
            title: "experimental",
            link: "/tf.autograph/experimental",
            children: [
                { title: "Overview", type: "group", link: "/tf.autograph/experimental/Overview" },
                { title: "do_not_convert", type: "group", link: "/tf.autograph/experimental/do_not_convert" },
                { title: "Feature", type: "group", link: "/tf.autograph/experimental/Feature" }
            ]
        }
    ],
    tfBitwiseLinks: [
        Overview,
        { title: "bitwise_and", type: "group", link: "bitwise_and" },
        { title: "bitwise_or", type: "group", link: "bitwise_or" },
        { title: "bitwise_xor", type: "group", link: "bitwise_xor" },
        { title: "invert", type: "group", link: "invert" },
        { title: "left_shift", type: "group", link: "left_shift" },
        { title: "right_shift", type: "group", link: "right_shift" },
    ],
    tfCompatLinks: [
        Overview,
        { title: "as_bytes", type: "group", link: "as_bytes" },
        { title: "as_str_any", type: "group", link: "as_str_any" },
        { title: "as_text", type: "group", link: "as_text" },
        { title: "dimension_at_index", type: "group", link: "dimension_at_index" },
        { title: "dimension_value", type: "group", link: "dimension_value" },
        { title: "forward_compatibility_horizon", type: "group", link: "forward_compatibility_horizon" },
        { title: "forward_compatible", type: "group", link: "forward_compatible" },
        { title: "path_to_str", type: "group", link: "path_to_str" },
        {
            title: "v1", type: "group", link: "tf/v1",
            children: [
                Overview,
                { title: "add_check_numerics_ops", type: "group", link: "add_check_numerics_ops" },
                { title: "add_to_collection", type: "group", link: "add_to_collection" },
                { title: "add_to_collections", type: "group", link: "add_to_collections" },
                { title: "all_variables", type: "group", link: "all_variables" },
                { title: "argmax", type: "group", link: "argmax" },
                { title: "argmin", type: "group", link: "argmin" },
                { title: "arg_max", type: "group", link: "arg_max" },
                { title: "arg_min", type: "group", link: "arg_min" },
                { title: "assert_equal", type: "group", link: "assert_equal" },
                { title: "assert_greater", type: "group", link: "assert_greater" },
                { title: "assert_greater_equal", type: "group", link: "assert_greater_equal" },
                { title: "assert_integer", type: "group", link: "assert_integer" },
                { title: "assert_less", type: "group", link: "assert_less" },
                { title: "assert_less_equal", type: "group", link: "assert_less_equal" },
                { title: "assert_near", type: "group", link: "assert_near" },
                { title: "assert_negative", type: "group", link: "assert_negative" },
                { title: "assert_none_equal", type: "group", link: "assert_none_equal" },
                { title: "assert_non_negative", type: "group", link: "assert_non_negative" },
                { title: "assert_non_positive", type: "group", link: "assert_non_positive" },
                { title: "assert_positive", type: "group", link: "assert_positive" },
                { title: "assert_rank", type: "group", link: "assert_rank" },
                { title: "assert_rank_at_least", type: "group", link: "assert_rank_at_least" },
                { title: "assert_rank_in", type: "group", link: "assert_rank_in" },
                { title: "assert_scalar", type: "group", link: "assert_scalar" },
                { title: "assert_type", type: "group", link: "assert_type" },
                { title: "assert_variables_initialized", type: "group", link: "assert_variables_initialized" },
                { title: "assign", type: "group", link: "assign" },
                { title: "assign_add", type: "group", link: "assign_add" },
                { title: "assign_sub", type: "group", link: "assign_sub" },
                { title: "AttrValue", type: "group", link: "AttrValue" },
                { title: "AttrValue.ListValue", type: "group", link: "AttrValue.ListValue" },
                { title: "batch_gather", type: "group", link: "batch_gather" },
                { title: "batch_scatter_update", type: "group", link: "batch_scatter_update" },
                { title: "batch_to_space", type: "group", link: "batch_to_space" },
                { title: "batch_to_space_nd", type: "group", link: "batch_to_space_nd" },
                { title: "bincount", type: "group", link: "bincount" },
                { title: "boolean_mask", type: "group", link: "boolean_mask" },
                { title: "case", type: "group", link: "case" },
                { title: "clip_by_average_norm", type: "group", link: "clip_by_average_norm" },
                { title: "colocate_with", type: "group", link: "colocate_with" },
                { title: "cond", type: "group", link: "cond" },
                { title: "ConditionalAccumulator", type: "group", link: "ConditionalAccumulator" },
                { title: "ConditionalAccumulatorBase", type: "group", link: "ConditionalAccumulatorBase" },
                { title: "ConfigProto", type: "group", link: "ConfigProto" },
                { title: "ConfigProto.DeviceCountEntry", type: "group", link: "ConfigProto.DeviceCountEntry" },
                { title: "ConfigProto.Experimental", type: "group", link: "ConfigProto.Experimental" },
                { title: "confusion_matrix", type: "group", link: "confusion_matrix" },
                { title: "constant", type: "group", link: "constant" },
                { title: "container", type: "group", link: "container" },
                { title: "control_flow_v2_enabled", type: "group", link: "control_flow_v2_enabled" },
                { title: "convert_to_tensor", type: "group", link: "convert_to_tensor" },
                { title: "convert_to_tensor_or_indexed_slices", type: "group", link: "convert_to_tensor_or_indexed_slices" },
                { title: "convert_to_tensor_or_sparse_tensor", type: "group", link: "convert_to_tensor_or_sparse_tensor" },
                { title: "count_nonzero", type: "group", link: "count_nonzero" },
                { title: "count_up_to", type: "group", link: "count_up_to" },
                { title: "create_partitioned_variables", type: "group", link: "create_partitioned_variables" },
                { title: "decode_csv", type: "group", link: "decode_csv" },
                { title: "decode_raw", type: "group", link: "decode_raw" },
                { title: "delete_session_tensor", type: "group", link: "delete_session_tensor" },
                { title: "depth_to_space", type: "group", link: "depth_to_space" },
                { title: "device", type: "group", link: "device" },
                { title: "DeviceSpec", type: "group", link: "DeviceSpec" },
                { title: "Dimension", type: "group", link: "Dimension" },
                { title: "disable_control_flow_v2", type: "group", link: "disable_control_flow_v2" },
                { title: "disable_eager_execution", type: "group", link: "disable_eager_execution" },
                { title: "disable_resource_variables", type: "group", link: "disable_resource_variables" },
                { title: "disable_tensor_equality", type: "group", link: "disable_tensor_equality" },
                { title: "disable_v2_behavior", type: "group", link: "disable_v2_behavior" },
                { title: "disable_v2_tensorshape", type: "group", link: "disable_v2_tensorshape" },
                { title: "enable_control_flow_v2", type: "group", link: "enable_control_flow_v2" },
                { title: "enable_eager_execution", type: "group", link: "enable_eager_execution" },
                { title: "enable_resource_variables", type: "group", link: "enable_resource_variables" },
                { title: "enable_tensor_equality", type: "group", link: "enable_tensor_equality" },
                { title: "enable_v2_behavior", type: "group", link: "enable_v2_behavior" },
                { title: "enable_v2_tensorshape", type: "group", link: "enable_v2_tensorshape" },
                { title: "Event", type: "group", link: "Event" },
                { title: "expand_dims", type: "group", link: "expand_dims" },
                { title: "extract_image_patches", type: "group", link: "extract_image_patches" },
                { title: "FixedLengthRecordReader", type: "group", link: "FixedLengthRecordReader" },
                { title: "fixed_size_partitioner", type: "group", link: "fixed_size_partitioner" },
                { title: "floor_div", type: "group", link: "floor_div" },
                { title: "gather", type: "group", link: "gather" },
                { title: "gather_nd", type: "group", link: "gather_nd" },
                { title: "get_collection", type: "group", link: "get_collection" },
                { title: "get_collection_ref", type: "group", link: "get_collection_ref" },
                { title: "get_default_graph", type: "group", link: "get_default_graph" },
                { title: "get_default_session", type: "group", link: "get_default_session" },
                { title: "get_local_variable", type: "group", link: "get_local_variable" },
                { title: "get_seed", type: "group", link: "get_seed" },
                { title: "get_session_handle", type: "group", link: "get_session_handle" },
                { title: "get_session_tensor", type: "group", link: "get_session_tensor" },
                { title: "get_variable", type: "group", link: "get_variable" },
                { title: "get_variable_scope", type: "group", link: "get_variable_scope" },
                { title: "global_variables", type: "group", link: "global_variables" },
                { title: "global_variables_initializer", type: "group", link: "global_variables_initializer" },
                { title: "GPUOptions", type: "group", link: "GPUOptions" },
                { title: "GPUOptions.Experimental", type: "group", link: "GPUOptions.Experimental" },
                { title: "GPUOptions.Experimental.VirtualDevices", type: "group", link: "GPUOptions.Experimental.VirtualDevices" },
                { title: "gradients", type: "group", link: "gradients" },
                { title: "GraphDef", type: "group", link: "GraphDef" },
                { title: "GraphKeys", type: "group", link: "GraphKeys" },
                { title: "GraphOptions", type: "group", link: "GraphOptions" },
                { title: "hessians", type: "group", link: "hessians" },
                { title: "HistogramProto", type: "group", link: "HistogramProto" },
                { title: "IdentityReader", type: "group", link: "IdentityReader" },
                { title: "initialize_all_tables", type: "group", link: "initialize_all_tables" },
                { title: "initialize_all_variables", type: "group", link: "initialize_all_variables" },
                { title: "initialize_local_variables", type: "group", link: "initialize_local_variables" },
                { title: "initialize_variables", type: "group", link: "initialize_variables" },
                { title: "InteractiveSession", type: "group", link: "InteractiveSession" },
                { title: "is_variable_initialized", type: "group", link: "is_variable_initialized" },
                { title: "LMDBReader", type: "group", link: "LMDBReader" },
                { title: "load_file_system_library", type: "group", link: "load_file_system_library" },
                { title: "local_variables", type: "group", link: "local_variables" },
                { title: "local_variables_initializer", type: "group", link: "local_variables_initializer" },
                { title: "LogMessage", type: "group", link: "LogMessage" },
                { title: "make_template", type: "group", link: "make_template" },
                { title: "MetaGraphDef", type: "group", link: "MetaGraphDef" },
                { title: "MetaGraphDef.CollectionDefEntry", type: "group", link: "MetaGraphDef.CollectionDefEntry" },
                { title: "MetaGraphDef.MetaInfoDef", type: "group", link: "MetaGraphDef.MetaInfoDef" },
                { title: "MetaGraphDef.SignatureDefEntry", type: "group", link: "MetaGraphDef.SignatureDefEntry" },
                { title: "min_max_variable_partitioner", type: "group", link: "min_max_variable_partitioner" },
                { title: "model_variables", type: "group", link: "model_variables" },
                { title: "moving_average_variables", type: "group", link: "moving_average_variables" },
                { title: "multinomial", type: "group", link: "multinomial" },
                { title: "NameAttrList", type: "group", link: "NameAttrList" },
                { title: "NameAttrList.AttrEntry", type: "group", link: "NameAttrList.AttrEntry" },
                { title: "NodeDef", type: "group", link: "NodeDef" },
                { title: "NodeDef.AttrEntry", type: "group", link: "NodeDef.AttrEntry" },
                { title: "NodeDef.ExperimentalDebugInfo", type: "group", link: "NodeDef.ExperimentalDebugInfo" },
                { title: "norm", type: "group", link: "norm" },
                { title: "no_regularizer", type: "group", link: "no_regularizer" },
                { title: "ones_like", type: "group", link: "ones_like" },
                { title: "OptimizerOptions", type: "group", link: "OptimizerOptions" },
                { title: "op_scope", type: "group", link: "op_scope" },
                { title: "pad", type: "group", link: "pad" },
                { title: "parse_example", type: "group", link: "parse_example" },
                { title: "parse_single_example", type: "group", link: "parse_single_example" },
                { title: "placeholder", type: "group", link: "placeholder" },
                { title: "placeholder_with_default", type: "group", link: "placeholder_with_default" },
                { title: "Print", type: "group", link: "Print" },
                { title: "py_func", type: "group", link: "py_func" },
                { title: "quantize_v2", type: "group", link: "quantize_v2" },
                { title: "random_normal_initializer", type: "group", link: "random_normal_initializer" },
                { title: "random_poisson", type: "group", link: "random_poisson" },
                { title: "random_uniform_initializer", type: "group", link: "random_uniform_initializer" },
                { title: "ReaderBase", type: "group", link: "ReaderBase" },
                { title: "reduce_all", type: "group", link: "reduce_all" },
                { title: "reduce_any", type: "group", link: "reduce_any" },
                { title: "reduce_join", type: "group", link: "reduce_join" },
                { title: "reduce_logsumexp", type: "group", link: "reduce_logsumexp" },
                { title: "reduce_max", type: "group", link: "reduce_max" },
                { title: "reduce_mean", type: "group", link: "reduce_mean" },
                { title: "reduce_min", type: "group", link: "reduce_min" },
                { title: "reduce_prod", type: "group", link: "reduce_prod" },
                { title: "reduce_sum", type: "group", link: "reduce_sum" },
                { title: "report_uninitialized_variables", type: "group", link: "report_uninitialized_variables" },
                { title: "reset_default_graph", type: "group", link: "reset_default_graph" },
                { title: "resource_variables_enabled", type: "group", link: "resource_variables_enabled" },
                { title: "reverse_sequence", type: "group", link: "reverse_sequence" },
                { title: "RunMetadata", type: "group", link: "RunMetadata" },
                { title: "RunMetadata.FunctionGraphs", type: "group", link: "RunMetadata.FunctionGraphs" },
                { title: "RunOptions", type: "group", link: "RunOptions" },
                { title: "RunOptions.Experimental", type: "group", link: "RunOptions.Experimental" },
                { title: "scalar_mul", type: "group", link: "scalar_mul" },
                { title: "scatter_add", type: "group", link: "scatter_add" },
                { title: "scatter_div", type: "group", link: "scatter_div" },
                { title: "scatter_max", type: "group", link: "scatter_max" },
                { title: "scatter_min", type: "group", link: "scatter_min" },
                { title: "scatter_mul", type: "group", link: "scatter_mul" },
                { title: "scatter_nd_add", type: "group", link: "scatter_nd_add" },
                { title: "scatter_nd_sub", type: "group", link: "scatter_nd_sub" },
                { title: "scatter_nd_update", type: "group", link: "scatter_nd_update" },
                { title: "scatter_sub", type: "group", link: "scatter_sub" },
                { title: "scatter_update", type: "group", link: "scatter_update" },
                { title: "serialize_many_sparse", type: "group", link: "serialize_many_sparse" },
                { title: "serialize_sparse", type: "group", link: "serialize_sparse" },
                { title: "Session", type: "group", link: "Session" },
                { title: "SessionLog", type: "group", link: "SessionLog" },
                { title: "setdiff1d", type: "group", link: "setdiff1d" },
                { title: "set_random_seed", type: "group", link: "set_random_seed" },
                { title: "shape", type: "group", link: "shape" },
                { title: "size", type: "group", link: "size" },
                { title: "space_to_batch", type: "group", link: "space_to_batch" },
                { title: "space_to_depth", type: "group", link: "space_to_depth" },
                { title: "SparseConditionalAccumulator", type: "group", link: "SparseConditionalAccumulator" },
                { title: "SparseTensorValue", type: "group", link: "SparseTensorValue" },
                { title: "sparse_add", type: "group", link: "sparse_add" },
                { title: "sparse_concat", type: "group", link: "sparse_concat" },
                { title: "sparse_matmul", type: "group", link: "sparse_matmul" },
                { title: "sparse_merge", type: "group", link: "sparse_merge" },
                { title: "sparse_placeholder", type: "group", link: "sparse_placeholder" },
                { title: "sparse_reduce_max", type: "group", link: "sparse_reduce_max" },
                { title: "sparse_reduce_max_sparse", type: "group", link: "sparse_reduce_max_sparse" },
                { title: "sparse_reduce_sum", type: "group", link: "sparse_reduce_sum" },
                { title: "sparse_reduce_sum_sparse", type: "group", link: "sparse_reduce_sum_sparse" },
                { title: "sparse_segment_mean", type: "group", link: "sparse_segment_mean" },
                { title: "sparse_segment_sqrt_n", type: "group", link: "sparse_segment_sqrt_n" },
                { title: "sparse_segment_sum", type: "group", link: "sparse_segment_sum" },
                { title: "sparse_split", type: "group", link: "sparse_split" },
                { title: "sparse_to_dense", type: "group", link: "sparse_to_dense" },
                { title: "squeeze", type: "group", link: "squeeze" },
                { title: "string_split", type: "group", link: "string_split" },
                { title: "string_to_hash_bucket", type: "group", link: "string_to_hash_bucket" },
                { title: "string_to_number", type: "group", link: "string_to_number" },
                { title: "substr", type: "group", link: "substr" },
                { title: "Summary", type: "group", link: "Summary" },
                { title: "Summary.Audio", type: "group", link: "Summary.Audio" },
                { title: "Summary.Image", type: "group", link: "Summary.Image" },
                { title: "Summary.Value", type: "group", link: "Summary.Value" },
                { title: "SummaryMetadata", type: "group", link: "SummaryMetadata" },
                { title: "SummaryMetadata.PluginData", type: "group", link: "SummaryMetadata.PluginData" },
                { title: "tables_initializer", type: "group", link: "tables_initializer" },
                { title: "TensorInfo", type: "group", link: "TensorInfo" },
                { title: "TensorInfo.CooSparse", type: "group", link: "TensorInfo.CooSparse" },
                { title: "TextLineReader", type: "group", link: "TextLineReader" },
                { title: "TFRecordReader", type: "group", link: "TFRecordReader" },
                { title: "to_bfloat16", type: "group", link: "to_bfloat16" },
                { title: "to_complex128", type: "group", link: "to_complex128" },
                { title: "to_complex64", type: "group", link: "to_complex64" },
                { title: "to_double", type: "group", link: "to_double" },
                { title: "to_float", type: "group", link: "to_float" },
                { title: "to_int32", type: "group", link: "to_int32" },
                { title: "to_int64", type: "group", link: "to_int64" },
                { title: "trainable_variables", type: "group", link: "trainable_variables" },
                { title: "transpose", type: "group", link: "transpose" },
                { title: "truncated_normal_initializer", type: "group", link: "truncated_normal_initializer" },
                { title: "tuple", type: "group", link: "tuple" },
                { title: "uniform_unit_scaling_initializer", type: "group", link: "uniform_unit_scaling_initializer" },
                { title: "Variable", type: "group", link: "Variable" },
                { title: "VariableAggregation", type: "group", link: "VariableAggregation" },
                { title: "VariableScope", type: "group", link: "VariableScope" },
                { title: "variables_initializer", type: "group", link: "variables_initializer" },
                { title: "variable_axis_size_partitioner", type: "group", link: "variable_axis_size_partitioner" },
                { title: "variable_creator_scope", type: "group", link: "variable_creator_scope" },
                { title: "variable_op_scope", type: "group", link: "variable_op_scope" },
                { title: "variable_scope", type: "group", link: "variable_scope" },
                { title: "verify_tensor_all_finite", type: "group", link: "verify_tensor_all_finite" },
                { title: "where", type: "group", link: "where" },
                { title: "while_loop", type: "group", link: "while_loop" },
                { title: "WholeFileReader", type: "group", link: "WholeFileReader" },
                { title: "wrap_function", type: "group", link: "wrap_function" },
                { title: "zeros_like", type: "group", link: "zeros_like" },
                {title: "app", type: "group", link: "app",children: [
                        { title: "run", type: "group", link: "run" },
                        Overview,
                    ]
                },
                {title: "audio", type: "group", link: "audio",children: [
                    Overview,
                    ]
                },
                {title: "autograph", type: "group", link: "autograph",children: [
                    Overview,
                    { title: "to_code", type: "group", link: "to_code" },
                    { title: "to_graph", type: "group", link: "to_graph" },
                    { title: "experimental", type: "group", link: "experimental",children:[
                        Overview
                        ] 
                    },
                    ]
                },
                {title: "bitwise", type: "group", link: "bitwise", children: [
                        Overview,
                    ]
                },
                {title: "compat", type: "group", link: "compat", children: [
                    Overview,
                    ],
                },
                {title: "config", type: "group", link: "config", children: [
                    Overview,
                    { title: "experimental", type: "group", link: "experimental",children:[
                        Overview
                        ] 
                    },
                    { title: "optimizer", type: "group", link: "experimental",children:[
                        Overview
                        ] 
                    },
                    { title: "optimizer", type: "group", link: "experimental",children:[
                        Overview
                        ] 
                    },
                    ],
                }
            ]
        },
    ]
}