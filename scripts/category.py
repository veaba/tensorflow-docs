# /* 有问题
#                   {
#                         "data": [
#                             "Overview",
#                             "Dataset",
#                             "FixedLengthRecordDataset",
#                             "get_output_classes",
#                             "get_output_shapes",
#                             "get_output_types",
#                             "Iterator",
#                             "make_initializable_iterator",
#                             "make_one_shot_iterator",
#                             "TextLineDataset",
#                             "TFRecordDataset",
#                             {"experimental":[
#                             "Overview",
#                             "choose_from_datasets",
#                             "Counter",
#                             "CsvDataset",
#                             "make_batched_features_dataset",
#                             "make_csv_dataset",
#                             "map_and_batch_with_legacy_function",
#                             "RaggedTensorStructure",
#                             "RandomDataset",
#                             "sample_from_datasets",
#                             "SparseTensorStructure",
#                             "SqlDataset",
#                             "StatsAggregator",
#                             "TensorArrayStructure",
#                             "TensorStructure",
#                             ]},
                       
#                         ]
#                     },
#                     {"debugging": ["Overview", "assert_shapes"]},
#                     {
#                         "distribute": [
#                             "Overview",
#                             "get_loss_reduction",
#                             "MirroredStrategy",
#                             "OneDeviceStrategy",
#                             "Strategy",
#                             "StrategyExtended",
#                             {"cluster_resolver":["Overview"]},
#                             {"experimental":["Overview"]},
#                             "CentralStorageStrategy",
#                             "MultiWorkerMirroredStrategy",
#                             "ParameterServerStrategy",
#                             "TPUStrategy",


# */
category = [
    {
        "tf": [
            "Overview",
            "AggregationMethod",
            "argsort",
            "batch_to_space",
            "bitcast",
            "boolean_mask",
            "broadcast_dynamic_shape",
            "broadcast_static_shape",
            "broadcast_to",
            "case",
            "clip_by_global_norm",
            "clip_by_norm",
            "clip_by_value",
            "concat",
            "cond",
            "constant",
            "constant_initializer",
            "control_dependencies",
            "convert_to_tensor",
            "CriticalSection",
            "custom_gradient",
            "device",
            "DeviceSpec",
            "dynamic_partition",
            "dynamic_stitch",
            "edit_distance",
            "einsum",
            "ensure_shape",
            "executing_eagerly",
            "expand_dims",
            "extract_volume_patches",
            "eye",
            "fill",
            "fingerprint",
            "foldl",
            "foldr",
            "function",
            "gather",
            "gather_nd",
            "get_logger",
            "get_static_value",
            "gradients",
            "GradientTape",
            "grad_pass_through",
            "Graph",
            "group",
            "guarantee_const",
            "hessians",
            "histogram_fixed_width",
            "histogram_fixed_width_bins",
            "identity",
            "identity_n",
            "IndexedSlices",
            "IndexedSlicesSpec",
            "init_scope",
            "is_tensor",
            "linspace",
            "load_library",
            "load_op_library",
            "make_ndarray",
            "make_tensor_proto",
            "map_fn",
            "meshgrid",
            "Module",
            "name_scope",
            "nondifferentiable_batch_function",
            "norm",
            "no_gradient",
            "no_op",
            "numpy_function",
            "ones",
            "ones_initializer",
            "ones_like",
            "one_hot",
            "Operation",
            "OptionalSpec",
            "pad",
            "parallel_stack",
            "print",
            "py_function",
            "RaggedTensor",
            "RaggedTensorSpec",
            "random_normal_initializer",
            "random_uniform_initializer",
            "range",
            "rank",
            "realdiv",
            "recompute_grad",
            "reduce_all",
            "RegisterGradient",
            "register_tensor_conversion_function",
            "required_space_to_batch_paddings",
            "reshape",
            "reverse",
            "reverse_sequence",
            "roll",
            "scan",
            "scatter_nd",
            "searchsorted",
            "sequence_mask",
            "shape",
            "shape_n",
            "size",
            "slice",
            "sort",
            "space_to_batch",
            "space_to_batch_nd",
            "SparseTensorSpec",
            "split",
            "squeeze",
            "stack",
            "stop_gradient",
            "strided_slice",
            "switch_case",
            "Tensor",
            "TensorArray",
            "TensorArraySpec",
            "tensordot",
            "TensorShape",
            "TensorSpec",
            "tensor_scatter_nd_add",
            "tensor_scatter_nd_sub",
            "tensor_scatter_nd_update",
            "tile",
            "timestamp",
            "transpose",
            "truncatediv",
            "truncatemod",
            "tuple",
            "TypeSpec",
            "UnconnectedGradients",
            "unique",
            "unique_with_counts",
            "unravel_index",
            "unstack",
            "Variable",
            "Variable.SaveSliceInfo",
            "VariableAggregation",
            "VariableSynchronization",
            "variable_creator_scope",
            "vectorized_map",
            "where",
            "while_loop",
            "zeros",
            "zeros_initializer",
            "zeros_like",
            "Overview",
            "AggregationMethod",
            "argsort",
            "batch_to_space",
            "bitcast",
            "boolean_mask",
            "broadcast_dynamic_shape",
            "broadcast_static_shape",
            "broadcast_to",
            "case",
            "clip_by_global_norm",
            "clip_by_norm",
            "clip_by_value",
            "concat",
            "cond",
            "constant",
            "constant_initializer",
            "control_dependencies",
            "convert_to_tensor",
            "CriticalSection",
            "custom_gradient",
            "device",
            "DeviceSpec",
            "dynamic_partition",
            "dynamic_stitch",
            "edit_distance",
            "einsum",
            "ensure_shape",
            "executing_eagerly",
            "expand_dims",
            "extract_volume_patches",
            "eye",
            "fill",
            "fingerprint",
            "foldl",
            "foldr",
            "function",
            "gather",
            "gather_nd",
            "get_logger",
            "get_static_value",
            "gradients",
            "GradientTape",
            "grad_pass_through",
            "Graph",
            "group",
            "guarantee_const",
            "hessians",
            "histogram_fixed_width",
            "histogram_fixed_width_bins",
            "identity",
            "identity_n",
            "IndexedSlices",
            "IndexedSlicesSpec",
            "init_scope",
            "is_tensor",
            "linspace",
            "load_library",
            "load_op_library",
            "make_ndarray",
            "make_tensor_proto",
            "map_fn",
            "meshgrid",
            "Module",
            "name_scope",
            "nondifferentiable_batch_function",
            "norm",
            "no_gradient",
            "no_op",
            "numpy_function",
            "ones",
            "ones_initializer",
            "ones_like",
            "one_hot",
            "Operation",
            "OptionalSpec",
            "pad",
            "parallel_stack",
            "print",
            "py_function",
            "RaggedTensor",
            "RaggedTensorSpec",
            "random_normal_initializer",
            "random_uniform_initializer",
            "range",
            "rank",
            "realdiv",
            "recompute_grad",
            "reduce_all",
            "RegisterGradient",
            "register_tensor_conversion_function",
            "required_space_to_batch_paddings",
            "reshape",
            "reverse",
            "reverse_sequence",
            "roll",
            "scan",
            "scatter_nd",
            "searchsorted",
            "sequence_mask",
            "shape",
            "shape_n",
            "size",
            "slice",
            "sort",
            "space_to_batch",
            "space_to_batch_nd",
            "SparseTensorSpec",
            "split",
            "squeeze",
            "stack",
            "stop_gradient",
            "strided_slice",
            "switch_case",
            "Tensor",
            "TensorArray",
            "TensorArraySpec",
            "tensordot",
            "TensorShape",
            "TensorSpec",
            "tensor_scatter_nd_add",
            "tensor_scatter_nd_sub",
            "tensor_scatter_nd_update",
            "tile",
            "timestamp",
            "transpose",
            "truncatediv",
            "truncatemod",
            "tuple",
            "TypeSpec",
            "UnconnectedGradients",
            "unique",
            "unique_with_counts",
            "unravel_index",
            "unstack",
            "Variable",
            "Variable.SaveSliceInfo",
            "VariableAggregation",
            "VariableSynchronization",
            "variable_creator_scope",
            "vectorized_map",
            "where",
            "while_loop",
            "zeros",
            "zeros_initializer",
            "zeros_like",
        ]
    },
    {"tf.audio": ["Overview", "decode_wav", "encode_wav"]},
    {
        "tf.autograph": [
            "Overview",
            "set_verbosity",
            "to_code",
            "to_graph",
            "trace",
            {"experimental": ["Overview", "do_not_convert", "Feature"]},
        ]
    },
    {
        "tf.bitwise": [
            "Overview",
            "bitwise_and",
            "bitwise_or",
            "bitwise_xor",
            "invert",
            "left_shift",
            "right_shift",
        ]
    },
    {
        "tf.compat": [
            "Overview",
            "as_bytes",
            "as_str_any",
            "as_text",
            "dimension_at_index",
            "dimension_value",
            "forward_compatibility_horizon",
            "forward_compatible",
            "path_to_str",
            {
                "v1": [
                    "Overview",
                    "add_check_numerics_ops",
                    "add_to_collection",
                    "add_to_collections",
                    "all_variables",
                    "argmax",
                    "argmin",
                    "arg_max",
                    "arg_min",
                    "assert_equal",
                    "assert_greater",
                    "assert_greater_equal",
                    "assert_integer",
                    "assert_less",
                    "assert_less_equal",
                    "assert_near",
                    "assert_negative",
                    "assert_none_equal",
                    "assert_non_negative",
                    "assert_non_positive",
                    "assert_positive",
                    "assert_rank",
                    "assert_rank_at_least",
                    "assert_rank_in",
                    "assert_scalar",
                    "assert_type",
                    "assert_variables_initialized",
                    "assign",
                    "assign_add",
                    "assign_sub",
                    "AttrValue",
                    "AttrValue.ListValue",
                    "batch_gather",
                    "batch_scatter_update",
                    "batch_to_space",
                    "batch_to_space_nd",
                    "bincount",
                    "boolean_mask",
                    "case",
                    "clip_by_average_norm",
                    "colocate_with",
                    "cond",
                    "ConditionalAccumulator",
                    "ConditionalAccumulatorBase",
                    "ConfigProto",
                    "ConfigProto.DeviceCountEntry",
                    "ConfigProto.Experimental",
                    "confusion_matrix",
                    "constant",
                    "container",
                    "control_flow_v2_enabled",
                    "convert_to_tensor",
                    "convert_to_tensor_or_indexed_slices",
                    "convert_to_tensor_or_sparse_tensor",
                    "count_nonzero",
                    "count_up_to",
                    "create_partitioned_variables",
                    "decode_csv",
                    "decode_raw",
                    "delete_session_tensor",
                    "depth_to_space",
                    "device",
                    "DeviceSpec",
                    "Dimension",
                    "disable_control_flow_v2",
                    "disable_eager_execution",
                    "disable_resource_variables",
                    "disable_tensor_equality",
                    "disable_v2_behavior",
                    "disable_v2_tensorshape",
                    "enable_control_flow_v2",
                    "enable_eager_execution",
                    "enable_resource_variables",
                    "enable_tensor_equality",
                    "enable_v2_behavior",
                    "enable_v2_tensorshape",
                    "Event",
                    "expand_dims",
                    "extract_image_patches",
                    "FixedLengthRecordReader",
                    "fixed_size_partitioner",
                    "floor_div",
                    "gather",
                    "gather_nd",
                    "get_collection",
                    "get_collection_ref",
                    "get_default_graph",
                    "get_default_session",
                    "get_local_variable",
                    "get_seed",
                    "get_session_handle",
                    "get_session_tensor",
                    "get_variable",
                    "get_variable_scope",
                    "global_variables",
                    "global_variables_initializer",
                    "GPUOptions",
                    "GPUOptions.Experimental",
                    "GPUOptions.Experimental.VirtualDevices",
                    "gradients",
                    "GraphDef",
                    "GraphKeys",
                    "GraphOptions",
                    "hessians",
                    "HistogramProto",
                    "IdentityReader",
                    "initialize_all_tables",
                    "initialize_all_variables",
                    "initialize_local_variables",
                    "initialize_variables",
                    "InteractiveSession",
                    "is_variable_initialized",
                    "LMDBReader",
                    "load_file_system_library",
                    "local_variables",
                    "local_variables_initializer",
                    "LogMessage",
                    "make_template",
                    "MetaGraphDef",
                    "MetaGraphDef.CollectionDefEntry",
                    "MetaGraphDef.MetaInfoDef",
                    "MetaGraphDef.SignatureDefEntry",
                    "min_max_variable_partitioner",
                    "model_variables",
                    "moving_average_variables",
                    "multinomial",
                    "NameAttrList",
                    "NameAttrList.AttrEntry",
                    "NodeDef",
                    "NodeDef.AttrEntry",
                    "NodeDef.ExperimentalDebugInfo",
                    "norm",
                    "no_regularizer",
                    "ones_like",
                    "OptimizerOptions",
                    "op_scope",
                    "pad",
                    "parse_example",
                    "parse_single_example",
                    "placeholder",
                    "placeholder_with_default",
                    "Print",
                    "py_func",
                    "quantize_v2",
                    "random_normal_initializer",
                    "random_poisson",
                    "random_uniform_initializer",
                    "ReaderBase",
                    "reduce_all",
                    "reduce_any",
                    "reduce_join",
                    "reduce_logsumexp",
                    "reduce_max",
                    "reduce_mean",
                    "reduce_min",
                    "reduce_prod",
                    "reduce_sum",
                    "report_uninitialized_variables",
                    "reset_default_graph",
                    "resource_variables_enabled",
                    "reverse_sequence",
                    "RunMetadata",
                    "RunMetadata.FunctionGraphs",
                    "RunOptions",
                    "RunOptions.Experimental",
                    "scalar_mul",
                    "scatter_add",
                    "scatter_div",
                    "scatter_max",
                    "scatter_min",
                    "scatter_mul",
                    "scatter_nd_add",
                    "scatter_nd_sub",
                    "scatter_nd_update",
                    "scatter_sub",
                    "scatter_update",
                    "serialize_many_sparse",
                    "serialize_sparse",
                    "Session",
                    "SessionLog",
                    "setdiff1d",
                    "set_random_seed",
                    "shape",
                    "size",
                    "space_to_batch",
                    "space_to_depth",
                    "SparseConditionalAccumulator",
                    "SparseTensorValue",
                    "sparse_add",
                    "sparse_concat",
                    "sparse_matmul",
                    "sparse_merge",
                    "sparse_placeholder",
                    "sparse_reduce_max",
                    "sparse_reduce_max_sparse",
                    "sparse_reduce_sum",
                    "sparse_reduce_sum_sparse",
                    "sparse_segment_mean",
                    "sparse_segment_sqrt_n",
                    "sparse_segment_sum",
                    "sparse_split",
                    "sparse_to_dense",
                    "squeeze",
                    "string_split",
                    "string_to_hash_bucket",
                    "string_to_number",
                    "substr",
                    "Summary",
                    "Summary.Audio",
                    "Summary.Image",
                    "Summary.Value",
                    "SummaryMetadata",
                    "SummaryMetadata.PluginData",
                    "tables_initializer",
                    "TensorInfo",
                    "TensorInfo.CooSparse",
                    "TextLineReader",
                    "TFRecordReader",
                    "to_bfloat16",
                    "to_complex128",
                    "to_complex64",
                    "to_double",
                    "to_float",
                    "to_int32",
                    "to_int64",
                    "trainable_variables",
                    "transpose",
                    "truncated_normal_initializer",
                    "tuple",
                    "uniform_unit_scaling_initializer",
                    "Variable",
                    "VariableAggregation",
                    "VariableScope",
                    "variables_initializer",
                    "variable_axis_size_partitioner",
                    "variable_creator_scope",
                    "variable_op_scope",
                    "variable_scope",
                    "verify_tensor_all_finite",
                    "where",
                    "while_loop",
                    "WholeFileReader",
                    "wrap_function",
                    "zeros_like",
                    {"app": [
                        "Overview", 
                        "run"]},
                    {"audio": ["Overview"]},
                    {
                        "autograph": [
                            "Overview",
                            "to_code",
                            "to_graph",
                            {"experimental":[
                                "Overview"
                            ]},
                        ]
                    },
                    {"bitwise": ["Overview"]},
                    {"compat": ["Overview"]},
                    {
                        "config": [
                            "Overview",
                            {"experimental":["Overview"]},
                            {"optimizer":["Overview"]},
                            {"optimizer":["Overview"]},
                        ]
                    },
                    {
                        "data": [
                            "Overview",
                            "Dataset",
                            "FixedLengthRecordDataset",
                            "get_output_classes",
                            "get_output_shapes",
                            "get_output_types",
                            "Iterator",
                            "make_initializable_iterator",
                            "make_one_shot_iterator",
                            "TextLineDataset",
                            "TFRecordDataset",
                            {"experimental":[
                            "Overview",
                            "choose_from_datasets",
                            "Counter",
                            "CsvDataset",
                            "make_batched_features_dataset",
                            "make_csv_dataset",
                            "map_and_batch_with_legacy_function",
                            "RaggedTensorStructure",
                            "RandomDataset",
                            "sample_from_datasets",
                            "SparseTensorStructure",
                            "SqlDataset",
                            "StatsAggregator",
                            "TensorArrayStructure",
                            "TensorStructure",
                            ]},
                       
                        ]
                    },
                    {"debugging": ["Overview", "assert_shapes"]},
                    {
                        "distribute": [
                            "Overview",
                            "get_loss_reduction",
                            "MirroredStrategy",
                            "OneDeviceStrategy",
                            "Strategy",
                            "StrategyExtended",
                            {"cluster_resolver":["Overview"]},
                            {"experimental":["Overview"]},
                            "CentralStorageStrategy",
                            "MultiWorkerMirroredStrategy",
                            "ParameterServerStrategy",
                            "TPUStrategy",
                        ]
                    },
                    {
                        "distributions": [
                            "Overview",
                            "Bernoulli",
                            "Beta",
                            "Categorical",
                            "Dirichlet",
                            "DirichletMultinomial",
                            "Distribution",
                            "Exponential",
                            "Gamma",
                            "kl_divergence",
                            "Laplace",
                            "Multinomial",
                            "Normal",
                            "RegisterKL",
                            "ReparameterizationType",
                            "StudentT",
                            "Uniform",
                        ]
                    },
                    {"dtypes": ["Overview"]},
                    {
                        "errors": [
                            "Overview",
                            "error_code_from_exception_type",
                            "exception_type_from_error_code",
                            "raise_exception_on_not_ok_status",
                        ]
                    },
                    {
                        "estimator": [
                            "Overview",
                            "BaselineClassifier",
                            "BaselineEstimator",
                            "BaselineRegressor",
                            "classifier_parse_example_spec",
                            "DNNClassifier",
                            "DNNEstimator",
                            "DNNLinearCombinedClassifier",
                            "DNNLinearCombinedEstimator",
                            "DNNLinearCombinedRegressor",
                            "DNNRegressor",
                            "Estimator",
                            "LinearClassifier",
                            "LinearEstimator",
                            "LinearRegressor",
                            "regressor_parse_example_spec",
                            {
                                "experimental": [
                                    "Overview",
                                    "dnn_logit_fn_builder",
                                    "KMeans",
                                    "linear_logit_fn_builder",
                                ]
                            },
                            {"export": ["Overview"]},
                            {
                                "inputs": [
                                    "Overview",
                                    "numpy_input_fn",
                                    "pandas_input_fn",
                                ]
                            },
                            {
                                "tpu": [
                                    "Overview",
                                    "InputPipelineConfig",
                                    "RunConfig",
                                    "TPUConfig",
                                    "TPUEstimator",
                                    "TPUEstimatorSpec",
                                    {
                                        "experimental": [
                                            "Overview",
                                            "EmbeddingConfigSpec",
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {"experimental": ["Overview", "output_all_intermediates"]},
                    {
                        "feature_column": [
                            "Overview",
                            "categorical_column_with_vocabulary_file",
                            "input_layer",
                            "linear_model",
                            "make_parse_example_spec",
                            "shared_embedding_columns",
                        ]
                    },
                    {
                        "flags": [
                            "Overview",
                            "adopt_module_key_flags",
                            "ArgumentParser",
                            "ArgumentSerializer",
                            "BaseListParser",
                            "BooleanFlag",
                            "BooleanParser",
                            "CantOpenFlagFileError",
                            "CsvListSerializer",
                            "declare_key_flag",
                            "DEFINE",
                            "DEFINE_alias",
                            "DEFINE_bool",
                            "DEFINE_enum",
                            "DEFINE_enum_class",
                            "DEFINE_flag",
                            "DEFINE_float",
                            "DEFINE_integer",
                            "DEFINE_list",
                            "DEFINE_multi",
                            "DEFINE_multi_enum",
                            "DEFINE_multi_enum_class",
                            "DEFINE_multi_float",
                            "DEFINE_multi_integer",
                            "DEFINE_multi_string",
                            "DEFINE_spaceseplist",
                            "DEFINE_string",
                            "disclaim_key_flags",
                            "doc_to_help",
                            "DuplicateFlagError",
                            "EnumClassFlag",
                            "EnumClassParser",
                            "EnumFlag",
                            "EnumParser",
                            "Error",
                            "Flag",
                            "FlagNameConflictsWithMethodError",
                            "FlagValues",
                            "flag_dict_to_args",
                            "FloatParser",
                            "get_help_width",
                            "IllegalFlagValueError",
                            "IntegerParser",
                            "ListParser",
                            "ListSerializer",
                            "mark_bool_flags_as_mutual_exclusive",
                            "mark_flags_as_mutual_exclusive",
                            "mark_flags_as_required",
                            "mark_flag_as_required",
                            "MultiEnumClassFlag",
                            "MultiFlag",
                            "multi_flags_validator",
                            "register_multi_flags_validator",
                            "register_validator",
                            "text_wrap",
                            "UnparsedFlagAccessError",
                            "UnrecognizedFlagError",
                            "ValidationError",
                            "validator",
                            "WhitespaceSeparatedListParser",
                            {
                                "tf_decorator": [
                                    "Overview",
                                    "make_decorator",
                                    "rewrap",
                                    "TFDecorator",
                                    "unwrap",
                                    {
                                        "tf_stack": [
                                            "Overview",
                                            "convert_stack",
                                            "CurrentModuleFilter",
                                            "extract_stack",
                                            "extract_stack_file_and_line",
                                            "FileAndLine",
                                            "StackTraceFilter",
                                            "StackTraceMapper",
                                            "StackTraceTransform",
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "gfile": [
                            "Overview",
                            "Copy",
                            "DeleteRecursively",
                            "Exists",
                            "FastGFile",
                            "Glob",
                            "IsDirectory",
                            "ListDirectory",
                            "MakeDirs",
                            "MkDir",
                            "Remove",
                            "Rename",
                            "Stat",
                            "Walk",
                        ]
                    },
                    {
                        "graph_util": [
                            "Overview",
                            "convert_variables_to_constants",
                            "extract_sub_graph",
                            "must_run_on_cpu",
                            "remove_training_nodes",
                            "tensor_shape_from_node_def_name",
                        ]
                    },
                    {
                        "image": [
                            "Overview",
                            "crop_and_resize",
                            "draw_bounding_boxes",
                            "extract_glimpse",
                            "resize",
                            "ResizeMethod",
                            "resize_area",
                            "resize_bicubic",
                            "resize_bilinear",
                            "resize_image_with_pad",
                            "resize_nearest_neighbor",
                            "sample_distorted_bounding_box",
                        ]
                    },
                    {"initializers": ["Overview"]},
                    {
                        "io": [
                            "Overview",
                            "TFRecordCompressionType",
                            "tf_record_iterator",
                            {"gfile": ["Overview"]},
                        ]
                    },
                    {
                        "keras": [
                            "Overview",
                            {"activations": ["Overview"]},
                            {
                                "applications": [
                                    "Overview",
                                    {"densenet": ["Overview"]},
                                    {"imagenet_utils": ["Overview"]},
                                    {"inception_resnet_v2": ["Overview"]},
                                    {"inception_v3": ["Overview"]},
                                    {"mobilenet": ["Overview"]},
                                    {"mobilenet_v2": ["Overview"]},
                                    {"nasnet": ["Overview"]},
                                    {"resnet": "Overview"},
                                    {"resnet50": "Overview"},
                                    {"resnet_v2": "Overview"},
                                    {"vgg16": "Overview"},
                                    {"vgg19": "Overview"},
                                    {"xception": ["Overview"]},
                                ]
                            },
                            {
                                "backend": [
                                    "Overview",
                                    "get_session",
                                    "name_scope",
                                    "set_session",
                                ]
                            },
                            {"callbacks": ["Overview", "TensorBoard"]},
                            {"constraints": ["Overview"]},
                            {
                                "datasets": [
                                    "Overview",
                                    {"boston_housing": ["Overview"]},
                                    {"cifar10": ["Overview"]},
                                    {"cifar100": ["Overview"]},
                                    {"fashion_mnist": ["Overview"]},
                                    {"imdb": ["Overview"]},
                                    {"mnist": ["Overview"]},
                                    {"reuters": ["Overview"]},
                                ]
                            },
                            {"estimator": ["Overview", "model_to_estimator"]},
                            {"experimental": ["Overview"]},
                            {
                                "initializers": [
                                    "Overview",
                                    "Constant",
                                    "glorot_normal",
                                    "glorot_uniform",
                                    "he_normal",
                                    "he_uniform",
                                    "Identity",
                                    "Initializer",
                                    "lecun_normal",
                                    "lecun_uniform",
                                    "Ones",
                                    "Orthogonal",
                                    "RandomNormal",
                                    "RandomUniform",
                                    "TruncatedNormal",
                                    "VarianceScaling",
                                    "Zeros",
                                ]
                            },
                            {
                                "layers": [
                                    "Overview",
                                    "BatchNormalization",
                                    "CuDNNGRU",
                                    "CuDNNLSTM",
                                    "DenseFeatures",
                                    "GRU",
                                    "GRUCell",
                                    "LSTM",
                                    "LSTMCell",
                                ]
                            },
                            {"losses": ["Overview"]},
                            {"metrics": ["Overview"]},
                            {"mixed_precision": ["Overview"]},
                            {"experimental": ["Overview"]},
                            {"models": ["Overview"]},
                            {"optimizers": ["Overview", {"schedules": ["Overview"]}]},
                            {
                                "preprocessing": [
                                    "Overview",
                                    {"image": ["Overview"]},
                                    {"sequence": ["Overview"]},
                                    {"text": ["Overview"]},
                                ]
                            },
                            {"regularizers": ["Overview"]},
                            {"utils": ["Overview"]},
                            {"wrappers": ["Overview", {"scikit_learn": ["Overview"]}]},
                        ]
                    },
                    {
                        "layers": [
                            "Overview",
                            "AveragePooling1D",
                            "AveragePooling2D",
                            "AveragePooling3D",
                            "average_pooling1d",
                            "average_pooling2d",
                            "average_pooling3d",
                            "BatchNormalization",
                            "batch_normalization",
                            "Conv1D",
                            "conv1d",
                            "Conv2D",
                            "conv2d",
                            "Conv2DTranspose",
                            "conv2d_transpose",
                            "Conv3D",
                            "conv3d",
                            "Conv3DTranspose",
                            "conv3d_transpose",
                            "Dense",
                            "dense",
                            "Dropout",
                            "dropout",
                            "Flatten",
                            "flatten",
                            "Layer",
                            "MaxPooling1D",
                            "MaxPooling2D",
                            "MaxPooling3D",
                            "max_pooling1d",
                            "max_pooling2d",
                            "max_pooling3d",
                            "SeparableConv1D",
                            "SeparableConv2D",
                            "separable_conv1d",
                            "separable_conv2d",
                            {
                                "experimental": [
                                    "Overview",
                                    "keras_style_scope",
                                    "set_keras_style",
                                ]
                            },
                        ]
                    },
                    {"linalg": ["Overview", "l2_normalize"]},
                    {
                        "lite": [
                            "Overview",
                            "OpHint",
                            "OpHint.OpHintArgumentTracker",
                            "TFLiteConverter",
                            "TocoConverter",
                            "toco_convert",
                            {"constants": ["Overview"]},
                            {
                                "experimental": [
                                    "Overview",
                                    "convert_op_hints_to_stubs",
                                    "get_potentially_supported_ops",
                                    {
                                        "nn": [
                                            "Overview",
                                            "dynamic_rnn",
                                            "TFLiteLSTMCell",
                                            "TfLiteRNNCell",
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "logging": [
                            "Overview",
                            "debug",
                            "error",
                            "fatal",
                            "flush",
                            "get_verbosity",
                            "info",
                            "log",
                            "log_every_n",
                            "log_first_n",
                            "log_if",
                            "set_verbosity",
                            "TaskLevelStatusMessage",
                            "vlog",
                            "warn",
                            "warning",
                        ]
                    },
                    {
                        "lookup": [
                            "Overview",
                            "StaticHashTable",
                            "StaticVocabularyTable",
                            {"experimental": ["Overview"]},
                        ]
                    },
                    {
                        "losses": [
                            "Overview",
                            "absolute_difference",
                            "add_loss",
                            "compute_weighted_loss",
                            "cosine_distance",
                            "get_losses",
                            "get_regularization_loss",
                            "get_regularization_losses",
                            "get_total_loss",
                            "hinge_loss",
                            "huber_loss",
                            "log_loss",
                            "mean_pairwise_squared_error",
                            "mean_squared_error",
                            "Reduction",
                            "sigmoid_cross_entropy",
                            "softmax_cross_entropy",
                            "sparse_softmax_cross_entropy",
                        ]
                    },
                    {"manip": ["Overview"]},
                    {"math": ["Overview", "in_top_k", "log_softmax", "softmax"]},
                    {
                        "metrics": [
                            "Overview",
                            "accuracy",
                            "auc",
                            "average_precision_at_k",
                            "false_negatives",
                            "false_negatives_at_thresholds",
                            "false_positives",
                            "false_positives_at_thresholds",
                            "mean",
                            "mean_absolute_error",
                            "mean_cosine_distance",
                            "mean_iou",
                            "mean_per_class_accuracy",
                            "mean_relative_error",
                            "mean_squared_error",
                            "mean_tensor",
                            "percentage_below",
                            "precision",
                            "precision_at_k",
                            "precision_at_thresholds",
                            "precision_at_top_k",
                            "recall",
                            "recall_at_k",
                            "recall_at_thresholds",
                            "recall_at_top_k",
                            "root_mean_squared_error",
                            "sensitivity_at_specificity",
                            "sparse_average_precision_at_k",
                            "sparse_precision_at_k",
                            "specificity_at_sensitivity",
                            "true_negatives",
                            "true_negatives_at_thresholds",
                            "true_positives",
                            "true_positives_at_thresholds",
                        ]
                    },
                    {"nest": ["Overview"]},
                    {
                        "nn": [
                            "Overview",
                            "avg_pool",
                            "batch_norm_with_global_normalization",
                            "bidirectional_dynamic_rnn",
                            "conv1d",
                            "conv2d",
                            "conv2d_backprop_filter",
                            "conv2d_backprop_input",
                            "conv2d_transpose",
                            "conv3d",
                            "conv3d_backprop_filter",
                            "conv3d_transpose",
                            "convolution",
                            "crelu",
                            "ctc_beam_search_decoder",
                            "ctc_loss",
                            "depthwise_conv2d",
                            "depthwise_conv2d_native",
                            "dilation2d",
                            "dropout",
                            "dynamic_rnn",
                            "embedding_lookup",
                            "embedding_lookup_sparse",
                            "erosion2d",
                            "fractional_avg_pool",
                            "fractional_max_pool",
                            "fused_batch_norm",
                            "max_pool",
                            "max_pool_with_argmax",
                            "moments",
                            "nce_loss",
                            "pool",
                            "quantized_avg_pool",
                            "quantized_conv2d",
                            "quantized_max_pool",
                            "quantized_relu_x",
                            "raw_rnn",
                            "relu_layer",
                            "safe_embedding_lookup_sparse",
                            "sampled_softmax_loss",
                            "separable_conv2d",
                            "sigmoid_cross_entropy_with_logits",
                            "softmax_cross_entropy_with_logits",
                            "softmax_cross_entropy_with_logits_v2",
                            "sparse_softmax_cross_entropy_with_logits",
                            "static_bidirectional_rnn",
                            "static_rnn",
                            "static_state_saving_rnn",
                            "sufficient_statistics",
                            "weighted_cross_entropy_with_logits",
                            "weighted_moments",
                            "xw_plus_b",
                            {
                                "rnn_cell": [
                                    "Overview",
                                    "BasicLSTMCell",
                                    "BasicRNNCell",
                                    "DeviceWrapper",
                                    "DropoutWrapper",
                                    "GRUCell",
                                    "LSTMCell",
                                    "LSTMStateTuple",
                                    "MultiRNNCell",
                                    "ResidualWrapper",
                                    "RNNCell",
                                ]
                            },
                        ]
                    },
                    {
                        "profiler": [
                            "Overview",
                            "AdviceProto",
                            "AdviceProto.Checker",
                            "AdviceProto.CheckersEntry",
                            "advise",
                            "GraphNodeProto",
                            "GraphNodeProto.InputShapesEntry",
                            "MultiGraphNodeProto",
                            "OpLogProto",
                            "OpLogProto.IdToStringEntry",
                            "profile",
                            "ProfileOptionBuilder",
                            "Profiler",
                            "write_op_log",
                        ]
                    },
                    {"python_io": ["Overview"]},
                    {"quantization": ["Overview"]},
                    {"queue": ["Overview"]},
                    {
                        "ragged": [
                            "Overview",
                            "constant_value",
                            "placeholder",
                            "RaggedTensorValue",
                        ]
                    },
                    {
                        "random": [
                            "Overview",
                            "stateless_multinomial",
                            {"experimental": ["Overview"]},
                        ]
                    },
                    {"raw_ops": ["Overview"]},
                    {
                        "resource_loader": [
                            "Overview",
                            "get_data_files_path",
                            "get_path_to_datafile",
                            "get_root_dir_with_all_resources",
                            "load_resource",
                            "readahead_file_path",
                        ]
                    },
                    {
                        "saved_model": [
                            "Overview",
                            "Builder",
                            "build_signature_def",
                            "build_tensor_info",
                            "classification_signature_def",
                            "contains_saved_model",
                            "get_tensor_from_tensor_info",
                            "is_valid_signature",
                            "load",
                            "main_op_with_restore",
                            "predict_signature_def",
                            "regression_signature_def",
                            "simple_save",
                            {"builder": ["Overview"]},
                            {"constants": "Overview"},
                            {"experimental": ["Overview"]},
                            {"loader": ["Overview"]},
                            {"main_op": ["Overview", "main_op"]},
                            {"signature_constants": ["Overview"]},
                            {"signature_def_utils": ["Overview"]},
                            {"tag_constants": ["Overview"]},
                            {"utils": ["Overview"]},
                        ]
                    },
                    {"sets": ["Overview"]},
                    {"signal": ["Overview"]},
                    {"sparse": ["Overview"]},
                    {"spectral": ["Overview"]},
                    {"strings": ["Overview", "length", "split", "substr"]},
                    {
                        "summary": [
                            "Overview",
                            "all_v2_summary_ops",
                            "audio",
                            "FileWriter",
                            "FileWriterCache",
                            "get_summary_description",
                            "histogram",
                            "image",
                            "initialize",
                            "merge",
                            "merge_all",
                            "scalar",
                            "SummaryDescription",
                            "TaggedRunMetadata",
                            "tensor_summary",
                            "text",
                        ]
                    },
                    {"sysconfig": ["Overview"]},
                    {
                        "test": [
                            "Overview",
                            "assert_equal_graph_def",
                            "compute_gradient",
                            "compute_gradient_error",
                            "get_temp_dir",
                            "StubOutForTesting",
                            "test_src_dir_path",
                        ]
                    },
                    {
                        "tpu": [
                            "Overview",
                            "batch_parallel",
                            "bfloat16_scope",
                            "core",
                            "CrossShardOptimizer",
                            "cross_replica_sum",
                            "initialize_system",
                            "outside_compilation",
                            "replicate",
                            "rewrite",
                            "shard",
                            "shutdown_system",
                            {
                                "experimental": [
                                    "Overview",
                                    "AdagradParameters",
                                    "AdamParameters",
                                    "embedding_column",
                                    "shared_embedding_columns",
                                    "StochasticGradientDescentParameters",
                                ]
                            },
                        ]
                    },
                    {
                        "train": [
                            "Overview",
                            "AdadeltaOptimizer",
                            "AdagradDAOptimizer",
                            "AdagradOptimizer",
                            "AdamOptimizer",
                            "add_queue_runner",
                            "assert_global_step",
                            "basic_train_loop",
                            "batch",
                            "batch_join",
                            "Checkpoint",
                            "checkpoint_exists",
                            "ChiefSessionCreator",
                            "cosine_decay",
                            "cosine_decay_restarts",
                            "create_global_step",
                            "do_quantize_training_on_graphdef",
                            "exponential_decay",
                            "export_meta_graph",
                            "FtrlOptimizer",
                            "generate_checkpoint_state_proto",
                            "get_checkpoint_mtimes",
                            "get_global_step",
                            "get_or_create_global_step",
                            "global_step",
                            "GradientDescentOptimizer",
                            "import_meta_graph",
                            "init_from_checkpoint",
                            "input_producer",
                            "inverse_time_decay",
                            "limit_epochs",
                            "linear_cosine_decay",
                            "LooperThread",
                            "maybe_batch",
                            "maybe_batch_join",
                            "maybe_shuffle_batch",
                            "maybe_shuffle_batch_join",
                            "MomentumOptimizer",
                            "MonitoredSession",
                            "MonitoredSession.StepContext",
                            "MonitoredTrainingSession",
                            "natural_exp_decay",
                            "NewCheckpointReader",
                            "noisy_linear_cosine_decay",
                            "Optimizer",
                            "piecewise_constant",
                            "polynomial_decay",
                            "ProximalAdagradOptimizer",
                            "ProximalGradientDescentOptimizer",
                            "QueueRunner",
                            "range_input_producer",
                            "remove_checkpoint",
                            "replica_device_setter",
                            "RMSPropOptimizer",
                            "Saver",
                            "SaverDef",
                            "Scaffold",
                            "sdca_fprint",
                            "sdca_optimizer",
                            "sdca_shrink_l1",
                            "SessionCreator",
                            "SessionManager",
                            "shuffle_batch",
                            "shuffle_batch_join",
                            "SingularMonitoredSession",
                            "slice_input_producer",
                            "start_queue_runners",
                            "string_input_producer",
                            "summary_iterator",
                            "Supervisor",
                            "SyncReplicasOptimizer",
                            "update_checkpoint_state",
                            "warm_start",
                            "WorkerSessionCreator",
                            {
                                "experimental": [
                                    "Overview",
                                    "disable_mixed_precision_graph_rewrite",
                                    "enable_mixed_precision_graph_rewrite",
                                    "MixedPrecisionLossScaleOptimizer",
                                ]
                            },
                            {"queue_runner": ["Overview"]},
                        ]
                    },
                    {"user_ops": ["Overview", "my_fact"]},
                    {"version": ["Overview"]},
                    {"xla": ["Overview", {"experimental": ["Overview"]}]},
                ]
            },
            {
                "v2": [
                    "Overview",
                    {"audio": ["Overview"]},
                    {"autograph": ["Overview", {"experimental": ["Overview"]}]},
                    {"bitwise": ["Overview"]},
                    {"compat": ["Overview"]},
                    {
                        "config": [
                            "Overview",
                            {"experimental": ["Overview"]},
                            {"optimizer": ["Overview"]},
                            {"threading": ["Overview"]},
                        ]
                    },
                    {"data": ["Overview", {"experimental": ["Overview"]}]},
                    {"debugging": ["Overview"]},
                    "distribute",
                    "Overview",
                    "cluster_resolver",
                    "Overview",
                    "experimental",
                    "Overview",
                    "dtypes",
                    "Overview",
                    "errors",
                    "Overview",
                    {"estimator": [["Overview"], {"experimental": ["Overview"]}]},
                    {"feature_column": ["Overview"]},
                    {"graph_util": ["Overview"]},
                    {"image": ["Overview"]},
                    {"io": ["Overview", {"gfile": ["Overview"]}]},
                    {
                        "keras": [
                            "Overview",
                            {"activations": ["Overview"]},
                            {
                                "applications": [
                                    "Overview",
                                    {"densenet": ["Overview"]},
                                    {"imagenet_utils": ["Overview"]},
                                    {"inception_resnet_v2": ["Overview"]},
                                    {"inception_v3": ["Overview"]},
                                    {"mobilenet": ["Overview"]},
                                    {"mobilenet_v2": ["Overview"]},
                                    {"nasnet": ["Overview"]},
                                    {"resnet": ["Overview"]},
                                    {"resnet50": ["Overview"]},
                                    {"resnet_v2": ["Overview"]},
                                    {"vgg16": ["Overview"]},
                                    {"vgg19": ["Overview"]},
                                    {"xception": ["Overview"]},
                                ]
                            },
                            {"backend": ["Overview"]},
                            {"callbacks": ["Overview"]},
                            {"constraints": ["Overview"]},
                            {
                                "datasets": [
                                    "Overview",
                                    {"boston_housing": ["Overview"]},
                                    {"cifar10": ["Overview"]},
                                    {"cifar100": ["Overview"]},
                                    {"fashion_mnist": ["Overview"]},
                                    {"imdb": ["Overview"]},
                                    {"mnist": ["Overview"]},
                                    {"reuters": ["Overview"]},
                                ]
                            },
                            {"estimator": ["Overview"]},
                            {"experimental": ["Overview"]},
                            {"initializers": ["Overview"]},
                            {"layers": ["Overview"]},
                            {"losses": ["Overview"]},
                            {"metrics": ["Overview"]},
                            {
                                "mixed_precision": [
                                    "Overview",
                                    {"experimental": ["Overview"]},
                                ]
                            },
                            {"models": ["Overview"]},
                            {"optimizers": ["Overview", {"schedules": ["Overview"]}]},
                            {
                                "preprocessing": [
                                    "Overview",
                                    {"image": ["Overview"]},
                                    {"sequence": ["Overview"]},
                                    {"text": ["Overview"]},
                                ]
                            },
                            {"regularizers": ["Overview"]},
                            {"utils": ["Overview"]},
                            {"wrappers": ["Overview", {"scikit_learn": ["Overview"]}]},
                        ]
                    },
                    {"linalg": ["Overview"]},
                    {"lite": ["Overview", {"experimental": ["Overview"]}]},
                    {"lookup": ["Overview", {"experimental": ["Overview"]}]},
                    {"math": ["Overview"]},
                    {"nest": ["Overview"]},
                    {"nn": ["Overview"]},
                    {"quantization": ["Overview"]},
                    {"queue": ["Overview"]},
                    {"ragged": ["Overview"]},
                    {"random": ["Overview", {"experimental": ["Overview"]}]},
                    {"raw_ops": ["Overview"]},
                    {"saved_model": ["Overview"]},
                    {"sets": ["Overview"]},
                    {"signal": ["Overview"]},
                    {"sparse": "Overview"},
                    {"strings": ["Overview"]},
                    {"sysconfig": ["Overview"]},
                    {"test": ["Overview"]},
                    {"tpu": ["Overview", {"experimental": ["Overview"]}]},
                    {"train": ["Overview", {"experimental": ["Overview"]}]},
                    {"version": ["Overview"]},
                    {"xla": ["Overview", {"experimental": ["Overview"]}]},
                ]
            },
        ]
    },
    {
        "tf.config": [
            "Overview",
            "experimental_connect_to_cluster",
            "experimental_connect_to_host",
            "experimental_list_devices",
            "experimental_run_functions_eagerly",
            "get_soft_device_placement",
            "set_soft_device_placement",
            {
                "experimental": [
                    "Overview",
                    "get_device_policy",
                    "get_memory_growth",
                    "get_synchronous_execution",
                    "get_virtual_device_configuration",
                    "get_visible_devices",
                    "list_logical_devices",
                    "list_physical_devices",
                    "set_device_policy",
                    "set_memory_growth",
                    "set_synchronous_execution",
                    "set_virtual_device_configuration",
                    "set_visible_devices",
                    "VirtualDeviceConfiguration",
                ]
            },
            {
                "optimizer": [
                    "Overview",
                    "get_experimental_options",
                    "get_jit",
                    "set_experimental_options",
                    "set_jit",
                ]
            },
            {
                "threading": [
                    "Overview",
                    "get_inter_op_parallelism_threads",
                    "get_intra_op_parallelism_threads",
                    "set_inter_op_parallelism_threads",
                    "set_intra_op_parallelism_threads",
                ]
            },
        ]
    },
    {
        "tf.data": [
            "Overview",
            "Dataset",
            "DatasetSpec",
            "FixedLengthRecordDataset",
            "Options",
            "TextLineDataset",
            "TFRecordDataset",
            {
                "experimental": [
                    "Overview",
                    "bucket_by_sequence_length",
                    "bytes_produced_stats",
                    "cardinality",
                    "CheckpointInputPipelineHook",
                    "choose_from_datasets",
                    "copy_to_device",
                    "Counter",
                    "CsvDataset",
                    "dense_to_sparse_batch",
                    "DistributeOptions",
                    "enumerate_dataset",
                    "from_variant",
                    "get_next_as_optional",
                    "get_single_element",
                    "get_structure",
                    "group_by_reducer",
                    "group_by_window",
                    "ignore_errors",
                    "latency_stats",
                    "make_batched_features_dataset",
                    "make_csv_dataset",
                    "make_saveable_from_iterator",
                    "MapVectorizationOptions",
                    "map_and_batch",
                    "OptimizationOptions",
                    "Optional",
                    "parallel_interleave",
                    "parse_example_dataset",
                    "prefetch_to_device",
                    "RandomDataset",
                    "Reducer",
                    "rejection_resample",
                    "sample_from_datasets",
                    "scan",
                    "shuffle_and_repeat",
                    "SqlDataset",
                    "StatsAggregator",
                    "StatsOptions",
                    "take_while",
                    "TFRecordWriter",
                    "ThreadingOptions",
                    "to_variant",
                    "unbatch",
                    "unique",
                ]
            },
        ]
    },
    {
        "tf.debugging": [
            "Overview",
            "Assert",
            "assert_all_finite",
            "assert_equal",
            "assert_greater",
            "assert_greater_equal",
            "assert_integer",
            "assert_less",
            "assert_less_equal",
            "assert_near",
            "assert_negative",
            "assert_none_equal",
            "assert_non_negative",
            "assert_non_positive",
            "assert_positive",
            "assert_proper_iterable",
            "assert_rank",
            "assert_rank_at_least",
            "assert_rank_in",
            "assert_same_float_dtype",
            "assert_scalar",
            "assert_shapes",
            "assert_type",
            "check_numerics",
            "get_log_device_placement",
            "is_numeric_tensor",
            "set_log_device_placement",
        ]
    },
    {
        "tf.distribute": [
            "Overview",
            "CrossDeviceOps",
            "experimental_set_strategy",
            "get_replica_context",
            "get_strategy",
            "has_strategy",
            "HierarchicalCopyAllReduce",
            "InputContext",
            "InputReplicationMode",
            "in_cross_replica_context",
            "MirroredStrategy",
            "NcclAllReduce",
            "OneDeviceStrategy",
            "ReduceOp",
            "ReductionToOneDevice",
            "ReplicaContext",
            "Server",
            "Strategy",
            "StrategyExtended",
            {
                "cluster_resolver": [
                    "Overview",
                    "ClusterResolver",
                    "GCEClusterResolver",
                    "KubernetesClusterResolver",
                    "SimpleClusterResolver",
                    "SlurmClusterResolver",
                    "TFConfigClusterResolver",
                    "TPUClusterResolver",
                    "UnionResolver",
                ]
            },
            {
                "experimental": [
                    "Overview",
                    "CentralStorageStrategy",
                    "CollectiveCommunication",
                    "MultiWorkerMirroredStrategy",
                    "ParameterServerStrategy",
                    "TPUStrategy",
                ]
            },
        ]
    },
    {
        "tf.dtypes": [
            "Overview",
            "as_dtype",
            "cast",
            "complex",
            "DType",
            "saturate_cast",
        ]
    },
    {
        "tf.errors": [
            "Overview",
            "AbortedError",
            "AlreadyExistsError",
            "CancelledError",
            "DataLossError",
            "DeadlineExceededError",
            "FailedPreconditionError",
            "InternalError",
            "InvalidArgumentError",
            "NotFoundError",
            "OpError",
            "OutOfRangeError",
            "PermissionDeniedError",
            "ResourceExhaustedError",
            "UnauthenticatedError",
            "UnavailableError",
            "UnimplementedError",
            "UnknownError",
        ]
    },
    {
        "tf.estimator": [
            "Overview",
            "add_metrics",
            "BaselineClassifier",
            "BaselineEstimator",
            "BaselineRegressor",
            "BestExporter",
            "BinaryClassHead",
            "BoostedTreesClassifier",
            "BoostedTreesEstimator",
            "BoostedTreesRegressor",
            "CheckpointSaverHook",
            "CheckpointSaverListener",
            "classifier_parse_example_spec",
            "DNNClassifier",
            "DNNEstimator",
            "DNNLinearCombinedClassifier",
            "DNNLinearCombinedEstimator",
            "DNNLinearCombinedRegressor",
            "DNNRegressor",
            "Estimator",
            "EstimatorSpec",
            "EvalSpec",
            "Exporter",
            "FeedFnHook",
            "FinalExporter",
            "FinalOpsHook",
            "GlobalStepWaiterHook",
            "Head",
            "LatestExporter",
            "LinearClassifier",
            "LinearEstimator",
            "LinearRegressor",
            "LoggingTensorHook",
            "LogisticRegressionHead",
            "ModeKeys",
            "MultiClassHead",
            "MultiHead",
            "MultiLabelHead",
            "NanLossDuringTrainingError",
            "NanTensorHook",
            "PoissonRegressionHead",
            "ProfilerHook",
            "RegressionHead",
            "regressor_parse_example_spec",
            "RunConfig",
            "SecondOrStepTimer",
            "SessionRunArgs",
            "SessionRunContext",
            "SessionRunHook",
            "SessionRunValues",
            "StepCounterHook",
            "StopAtStepHook",
            "SummarySaverHook",
            "TrainSpec",
            "train_and_evaluate",
            "VocabInfo",
            "WarmStartSettings",
            {
                "experimental": [
                    "Overview",
                    "build_raw_supervised_input_receiver_fn",
                    "call_logit_fn",
                    "InMemoryEvaluatorHook",
                    "LinearSDCA",
                    "make_early_stopping_hook",
                    "make_stop_at_checkpoint_step_hook",
                    "RNNClassifier",
                    "RNNEstimator",
                    "stop_if_higher_hook",
                    "stop_if_lower_hook",
                    "stop_if_no_decrease_hook",
                    "stop_if_no_increase_hook",
                ]
            },
            {
                "export": [
                    "Overview",
                    "build_parsing_serving_input_receiver_fn",
                    "build_raw_serving_input_receiver_fn",
                    "ClassificationOutput",
                    "ExportOutput",
                    "PredictOutput",
                    "RegressionOutput",
                    "ServingInputReceiver",
                    "TensorServingInputReceiver",
                ]
            },
        ]
    },
    {"tf.experimental": ["Overview", "function_executor_type"]},
    {
        "tf.feature_column": [
            "Overview",
            "bucketized_column",
            "categorical_column_with_hash_bucket",
            "categorical_column_with_identity",
            "categorical_column_with_vocabulary_file",
            "categorical_column_with_vocabulary_list",
            "crossed_column",
            "embedding_column",
            "indicator_column",
            "make_parse_example_spec",
            "numeric_column",
            "sequence_categorical_column_with_hash_bucket",
            "sequence_categorical_column_with_identity",
            "sequence_categorical_column_with_vocabulary_file",
            "sequence_categorical_column_with_vocabulary_list",
            "sequence_numeric_column",
            "shared_embeddings",
            "weighted_categorical_column",
        ]
    },
    {"tf.graph_util": ["Overview", "import_graph_def"]},
    {
        "tf.image": [
            "Overview",
            "adjust_brightness",
            "adjust_contrast",
            "adjust_gamma",
            "adjust_hue",
            "adjust_jpeg_quality",
            "adjust_saturation",
            "central_crop",
            "combined_non_max_suppression",
            "convert_image_dtype",
            "crop_and_resize",
            "crop_to_bounding_box",
            "draw_bounding_boxes",
            "encode_png",
            "extract_glimpse",
            "extract_patches",
            "flip_left_right",
            "flip_up_down",
            "grayscale_to_rgb",
            "hsv_to_rgb",
            "image_gradients",
            "non_max_suppression",
            "non_max_suppression_overlaps",
            "non_max_suppression_padded",
            "non_max_suppression_with_scores",
            "pad_to_bounding_box",
            "per_image_standardization",
            "psnr",
            "random_brightness",
            "random_contrast",
            "random_crop",
            "random_flip_left_right",
            "random_flip_up_down",
            "random_hue",
            "random_jpeg_quality",
            "random_saturation",
            "resize",
            "ResizeMethod",
            "resize_with_crop_or_pad",
            "resize_with_pad",
            "rgb_to_grayscale",
            "rgb_to_hsv",
            "rgb_to_yiq",
            "rgb_to_yuv",
            "rot90",
            "sample_distorted_bounding_box",
            "sobel_edges",
            "ssim",
            "ssim_multiscale",
            "total_variation",
            "transpose",
            "yiq_to_rgb",
            "yuv_to_rgb",
        ]
    },
    {"tf.initializers": ["Overview"]},
    {
        "tf.io": [
            "Overview",
            "decode_and_crop_jpeg",
            "decode_base64",
            "decode_bmp",
            "decode_compressed",
            "decode_csv",
            "decode_gif",
            "decode_image",
            "decode_jpeg",
            "decode_json_example",
            "decode_png",
            "decode_proto",
            "decode_raw",
            "deserialize_many_sparse",
            "encode_base64",
            "encode_jpeg",
            "encode_proto",
            "extract_jpeg_shape",
            "FixedLenFeature",
            "FixedLenSequenceFeature",
            "is_jpeg",
            "matching_files",
            "match_filenames_once",
            "parse_example",
            "parse_sequence_example",
            "parse_single_example",
            "parse_single_sequence_example",
            "parse_tensor",
            "read_file",
            "serialize_many_sparse",
            "serialize_sparse",
            "serialize_tensor",
            "SparseFeature",
            "TFRecordOptions",
            "TFRecordWriter",
            "VarLenFeature",
            "write_file",
            "write_graph`",
            {
                "gfile": [
                    "Overview",
                    "copy",
                    "exists",
                    "GFile",
                    "glob",
                    "isdir",
                    "listdir",
                    "makedirs",
                    "mkdir",
                    "remove",
                    "rename",
                    "rmtree",
                    "stat",
                    "walk",
                ]
            },
        ]
    },
    {
        "tf.keras": [
            "Overview",
            "Input",
            "Model",
            "Sequential",
            {
                "activations": [
                    "Overview",
                    "deserialize",
                    "elu",
                    "exponential",
                    "get",
                    "hard_sigmoid",
                    "linear",
                    "relu",
                    "selu",
                    "serialize",
                    "sigmoid",
                    "softmax",
                    "softplus",
                    "softsign",
                    "tanh",
                ]
            },
            {
                "applications": [
                    "Overview",
                    "DenseNet121",
                    "DenseNet169",
                    "DenseNet201",
                    "InceptionResNetV2",
                    "InceptionV3",
                    "MobileNet",
                    "MobileNetV2",
                    "NASNetLarge",
                    "NASNetMobile",
                    "ResNet101",
                    "ResNet101V2",
                    "ResNet152",
                    "ResNet152V2",
                    "ResNet50",
                    "ResNet50V2",
                    "VGG16",
                    "VGG19",
                    "Xception",
                    {
                        "densenet": [
                            "Overview",
                            "decode_predictions",
                            "preprocess_input",
                        ]
                    },
                    {
                        "imagenet_utils": [
                            "Overview",
                            "decode_predictions",
                            "preprocess_input",
                        ]
                    },
                    {
                        "inception_resnet_v2": [
                            "Overview",
                            "decode_predictions",
                            "preprocess_input",
                        ]
                    },
                    {
                        "inception_v3": [
                            "Overview",
                            "decode_predictions",
                            "preprocess_input",
                        ]
                    },
                    {
                        "mobilenet": [
                            "Overview",
                            "decode_predictions",
                            "preprocess_input",
                        ]
                    },
                    {
                        "mobilenet_v2": [
                            "Overview",
                            "decode_predictions",
                            "preprocess_input",
                        ]
                    },
                    {"nasnet": ["Overview", "decode_predictions", "preprocess_input"]},
                    {"resnet": ["Overview", "decode_predictions", "preprocess_input"]},
                    {"resnet50": ["Overview"]},
                    {
                        "resnet_v2": [
                            "Overview",
                            "decode_predictions",
                            "preprocess_input",
                        ]
                    },
                    {"vgg16": ["Overview", "decode_predictions", "preprocess_input"]},
                    {"vgg19": ["Overview", "decode_predictions", "preprocess_input"]},
                    {
                        "xception": [
                            "Overview",
                            "decode_predictions",
                            "preprocess_input",
                        ]
                    },
                ]
            },
            {
                "backend": [
                    "Overview",
                    "abs",
                    "all",
                    "any",
                    "arange",
                    "argmax",
                    "argmin",
                    "backend",
                    "batch_dot",
                    "batch_flatten",
                    "batch_get_value",
                    "batch_normalization",
                    "batch_set_value",
                    "bias_add",
                    "binary_crossentropy",
                    "cast",
                    "cast_to_floatx",
                    "categorical_crossentropy",
                    "clear_session",
                    "clip",
                    "concatenate",
                    "constant",
                    "conv1d",
                    "conv2d",
                    "conv2d_transpose",
                    "conv3d",
                    "cos",
                    "count_params",
                    "ctc_batch_cost",
                    "ctc_decode",
                    "ctc_label_dense_to_sparse",
                    "cumprod",
                    "cumsum",
                    "dot",
                    "dropout",
                    "dtype",
                    "elu",
                    "epsilon",
                    "equal",
                    "eval",
                    "exp",
                    "expand_dims",
                    "eye",
                    "flatten",
                    "floatx",
                    "foldl",
                    "foldr",
                    "function",
                    "gather",
                    "get_uid",
                    "get_value",
                    "gradients",
                    "greater",
                    "greater_equal",
                    "hard_sigmoid",
                    "image_data_format",
                    "int_shape",
                    "in_test_phase",
                    "in_top_k",
                    "in_train_phase",
                    "is_keras_tensor",
                    "is_sparse",
                    "l2_normalize",
                    "learning_phase",
                    "learning_phase_scope",
                    "less",
                    "less_equal",
                    "local_conv1d",
                    "local_conv2d",
                    "log",
                    "manual_variable_initialization",
                    "map_fn",
                    "max",
                    "maximum",
                    "mean",
                    "min",
                    "minimum",
                    "moving_average_update",
                    "name_scope",
                    "ndim",
                    "normalize_batch_in_training",
                    "not_equal",
                    "ones",
                    "ones_like",
                    "one_hot",
                    "permute_dimensions",
                    "placeholder",
                    "pool2d",
                    "pool3d",
                    "pow",
                    "print_tensor",
                    "prod",
                    "random_binomial",
                    "random_normal",
                    "random_normal_variable",
                    "random_uniform",
                    "random_uniform_variable",
                    "relu",
                    "repeat",
                    "repeat_elements",
                    "reset_uids",
                    "reshape",
                    "resize_images",
                    "resize_volumes",
                    "reverse",
                    "rnn",
                    "round",
                    "separable_conv2d",
                    "set_epsilon",
                    "set_floatx",
                    "set_image_data_format",
                    "set_learning_phase",
                    "set_value",
                    "shape",
                    "sigmoid",
                    "sign",
                    "sin",
                    "softmax",
                    "softplus",
                    "softsign",
                    "sparse_categorical_crossentropy",
                    "spatial_2d_padding",
                    "spatial_3d_padding",
                    "sqrt",
                    "square",
                    "squeeze",
                    "stack",
                    "std",
                    "stop_gradient",
                    "sum",
                    "switch",
                    "tanh",
                    "temporal_padding",
                    "tile",
                    "to_dense",
                    "transpose",
                    "truncated_normal",
                    "update",
                    "update_add",
                    "update_sub",
                    "var",
                    "variable",
                    "zeros",
                    "zeros_like",
                ]
            },
            {
                "callbacks": [
                    "Overview",
                    "BaseLogger",
                    "Callback",
                    "CSVLogger",
                    "EarlyStopping",
                    "History",
                    "LambdaCallback",
                    "LearningRateScheduler",
                    "ModelCheckpoint",
                    "ProgbarLogger",
                    "ReduceLROnPlateau",
                    "RemoteMonitor",
                    "TensorBoard",
                    "TerminateOnNaN",
                ]
            },
            {
                "constraints": [
                    "Overview",
                    "Constraint",
                    "deserialize",
                    "get",
                    "MaxNorm",
                    "MinMaxNorm",
                    "NonNeg",
                    "RadialConstraint",
                    "serialize",
                    "UnitNorm",
                ]
            },
            {
                "datasets": [
                    "Overview",
                    {"boston_housing": ["Overview", "load_data"]},
                    {"cifar10": ["Overview", "load_data"]},
                    {"cifar100": ["Overview", "load_data"]},
                    {"fashion_mnist": ["Overview", "load_data"]},
                    {"imdb": ["Overvie", "wget_word_index", "load_data"]},
                    {"mnist": ["Overview", "load_data"]},
                    {"reuters": ["Overview", "get_word_index", "load_data"]},
                    {"rstimator": ["Overview", "model_to_estimator"]},
                ]
            },
            {"estimator": ["Overview", "model_to_estimator"]},
            {
                "estimator": [
                    "Overview",
                    "CosineDecay",
                    "CosineDecayRestarts",
                    "export_saved_model",
                    "LinearCosineDecay",
                    "LinearModel",
                    "load_from_saved_model",
                    "NoisyLinearCosineDecay",
                    "PeepholeLSTMCell",
                    "SequenceFeatures",
                    "terminate_keras_multiprocessing_pools",
                    "WideDeepModel",
                ]
            },
            {
                "initializers": [
                    "Overview",
                    "deserialize",
                    "get",
                    "GlorotNormal",
                    "GlorotUniform",
                    "he_normal",
                    "he_uniform",
                    "Identity",
                    "Initializer",
                    "lecun_normal",
                    "lecun_uniform",
                    "Orthogonal",
                    "serialize",
                    "TruncatedNormal",
                    "VarianceScaling",
                ]
            },
            {
                "layers": [
                    "Overview",
                    "AbstractRNNCell",
                    "Activation",
                    "ActivityRegularization",
                    "Add",
                    "add",
                    "AdditiveAttention",
                    "AlphaDropout",
                    "Attention",
                    "Average",
                    "average",
                    "AveragePooling1D",
                    "AveragePooling2D",
                    "AveragePooling3D",
                    "BatchNormalization",
                    "Bidirectional",
                    "Concatenate",
                    "concatenate",
                    "Conv1D",
                    "Conv2D",
                    "Conv2DTranspose",
                    "Conv3D",
                    "Conv3DTranspose",
                    "ConvLSTM2D",
                    "Cropping1D",
                    "Cropping2D",
                    "Cropping3D",
                    "Dense",
                    "DenseFeatures",
                    "DepthwiseConv2D",
                    "deserialize",
                    "Dot",
                    "dot",
                    "Dropout",
                    "ELU",
                    "Embedding",
                    "Flatten",
                    "GaussianDropout",
                    "GaussianNoise",
                    "GlobalAveragePooling1D",
                    "GlobalAveragePooling2D",
                    "GlobalAveragePooling3D",
                    "GlobalMaxPool1D",
                    "GlobalMaxPool2D",
                    "GlobalMaxPool3D",
                    "GRU",
                    "GRUCell",
                    "InputLayer",
                    "InputSpec",
                    "Lambda",
                    "Layer",
                    "LayerNormalization",
                    "LeakyReLU",
                    "LocallyConnected1D",
                    "LocallyConnected2D",
                    "LSTM",
                    "LSTMCell",
                    "Masking",
                    "Maximum",
                    "maximum",
                    "MaxPool1D",
                    "MaxPool2D",
                    "MaxPool3D",
                    "Minimum",
                    "minimum",
                    "Multiply",
                    "multiply",
                    "Permute",
                    "PReLU",
                    "ReLU",
                    "RepeatVector",
                    "Reshape",
                    "RNN",
                    "SeparableConv1D",
                    "SeparableConv2D",
                    "serialize",
                    "SimpleRNN",
                    "SimpleRNNCell",
                    "Softmax",
                    "SpatialDropout1D",
                    "SpatialDropout2D",
                    "SpatialDropout3D",
                    "StackedRNNCells",
                    "Subtract",
                    "subtract",
                    "ThresholdedReLU",
                    "TimeDistributed",
                    "UpSampling1D",
                    "UpSampling2D",
                    "UpSampling3D",
                    "Wrapper",
                    "ZeroPadding1D",
                    "ZeroPadding2D",
                    "ZeroPadding3D",
                ]
            },
            {
                "losses": [
                    "Overview",
                    "BinaryCrossentropy",
                    "binary_crossentropy",
                    "CategoricalCrossentropy",
                    "CategoricalHinge",
                    "categorical_crossentropy",
                    "categorical_hinge",
                    "CosineSimilarity",
                    "cosine_similarity",
                    "deserialize",
                    "get",
                    "Hinge",
                    "hinge",
                    "Huber",
                    "KLD",
                    "KLDivergence",
                    "LogCosh",
                    "logcosh",
                    "Loss",
                    "MAE",
                    "MAPE",
                    "MeanAbsoluteError",
                    "MeanAbsolutePercentageError",
                    "MeanSquaredError",
                    "MeanSquaredLogarithmicError",
                    "MSE",
                    "MSLE",
                    "Poisson",
                    "poisson",
                    "Reduction",
                    "serialize",
                    "SparseCategoricalCrossentropy",
                    "sparse_categorical_crossentropy",
                    "SquaredHinge",
                    "squared_hinge",
                ]
            },
            {
                "metrics": [
                    "Overview",
                    "Accuracy",
                    "AUC",
                    "BinaryAccuracy",
                    "BinaryCrossentropy",
                    "binary_accuracy",
                    "CategoricalAccuracy",
                    "CategoricalCrossentropy",
                    "CategoricalHinge",
                    "categorical_accuracy",
                    "CosineSimilarity",
                    "deserialize",
                    "FalseNegatives",
                    "FalsePositives",
                    "get",
                    "Hinge",
                    "KLDivergence",
                    "LogCoshError",
                    "Mean",
                    "MeanAbsoluteError",
                    "MeanAbsolutePercentageError",
                    "MeanIoU",
                    "MeanRelativeError",
                    "MeanSquaredError",
                    "MeanSquaredLogarithmicError",
                    "MeanTensor",
                    "Metric",
                    "Poisson",
                    "Precision",
                    "Recall",
                    "RootMeanSquaredError",
                    "SensitivityAtSpecificity",
                    "serialize",
                    "SparseCategoricalAccuracy",
                    "SparseCategoricalCrossentropy",
                    "SparseTopKCategoricalAccuracy",
                    "sparse_categorical_accuracy",
                    "sparse_top_k_categorical_accuracy",
                    "SpecificityAtSensitivity",
                    "SquaredHinge",
                    "Sum",
                    "TopKCategoricalAccuracy",
                    "top_k_categorical_accuracy",
                    "TrueNegatives",
                    "TruePositives",
                ]
            },
            {
                "mixed_precision": [
                    "Overview",
                    {
                        "experimental": [
                            "Overview",
                            "global_policy",
                            "LossScaleOptimizer",
                            "Policy",
                            "set_policy",
                        ]
                    },
                ]
            },
            {
                "models": [
                    "Overview",
                    "clone_model",
                    "load_model",
                    "model_from_config",
                    "model_from_json",
                    "model_from_yaml",
                    "save_model",
                ]
            },
            {
                "optimizers": [
                    "Overview",
                    "Adadelta",
                    "Adagrad",
                    "Adam",
                    "Adamax",
                    "deserialize",
                    "Ftrl",
                    "get",
                    "Nadam",
                    "Optimizer",
                    "RMSprop",
                    "serialize",
                    "SGD",
                    {
                        "schedules": [
                            "Overview",
                            "deserialize",
                            "ExponentialDecay",
                            "InverseTimeDecay",
                            "LearningRateSchedule",
                            "PiecewiseConstantDecay",
                            "PolynomialDecay",
                            "serialize",
                        ]
                    },
                ]
            },
            {
                "preprocessing": [
                    "Overview",
                    {
                        "image": [
                            "Overview",
                            "apply_affine_transform",
                            "apply_brightness_shift",
                            "apply_channel_shift",
                            "array_to_img",
                            "DirectoryIterator",
                            "ImageDataGenerator",
                            "img_to_array",
                            "Iterator",
                            "load_img",
                            "NumpyArrayIterator",
                            "random_brightness",
                            "random_channel_shift",
                            "random_rotation",
                            "random_shear",
                            "random_shift",
                            "random_zoom",
                            "save_img",
                        ]
                    },
                    {
                        "sequence": [
                            "Overview",
                            "make_sampling_table",
                            "pad_sequences",
                            "skipgrams",
                            "TimeseriesGenerator",
                        ]
                    },
                    {
                        "text": [
                            "Overview",
                            "hashing_trick",
                            "one_hot",
                            "text_to_word_sequence",
                            "Tokenizer",
                        ]
                    },
                ]
            },
            {
                "regularizers": [
                    "Overview",
                    "deserialize",
                    "get",
                    "l1",
                    "L1L2",
                    "l1_l2",
                    "l2",
                    "Regularizer",
                    "serialize",
                ]
            },
            {
                "utils": [
                    "Overview",
                    "convert_all_kernels_in_model",
                    "CustomObjectScope",
                    "custom_object_scope",
                    "deserialize_keras_object",
                    "GeneratorEnqueuer",
                    "get_custom_objects",
                    "get_file",
                    "get_source_inputs",
                    "HDF5Matrix",
                    "model_to_dot",
                    "multi_gpu_model",
                    "normalize",
                    "OrderedEnqueuer",
                    "plot_model",
                    "Progbar",
                    "Sequence",
                    "SequenceEnqueuer",
                    "serialize_keras_object",
                    "to_categorical",
                ]
            },
            {
                "wrappers": [
                    "Overview",
                    {"scikit_learn": ["Overview", "KerasClassifier", "KerasRegressor"]},
                ]
            },
        ]
    },
    {
        "tf.linalg": [
            "Overview",
            "adjoint",
            "band_part",
            "cholesky",
            "cholesky_solve",
            "cross",
            "det",
            "diag",
            "diag_part",
            "eigh",
            "eigvalsh",
            "expm",
            "global_norm",
            "inv",
            "LinearOperator",
            "LinearOperatorAdjoint",
            "LinearOperatorBlockDiag",
            "LinearOperatorCirculant",
            "LinearOperatorCirculant2D",
            "LinearOperatorCirculant3D",
            "LinearOperatorComposition",
            "LinearOperatorDiag",
            "LinearOperatorFullMatrix",
            "LinearOperatorHouseholder",
            "LinearOperatorIdentity",
            "LinearOperatorInversion",
            "LinearOperatorKronecker",
            "LinearOperatorLowerTriangular",
            "LinearOperatorLowRankUpdate",
            "LinearOperatorScaledIdentity",
            "LinearOperatorToeplitz",
            "LinearOperatorZeros",
            "logdet",
            "logm",
            "lstsq",
            "lu",
            "matmul",
            "matrix_transpose",
            "matvec",
            "normalize",
            "qr",
            "set_diag",
            "slogdet",
            "solve",
            "sqrtm",
            "svd",
            "tensor_diag",
            "tensor_diag_part",
            "trace",
            "triangular_solve",
            "tridiagonal_matmul",
            "tridiagonal_solve",
        ]
    },
    {
        "tf.lite": [
            "Overview",
            "Interpreter",
            "OpsSet",
            "Optimize",
            "RepresentativeDataset",
            "TargetSpec",
            "TFLiteConverter",
            {"experimental": ["Overview", "load_delegate"]},
        ]
    },
    {
        "tf.lookup": [
            "Overview",
            "KeyValueTensorInitializer",
            "StaticHashTable",
            "StaticVocabularyTable",
            "TextFileIndex",
            "TextFileInitializer",
            {"experimental": ["Overview", "DenseHashTable"]},
        ]
    },
    {"tf.losses": ["Overview"]},
    {
        "tf.math": [
            "Overview",
            "abs",
            "accumulate_n",
            "acos",
            "acosh",
            "add",
            "add_n",
            "angle",
            "argmax",
            "argmin",
            "asin",
            "asinh",
            "atan",
            "atan2",
            "atanh",
            "bessel_i0",
            "bessel_i0e",
            "bessel_i1",
            "bessel_i1e",
            "betainc",
            "bincount",
            "ceil",
            "confusion_matrix",
            "conj",
            "cos",
            "cosh",
            "count_nonzero",
            "cumprod",
            "cumsum",
            "cumulative_logsumexp",
            "digamma",
            "divide",
            "divide_no_nan",
            "equal",
            "erf",
            "erfc",
            "exp",
            "expm1",
            "floor",
            "floordiv",
            "floormod",
            "greater",
            "greater_equal",
            "igamma",
            "igammac",
            "imag",
            "invert_permutation",
            "in_top_k",
            "is_finite",
            "is_inf",
            "is_nan",
            "is_non_decreasing",
            "is_strictly_increasing",
            "l2_normalize",
            "lbeta",
            "less",
            "less_equal",
            "lgamma",
            "log",
            "log1p",
            "logical_and",
            "logical_not",
            "logical_or",
            "logical_xor",
            "log_sigmoid",
            "maximum",
            "minimum",
            "multiply",
            "multiply_no_nan",
            "negative",
            "nextafter",
            "not_equal",
            "polygamma",
            "polyval",
            "pow",
            "real",
            "reciprocal",
            "reciprocal_no_nan",
            "reduce_any",
            "reduce_euclidean_norm",
            "reduce_logsumexp",
            "reduce_max",
            "reduce_mean",
            "reduce_min",
            "reduce_prod",
            "reduce_std",
            "reduce_sum",
            "reduce_variance",
            "rint",
            "round",
            "rsqrt",
            "scalar_mul",
            "segment_max",
            "segment_mean",
            "segment_min",
            "segment_prod",
            "segment_sum",
            "sigmoid",
            "sign",
            "sin",
            "sinh",
            "softplus",
            "sqrt",
            "square",
            "squared_difference",
            "subtract",
            "tan",
            "tanh",
            "top_k",
            "truediv",
            "unsorted_segment_max",
            "unsorted_segment_mean",
            "unsorted_segment_min",
            "unsorted_segment_prod",
            "unsorted_segment_sqrt_n",
            "unsorted_segment_sum",
            "xdivy",
            "xlogy",
            "zero_fraction",
            "zeta",
        ]
    },
    {"tf.metrics": ["Overview"]},
    {
        "tf.nest": [
            "Overview",
            "assert_same_structure",
            "flatten",
            "is_nested",
            "map_structure",
            "pack_sequence_as",
        ]
    },
    {
        "tf.nn": [
            "Overview",
            "atrous_conv2d",
            "atrous_conv2d_transpose",
            "avg_pool",
            "avg_pool1d",
            "avg_pool2d",
            "avg_pool3d",
            "batch_normalization",
            "batch_norm_with_global_normalization",
            "bias_add",
            "collapse_repeated",
            "compute_accidental_hits",
            "compute_average_loss",
            "conv1d",
            "conv1d_transpose",
            "conv2d",
            "conv2d_transpose",
            "conv3d",
            "conv3d_transpose",
            "convolution",
            "conv_transpose",
            "crelu",
            "ctc_beam_search_decoder",
            "ctc_greedy_decoder",
            "ctc_loss",
            "ctc_unique_labels",
            "depthwise_conv2d",
            "depthwise_conv2d_backprop_filter",
            "depthwise_conv2d_backprop_input",
            "depth_to_space",
            "dilation2d",
            "dropout",
            "elu",
            "embedding_lookup",
            "embedding_lookup_sparse",
            "erosion2d",
            "fractional_avg_pool",
            "fractional_max_pool",
            "l2_loss",
            "leaky_relu",
            "local_response_normalization",
            "log_poisson_loss",
            "log_softmax",
            "max_pool",
            "max_pool1d",
            "max_pool2d",
            "max_pool3d",
            "max_pool_with_argmax",
            "moments",
            "nce_loss",
            "normalize_moments",
            "pool",
            "relu",
            "relu6",
            "RNNCellDeviceWrapper",
            "RNNCellDropoutWrapper",
            "RNNCellResidualWrapper",
            "safe_embedding_lookup_sparse",
            "sampled_softmax_loss",
            "scale_regularization_loss",
            "selu",
            "separable_conv2d",
            "sigmoid_cross_entropy_with_logits",
            "softmax",
            "softmax_cross_entropy_with_logits",
            "softsign",
            "space_to_depth",
            "sparse_softmax_cross_entropy_with_logits",
            "sufficient_statistics",
            "weighted_cross_entropy_with_logits",
            "weighted_moments",
            "with_space_to_batch",
        ]
    },
    {"tf.optimizers": ["Overview", {"schedules": ["Overview"]}]},
    {
        "tf.quantization": [
            "Overview",
            "dequantize",
            "fake_quant_with_min_max_args",
            "fake_quant_with_min_max_args_gradient",
            "fake_quant_with_min_max_vars",
            "fake_quant_with_min_max_vars_gradient",
            "fake_quant_with_min_max_vars_per_channel",
            "fake_quant_with_min_max_vars_per_channel_gradient",
            "quantize",
            "quantized_concat",
            "quantize_and_dequantize",
        ]
    },
    {
        "tf.queue": [
            "Overview",
            "FIFOQueue",
            "PaddingFIFOQueue",
            "PriorityQueue",
            "QueueBase",
            "RandomShuffleQueue",
        ]
    },
    {
        "tf.ragged": [
            "Overview",
            "boolean_mask",
            "constant",
            "map_flat_values",
            "range",
            "row_splits_to_segment_ids",
            "segment_ids_to_row_splits",
            "stack",
            "stack_dynamic_partitions",
        ]
    },
    {
        "tf.random": [
            "Overview",
            "all_candidate_sampler",
            "categorical",
            "fixed_unigram_candidate_sampler",
            "gamma",
            "learned_unigram_candidate_sampler",
            "log_uniform_candidate_sampler",
            "normal",
            "poisson",
            "set_seed",
            "shuffle",
            "stateless_categorical",
            "stateless_normal",
            "stateless_truncated_normal",
            "stateless_uniform",
            "truncated_normal",
            "uniform",
            "uniform_candidate_sampler",
            {
                "experimental": [
                    "Overview",
                    "create_rng_state",
                    "Generator",
                    "get_global_generator",
                    "set_global_generator",
                ]
            },
        ]
    },
    {"tf.raw_ops": ["Overview"]},
    {"tf.sets": ["Overview", "difference", "intersection", "size", "union"]},
    {
        "tf.signal": [
            "Overview",
            "dct",
            "fft",
            "fft2d",
            "fft3d",
            "fftshift",
            "frame",
            "hamming_window",
            "hann_window",
            "idct",
            "ifft",
            "ifft2d",
            "ifft3d",
            "ifftshift",
            "inverse_stft",
            "inverse_stft_window_fn",
            "irfft",
            "irfft2d",
            "irfft3d",
            "linear_to_mel_weight_matrix",
            "mfccs_from_log_mel_spectrograms",
            "overlap_and_add",
            "rfft",
            "rfft2d",
            "rfft3d",
            "stft",
        ]
    },
    {
        "tf.sparse": [
            "Overview",
            "add",
            "concat",
            "cross",
            "cross_hashed",
            "expand_dims",
            "eye",
            "fill_empty_rows",
            "from_dense",
            "mask",
            "maximum",
            "minimum",
            "reduce_max",
            "reduce_sum",
            "reorder",
            "reset_shape",
            "reshape",
            "retain",
            "segment_mean",
            "segment_sqrt_n",
            "segment_sum",
            "slice",
            "softmax",
            "SparseTensor",
            "sparse_dense_matmul",
            "split",
            "to_dense",
            "to_indicator",
            "transpose",
        ]
    },
    {
        "tf.strings": [
            "Overview",
            "as_string",
            "bytes_split",
            "format",
            "join",
            "length",
            "lower",
            "ngrams",
            "reduce_join",
            "regex_full_match",
            "regex_replace",
            "split",
            "strip",
            "substr",
            "to_hash_bucket",
            "to_hash_bucket_fast",
            "to_hash_bucket_strong",
            "to_number",
            "unicode_decode",
            "unicode_decode_with_offsets",
            "unicode_encode",
            "unicode_script",
            "unicode_split",
            "unicode_split_with_offsets",
            "unicode_transcode",
            "unsorted_segment_join",
            "upper",
        ]
    },
    {
        "tf.summary": [
            "Overview",
            "audio",
            "create_file_writer",
            "create_noop_writer",
            "flush",
            "histogram",
            "image",
            "record_if",
            "scalar",
            "SummaryWriter",
            "text",
            "trace_export",
            "trace_off",
            "trace_on",
            "write",
            {
                "experimental": [
                    "Overview",
                    "get_step",
                    "set_step",
                    "summary_scope",
                    "write_raw_pb",
                ]
            },
        ]
    },
    {
        "tf.sysconfig": [
            "Overview",
            "get_compile_flags",
            "get_include",
            "get_lib",
            "get_link_flags",
        ]
    },
    {
        "tf.test": [
            "Overview",
            "assert_equal_graph_def",
            "Benchmark",
            "benchmark_config",
            "compute_gradient",
            "create_local_cluster",
            "gpu_device_name",
            "is_built_with_cuda",
            "is_built_with_gpu_support",
            "is_built_with_rocm",
            "is_gpu_available",
            "main",
            "TestCase",
            "TestCase.failureException",
        ]
    },
    {
        "tf.tpu": [
            "Overview",
            {"experimental": ["Overview", "DeviceAssignment", "initialize_tpu_system"]},
        ]
    },
    {
        "tf.train": [
            "Overview",
            "BytesList",
            "Checkpoint",
            "CheckpointManager",
            "checkpoints_iterator",
            "ClusterDef",
            "ClusterSpec",
            "Coordinator",
            "Example",
            "ExponentialMovingAverage",
            "Feature",
            "FeatureList",
            "FeatureLists",
            "FeatureLists.FeatureListEntry",
            "Features",
            "Features.FeatureEntry",
            "FloatList",
            "get_checkpoint_state",
            "Int64List",
            "JobDef",
            "JobDef.TasksEntry",
            "latest_checkpoint",
            "list_variables",
            "load_checkpoint",
            "load_variable",
            "SequenceExample",
            "ServerDef",
            {
                "experimental": [
                    "Overview",
                    "disable_mixed_precision_graph_rewrite",
                    "DynamicLossScale",
                    "enable_mixed_precision_graph_rewrite",
                    "FixedLossScale",
                    "LossScale",
                    "PythonState",
                ]
            },
        ]
    },
    {"tf.version": ["Overview"]},
    {"tf.xla": ["Overview", {"experimental": ["Overview", "compile", "jit_scope"]}]},
    "All Symbols",
]
