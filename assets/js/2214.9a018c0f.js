(window.webpackJsonp=window.webpackJsonp||[]).push([[2214],{2402:function(e,t,o){"use strict";o.r(t);var a=o(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("Computes dropout.")]),e._v(" "),o("h3",{attrs:{id:"aliases"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("tf.compat.v2.nn.dropout")])])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(" tf.nn.dropout(\n    x,\n    rate,\n    noise_shape=None,\n    seed=None,\n    name=None\n)\n")])])]),o("h3",{attrs:{id:"used-in-the-guide"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("W")]),e._v("r"),o("code",[e._v("i")]),e._v("t"),o("code",[e._v("i")]),e._v("n"),o("code",[e._v("g")]),e._v(" "),o("code",[e._v("c")]),e._v("u"),o("code",[e._v("s")]),e._v("t"),o("code",[e._v("o")]),e._v("m"),o("code"),e._v("l"),o("code",[e._v("a")]),e._v("y"),o("code",[e._v("e")]),e._v("r"),o("code",[e._v("s")]),e._v(" "),o("code",[e._v("a")]),e._v("n"),o("code",[e._v("d")]),e._v(" "),o("code",[e._v("m")]),e._v("o"),o("code",[e._v("d")]),e._v("e"),o("code",[e._v("l")]),e._v("s"),o("code"),e._v("w"),o("code",[e._v("i")]),e._v("t"),o("code",[e._v("h")]),e._v(" "),o("code",[e._v("K")]),e._v("e"),o("code",[e._v("r")]),e._v("a"),o("code",[e._v("s")])])]),e._v(" "),o("h3",{attrs:{id:"used-in-the-tutorials"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("B")]),e._v("e"),o("code",[e._v("t")]),e._v("t"),o("code",[e._v("e")]),e._v("r"),o("code"),e._v("p"),o("code",[e._v("e")]),e._v("r"),o("code",[e._v("f")]),e._v("o"),o("code",[e._v("r")]),e._v("m"),o("code",[e._v("a")]),e._v("n"),o("code",[e._v("c")]),e._v("e"),o("code"),e._v("w"),o("code",[e._v("i")]),e._v("t"),o("code",[e._v("h")]),e._v(" "),o("code",[e._v("t")]),e._v("f"),o("code",[e._v(".")]),e._v("f"),o("code",[e._v("u")]),e._v("n"),o("code",[e._v("c")]),e._v("t"),o("code",[e._v("i")]),e._v("o"),o("code",[e._v("n")])])]),e._v(" "),o("p",[e._v("With probability rate, drops elements of x. Input that are kept are scaled up by 1 / (1 - rate), otherwise outputs 0. The scaling is so that the expected sum is unchanged.")]),e._v(" "),o("p",[e._v("Note: The behavior of dropout has changed between TensorFlow 1.x and 2.x. When converting 1.x code, please use named arguments to ensure behavior stays consistent.\n"),o("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("broadcastable"),o("OutboundLink")],1),e._v("By default, each element is kept or dropped independently. If noise_shape is specified, it must be  to the shape of x, and only dimensions with noise_shape[i] == shape(x)[i] will make independent decisions. For example, if shape(x) = [k, l, m, n] and noise_shape = [k, 1, 1, n], each batch and channel component will be kept independently and each row and column will be kept or not kept together.")]),e._v(" "),o("h4",{attrs:{id:"args"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("x")]),e._v(": A floating point tensor.")]),e._v(" "),o("li",[o("code",[e._v("rate")]),e._v(": A scalar "),o("code",[e._v("Tensor")]),e._v(" with the same type as "),o("code",[e._v("x")]),e._v(". The probability that each element is dropped. For e"),o("code",[e._v("x")]),e._v("ample, setting "),o("code",[e._v("rate")]),e._v("=0.1 would drop 10% of input elements.")]),e._v(" "),o("li",[o("code",[e._v("noise_shape")]),e._v(": A 1-D "),o("code",[e._v("Tensor")]),e._v(" of type "),o("code",[e._v("int32")]),e._v(", representing the shape for randomly gene"),o("code",[e._v("rate")]),e._v("d keep/drop flags.")]),e._v(" "),o("li",[o("code",[e._v("seed")]),e._v(": A Python integer. Used to create random "),o("code",[e._v("seed")]),e._v("s. See "),o("code",[e._v("tf.compat.v1.set_random_seed")]),e._v(" for behavior.")]),e._v(" "),o("li",[o("code",[e._v("name")]),e._v(": A "),o("code",[e._v("name")]),e._v(" for this operation (optional).")])]),e._v(" "),o("h4",{attrs:{id:"returns"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),o("p",[e._v("A Tensor of the same shape of x.")]),e._v(" "),o("h4",{attrs:{id:"raises"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")])])}),[],!1,null,null,null);t.default=s.exports}}]);