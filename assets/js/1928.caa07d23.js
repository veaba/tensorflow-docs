(window.webpackJsonp=window.webpackJsonp||[]).push([[1928],{2119:function(s,a,e){"use strict";e.r(a);var t=e(0),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("Performs a brightness shift.")]),s._v(" "),e("h3",{attrs:{id:"aliases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[s._v("#")]),s._v(" Aliases:")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("tf.compat.v1.keras.preprocessing.image.apply_brightness_shift")])]),s._v(" "),e("li",[e("code",[s._v("tf.compat.v2.keras.preprocessing.image.apply_brightness_shift")])])]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(" tf.keras.preprocessing.image.apply_brightness_shift(\n    x,\n    brightness\n)\n")])])]),e("h1",{attrs:{id:"arguments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[s._v("#")]),s._v(" Arguments")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(" x: Input tensor. Must be 3D.\nbrightness: Float. The new brightness value.\nchannel_axis: Index of axis for channels in the input tensor.\n")])])]),e("h1",{attrs:{id:"returns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[s._v("#")]),s._v(" Returns")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(" Numpy image tensor.\n")])])]),e("h1",{attrs:{id:"raises"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[s._v("#")]),s._v(" Raises")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(" ValueError if `brightness_range` isn't a tuple.\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);