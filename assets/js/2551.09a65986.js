(window.webpackJsonp=window.webpackJsonp||[]).push([[2551],{2742:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Create a TensorProto.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v1.make_tensor_proto")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v2.make_tensor_proto")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.make_tensor_proto(\n    values,\n    dtype=None,\n    shape=None,\n    verify_shape=False,\n    allow_broadcast=False\n)\n")])])]),a("p",[e._v('In TensorFlow 2.0, representing tensors as protos should no longer be a common workflow. That said, this utility function is still useful for generating TF Serving request protos:\nrequest = tensorflow_serving.apis.predict_pb2.PredictRequest() request.model_spec.name = "my_model" request.model_spec.signature_name = "serving_default" request.inputs["images"].CopyFrom(tf.make_tensor_proto(X_new))\nmake_tensor_proto accepts "values" of a python scalar, a python list, a numpy ndarray, or a numpy scalar.\nIf "values" is a python scalar or a python list, make_tensor_proto first convert it to numpy ndarray. If dtype is None, the conversion tries its best to infer the right numpy data type. Otherwise, the resulting numpy array has a compatible data type with the given dtype.\nIn either case above, the numpy ndarray (either the caller provided or the auto converted) must have the compatible type with dtype.\nmake_tensor_proto then converts the numpy array to a tensor proto.\nIf "shape" is None, the resulting tensor proto represents the numpy array precisely.\nOtherwise, "shape" specifies the tensor\'s shape and the numpy array can not have more elements than what "shape" specifies.')]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("values")]),e._v(": Values to put in the TensorProto.")]),e._v(" "),a("li",[a("code",[e._v("dtype")]),e._v(": Optional tensor_pb2 DataType value.")]),e._v(" "),a("li",[a("code",[e._v("shape")]),e._v(": List of integers representing the dimensions of tensor.")]),e._v(" "),a("li",[a("code",[e._v("verify_shape")]),e._v(": Boolean that enables verification of a "),a("code",[e._v("shape")]),e._v(" of "),a("code",[e._v("values")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("allow_broadcast")]),e._v(": Boolean that enables allowing scalars and 1 length vector broadcasting. Cannot be true when "),a("code",[e._v("verify_shape")]),e._v(" is true.")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/make_ndarray",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.make_ndarray(proto)"),a("OutboundLink")],1),e._v('A TensorProto. Depending on the type, it may contain data in the "tensor_content" attribute, which is not directly useful to Python programs. To access the values you should convert the proto back to a numpy ndarray with .')]),e._v(" "),a("p",[e._v("If "),a("code",[e._v("values")]),e._v(" is a "),a("code",[e._v("TensorProto")]),e._v(", it is immediately returned; "),a("code",[e._v("dtype")]),e._v(" and "),a("code",[e._v("shape")]),e._v(" are ignored.")]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("TypeError")]),e._v(": if unsupported types are provided.")]),e._v(" "),a("li",[a("code",[e._v("ValueError")]),e._v(": if arguments have inappropriate values or if verify_shape is True and shape of values is not equals to a shape from the argument.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);