(window.webpackJsonp=window.webpackJsonp||[]).push([[2347],{2535:function(e,s,a){"use strict";a.r(s);var t=a(0),r=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Returns the element-wise min of two SparseTensors.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v1.sparse.minimum")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v1.sparse_minimum")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v2.sparse.minimum")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.sparse.minimum(\n    sp_a,\n    sp_b,\n    name=None\n)\n")])])]),a("p",[e._v("Assumes the two SparseTensors have the same shape, i.e., no broadcasting. Example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' sp_zero = sparse_tensor.SparseTensor([[0]], [0], [7])\nsp_one = sparse_tensor.SparseTensor([[1]], [1], [7])\nres = tf.sparse.minimum(sp_zero, sp_one).eval()\n# "res" should be equal to SparseTensor([[0], [1]], [0, 0], [7]).\n')])])]),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("sp_a")]),e._v(": a "),a("code",[e._v("SparseTensor")]),e._v(" operand whose dtype is real, and indices lexicographically ordered.")]),e._v(" "),a("li",[a("code",[e._v("sp_b")]),e._v(": the other "),a("code",[e._v("SparseTensor")]),e._v(" operand with the same requirements (and the same shape).")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": optional "),a("code",[e._v("name")]),e._v(" of the operation.")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("output")]),e._v(": the "),a("code",[e._v("output")]),e._v(" SparseTensor.")])])])}),[],!1,null,null,null);s.default=r.exports}}]);