(window.webpackJsonp=window.webpackJsonp||[]).push([[880],{1068:function(e,t,o){"use strict";o.r(t);var a=o(0),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h2",{attrs:{id:"class-sessionmanager"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#class-sessionmanager","aria-hidden":"true"}},[e._v("#")]),e._v(" Class SessionManager")]),e._v(" "),o("p",[e._v("Training helper that restores from checkpoint and creates session.")]),e._v(" "),o("p",[e._v("This class is a small wrapper that takes care of session creation and checkpoint recovery. It also provides functions that to facilitate coordination among multiple training threads or processes.")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("C")]),e._v("h"),o("code",[e._v("e")]),e._v("c"),o("code",[e._v("k")]),e._v("p"),o("code",[e._v("o")]),e._v("i"),o("code",[e._v("n")]),e._v("t"),o("code",[e._v("i")]),e._v("n"),o("code",[e._v("g")]),e._v(" "),o("code",[e._v("t")]),e._v("r"),o("code",[e._v("a")]),e._v("i"),o("code",[e._v("n")]),e._v("e"),o("code",[e._v("d")]),e._v(" "),o("code",[e._v("v")]),e._v("a"),o("code",[e._v("r")]),e._v("i"),o("code",[e._v("a")]),e._v("b"),o("code",[e._v("l")]),e._v("e"),o("code",[e._v("s")]),e._v(" "),o("code",[e._v("a")]),e._v("s"),o("code"),e._v("t"),o("code",[e._v("h")]),e._v("e"),o("code"),e._v("t"),o("code",[e._v("r")]),e._v("a"),o("code",[e._v("i")]),e._v("n"),o("code",[e._v("i")]),e._v("n"),o("code",[e._v("g")]),e._v(" "),o("code",[e._v("p")]),e._v("r"),o("code",[e._v("o")]),e._v("g"),o("code",[e._v("r")]),e._v("e"),o("code",[e._v("s")]),e._v("s"),o("code",[e._v("e")]),e._v("s"),o("code",[e._v(".")])]),e._v(" "),o("li",[o("code",[e._v("I")]),e._v("n"),o("code",[e._v("i")]),e._v("t"),o("code",[e._v("i")]),e._v("a"),o("code",[e._v("l")]),e._v("i"),o("code",[e._v("z")]),e._v("i"),o("code",[e._v("n")]),e._v("g"),o("code"),e._v("v"),o("code",[e._v("a")]),e._v("r"),o("code",[e._v("i")]),e._v("a"),o("code",[e._v("b")]),e._v("l"),o("code",[e._v("e")]),e._v("s"),o("code"),e._v("o"),o("code",[e._v("n")]),e._v(" "),o("code",[e._v("s")]),e._v("t"),o("code",[e._v("a")]),e._v("r"),o("code",[e._v("t")]),e._v("u"),o("code",[e._v("p")]),e._v(","),o("code"),e._v("r"),o("code",[e._v("e")]),e._v("s"),o("code",[e._v("t")]),e._v("o"),o("code",[e._v("r")]),e._v("i"),o("code",[e._v("n")]),e._v("g"),o("code"),e._v("t"),o("code",[e._v("h")]),e._v("e"),o("code",[e._v("m")]),e._v(" "),o("code",[e._v("f")]),e._v("r"),o("code",[e._v("o")]),e._v("m"),o("code"),e._v("t"),o("code",[e._v("h")]),e._v("e"),o("code"),e._v("m"),o("code",[e._v("o")]),e._v("s"),o("code",[e._v("t")]),e._v(" "),o("code",[e._v("r")]),e._v("e"),o("code",[e._v("c")]),e._v("e"),o("code",[e._v("n")]),e._v("t"),o("code"),e._v("c"),o("code",[e._v("h")]),e._v("e"),o("code",[e._v("c")]),e._v("k"),o("code",[e._v("p")]),e._v("o"),o("code",[e._v("i")]),e._v("n"),o("code",[e._v("t")]),e._v(" "),o("code",[e._v("a")]),e._v("f"),o("code",[e._v("t")]),e._v("e"),o("code",[e._v("r")]),e._v(" "),o("code",[e._v("a")]),e._v(" "),o("code",[e._v("c")]),e._v("r"),o("code",[e._v("a")]),e._v("s"),o("code",[e._v("h")]),e._v(","),o("code"),e._v("o"),o("code",[e._v("r")]),e._v(" "),o("code",[e._v("w")]),e._v("a"),o("code",[e._v("i")]),e._v("t"),o("code"),e._v("f"),o("code",[e._v("o")]),e._v("r"),o("code"),e._v("c"),o("code",[e._v("h")]),e._v("e"),o("code",[e._v("c")]),e._v("k"),o("code",[e._v("p")]),e._v("o"),o("code",[e._v("i")]),e._v("n"),o("code",[e._v("t")]),e._v("s"),o("code"),e._v("t"),o("code",[e._v("o")]),e._v(" "),o("code",[e._v("b")]),e._v("e"),o("code",[e._v("c")]),e._v("o"),o("code",[e._v("m")]),e._v("e"),o("code"),e._v("a"),o("code",[e._v("v")]),e._v("a"),o("code",[e._v("i")]),e._v("l"),o("code",[e._v("a")]),e._v("b"),o("code",[e._v("l")]),e._v("e"),o("code",[e._v(".")])])]),e._v(" "),o("h3",{attrs:{id:"usage"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[e._v("#")]),e._v(" Usage:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(" with tf.Graph().as_default():\n   ...add operations to the graph...\n  # Create a SessionManager that will checkpoint the model in '/tmp/mydir'.\n  sm = SessionManager()\n  sess = sm.prepare_session(master, init_op, saver, checkpoint_dir)\n  # Use the session to train the graph.\n  while True:\n    sess.run(<my_train_op>)\n")])])]),o("p",[e._v("prepare_session() initializes or restores a model. It requires init_op and saver as an argument.")]),e._v(" "),o("p",[e._v("A second process could wait for the model to be ready by doing the following:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(" with tf.Graph().as_default():\n   ...add operations to the graph...\n  # Create a SessionManager that will wait for the model to become ready.\n  sm = SessionManager()\n  sess = sm.wait_for_session(master)\n  # Use the session to train the graph.\n  while True:\n    sess.run(<my_train_op>)\n")])])]),o("p",[e._v("wait_for_session() waits for a model to be initialized by other processes.")]),e._v(" "),o("h2",{attrs:{id:"init"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),o("strong",[e._v("init")])]),e._v(" "),o("p",[o("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/session_manager.py#L94-L153",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),o("OutboundLink")],1)]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(" __init__(\n    local_init_op=None,\n    ready_op=None,\n    ready_for_local_init_op=None,\n    graph=None,\n    recovery_wait_secs=30,\n    local_init_run_options=None\n)\n")])])]),o("p",[e._v("Creates a SessionManager.")]),e._v(" "),o("p",[e._v("The local_init_op is an Operation that is run always after a new session was created. If None, this step is skipped.")]),e._v(" "),o("p",[e._v("The ready_op is an Operation used to check if the model is ready. The model is considered ready if that operation returns an empty 1D string tensor. If the operation returns a non empty 1D string tensor, the elements are concatenated and used to indicate to the user why the model is not ready.")]),e._v(" "),o("p",[e._v("The ready_for_local_init_op is an Operation used to check if the model is ready to run local_init_op. The model is considered ready if that operation returns an empty 1D string tensor. If the operation returns a non empty 1D string tensor, the elements are concatenated and used to indicate to the user why the model is not ready.")]),e._v(" "),o("p",[e._v("If ready_op is None, the model is not checked for readiness.")]),e._v(" "),o("p",[e._v("recovery_wait_secs is the number of seconds between checks that the model is ready. It is used by processes to wait for a model to be initialized or restored. Defaults to 30 seconds.")]),e._v(" "),o("h4",{attrs:{id:"args"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("local_init_op")]),e._v(": An "),o("code",[e._v("Operation")]),e._v(" run immediately after session creation. Usually used to initialize tables and local variables.")]),e._v(" "),o("li",[o("code",[e._v("ready_op")]),e._v(": An "),o("code",[e._v("Operation")]),e._v(" to check if the model is initialized.")]),e._v(" "),o("li",[o("code",[e._v("ready_for_local_init_op")]),e._v(": An "),o("code",[e._v("Operation")]),e._v(" to check if the model is ready to run "),o("code",[e._v("local_init_op")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("graph")]),e._v(": The "),o("code",[e._v("Graph")]),e._v(" that the model will use.")]),e._v(" "),o("li",[o("code",[e._v("recovery_wait_secs")]),e._v(": Seconds between checks for the model to be ready.")]),e._v(" "),o("li",[o("code",[e._v("local_init_run_options")]),e._v(": RunOptions to be passed to session.run when executing the "),o("code",[e._v("local_init_op")]),e._v(".")])]),e._v(" "),o("h4",{attrs:{id:"raises"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("ValueError")]),e._v(": If ready_for_local_init_op is not None but local_init_op is None")])]),e._v(" "),o("h2",{attrs:{id:"methods"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),o("h3",{attrs:{id:"prepare-session"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#prepare-session","aria-hidden":"true"}},[e._v("#")]),e._v(" prepare_session")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/session_manager.py#L224-L314",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),o("OutboundLink")],1)]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(" prepare_session(\n    master,\n    init_op=None,\n    saver=None,\n    checkpoint_dir=None,\n    checkpoint_filename_with_path=None,\n    wait_for_checkpoint=False,\n    max_wait_secs=7200,\n    config=None,\n    init_feed_dict=None,\n    init_fn=None\n)\n")])])]),o("p",[e._v("Creates a Session. Makes sure the model is ready to be used.")]),e._v(" "),o("p",[e._v("Creates a Session on 'master'. If a saver object is passed in, and checkpoint_dir points to a directory containing valid checkpoint files, then it will try to recover the model from checkpoint. If no checkpoint files are available, and wait_for_checkpoint is True, then the process would check every recovery_wait_secs, up to max_wait_secs, for recovery to succeed.")]),e._v(" "),o("p",[e._v("If the model cannot be recovered successfully then it is initialized by running the init_op and calling init_fn if they are provided. The local_init_op is also run after init_op and init_fn, regardless of whether the model was recovered successfully, but only if ready_for_local_init_op passes.")]),e._v(" "),o("p",[e._v("If the model is recovered from a checkpoint it is assumed that all global variables have been initialized, in particular neither init_op nor init_fn will be executed.")]),e._v(" "),o("p",[e._v("It is an error if the model cannot be recovered and no init_op or init_fn or local_init_op are passed.")]),e._v(" "),o("h4",{attrs:{id:"args-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("master")]),e._v(": "),o("code",[e._v("String")]),e._v(" representation of the TensorFlow "),o("code",[e._v("master")]),e._v(" to use.")]),e._v(" "),o("li",[o("code",[e._v("init_op")]),e._v(": Optional "),o("code",[e._v("Operation")]),e._v(" used to initialize the model.")]),e._v(" "),o("li",[o("code",[e._v("saver")]),e._v(": A "),o("code",[e._v("Saver")]),e._v(" object used to restore a model.")]),e._v(" "),o("li",[o("code",[e._v("checkpoint_dir")]),e._v(": Path to the checkpoint files. The latest checkpoint in the dir will be used to restore.")]),e._v(" "),o("li",[o("code",[e._v("checkpoint_filename_with_path")]),e._v(": Full file name path to the checkpoint file.")]),e._v(" "),o("li",[o("code",[e._v("wait_for_checkpoint")]),e._v(": Whether to wait for checkpoint to become available.")]),e._v(" "),o("li",[o("code",[e._v("max_wait_secs")]),e._v(": Maximum time to wait for checkpoints to become available.")]),e._v(" "),o("li",[o("code",[e._v("config")]),e._v(": Optional "),o("code",[e._v("ConfigProto")]),e._v(" proto used to "),o("code",[e._v("config")]),e._v("ure the session.")]),e._v(" "),o("li",[o("code",[e._v("init_feed_dict")]),e._v(": Optional dictionary that maps "),o("code",[e._v("Tensor")]),e._v(" objects to feed values. This feed dictionary is passed to the session "),o("code",[e._v("run")]),e._v("() call when "),o("code",[e._v("run")]),e._v("ning the init op.")]),e._v(" "),o("li",[o("code",[e._v("init_fn")]),e._v(": Optional callable used to initialize the model. Called after the optional "),o("code",[e._v("init_op")]),e._v(" is called. The callable must accept one argument, the session being initialized.")])]),e._v(" "),o("h4",{attrs:{id:"returns"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),o("p",[e._v("A Session object that can be used to drive the model.")]),e._v(" "),o("h4",{attrs:{id:"raises-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#raises-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("RuntimeError")]),e._v(": If the model cannot be initialized or recovered.")]),e._v(" "),o("li",[o("code",[e._v("ValueError")]),e._v(": If both checkpoint_dir and checkpoint_filename_with_path are set.")])]),e._v(" "),o("h3",{attrs:{id:"recover-session"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#recover-session","aria-hidden":"true"}},[e._v("#")]),e._v(" recover_session")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/session_manager.py#L316-L378",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),o("OutboundLink")],1)]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(" recover_session(\n    master,\n    saver=None,\n    checkpoint_dir=None,\n    checkpoint_filename_with_path=None,\n    wait_for_checkpoint=False,\n    max_wait_secs=7200,\n    config=None\n)\n")])])]),o("p",[e._v("Creates a Session, recovering if possible.")]),e._v(" "),o("p",[e._v("Creates a new session on 'master'. If the session is not initialized and can be recovered from a checkpoint, recover it.")]),e._v(" "),o("h4",{attrs:{id:"args-3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("master")]),e._v(": "),o("code",[e._v("String")]),e._v(" representation of the TensorFlow "),o("code",[e._v("master")]),e._v(" to use.")]),e._v(" "),o("li",[o("code",[e._v("saver")]),e._v(": A "),o("code",[e._v("Saver")]),e._v(" object used to restore a model.")]),e._v(" "),o("li",[o("code",[e._v("checkpoint_dir")]),e._v(": Path to the checkpoint files. The latest checkpoint in the dir will be used to restore.")]),e._v(" "),o("li",[o("code",[e._v("checkpoint_filename_with_path")]),e._v(": Full file name path to the checkpoint file.")]),e._v(" "),o("li",[o("code",[e._v("wait_for_checkpoint")]),e._v(": Whether to wait for checkpoint to become available.")]),e._v(" "),o("li",[o("code",[e._v("max_wait_secs")]),e._v(": Maximum time to wait for checkpoints to become available.")]),e._v(" "),o("li",[o("code",[e._v("config")]),e._v(": Optional "),o("code",[e._v("ConfigProto")]),e._v(" proto used to "),o("code",[e._v("config")]),e._v("ure the session.")])]),e._v(" "),o("h4",{attrs:{id:"returns-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),o("p",[e._v("A pair (sess, initialized) where 'initialized' is True if the session could be recovered and initialized, False otherwise.")]),e._v(" "),o("h4",{attrs:{id:"raises-3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#raises-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("ValueError")]),e._v(": If both checkpoint_dir and checkpoint_filename_with_path are set.")])]),e._v(" "),o("h3",{attrs:{id:"wait-for-session"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#wait-for-session","aria-hidden":"true"}},[e._v("#")]),e._v(" wait_for_session")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/session_manager.py#L380-L437",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),o("OutboundLink")],1)]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(" wait_for_session(\n    master,\n    config=None,\n    max_wait_secs=float('Inf')\n)\n")])])]),o("p",[e._v("Creates a new Session and waits for model to be ready.")]),e._v(" "),o("p",[e._v("Creates a new Session on 'master'. Waits for the model to be initialized or recovered from a checkpoint. It's expected that another thread or process will make the model ready, and that this is intended to be used by threads/processes that participate in a distributed training configuration where a different thread/process is responsible for initializing or recovering the model being trained.")]),e._v(" "),o("p",[e._v("NB: The amount of time this method waits for the session is bounded by max_wait_secs. By default, this function will wait indefinitely.")]),e._v(" "),o("h4",{attrs:{id:"args-4"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("master")]),e._v(": "),o("code",[e._v("String")]),e._v(" representation of the TensorFlow "),o("code",[e._v("master")]),e._v(" to use.")]),e._v(" "),o("li",[o("code",[e._v("config")]),e._v(": Optional ConfigProto proto used to "),o("code",[e._v("config")]),e._v("ure the session.")]),e._v(" "),o("li",[o("code",[e._v("max_wait_secs")]),e._v(": Maximum time to wait for the session to become available.")])]),e._v(" "),o("h4",{attrs:{id:"returns-3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),o("p",[e._v("A Session. May be None if the operation exceeds the timeout specified by config.operation_timeout_in_ms.")]),e._v(" "),o("h4",{attrs:{id:"raises-4"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#raises-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("tf.DeadlineExceededError")]),e._v(": if the session is not available after max_wait_secs.")])])])}),[],!1,null,null,null);t.default=i.exports}}]);