(window.webpackJsonp=window.webpackJsonp||[]).push([[698],{886:function(e,t,r){"use strict";r.r(t);var a=r(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"class-profileoptionbuilder"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#class-profileoptionbuilder","aria-hidden":"true"}},[e._v("#")]),e._v(" Class ProfileOptionBuilder")]),e._v(" "),r("p",[e._v("Option Builder for Profiling API.")]),e._v(" "),r("p",[e._v("For tutorial on the options, see https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/g3doc/options.md")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" # Users can use pre-built options:\nopts = (\n    tf.profiler.ProfileOptionBuilder.trainable_variables_parameter())\n\n# Or, build your own options:\nopts = (tf.compat.v1.profiler.ProfileOptionBuilder()\n    .with_max_depth(10)\n    .with_min_micros(1000)\n    .select(['accelerator_micros'])\n    .with_stdout_output()\n    .build()\n\n# Or customize the pre-built options:\nopts = (tf.compat.v1.profiler.ProfileOptionBuilder(\n    tf.profiler.ProfileOptionBuilder.time_and_memory())\n    .with_displaying_options(show_name_regexes=['.*rnn.*'])\n    .build())\n\n# Finally, profiling with the options:\n_ = tf.compat.v1.profiler.profile(tf.compat.v1.get_default_graph(),\n                        run_meta=run_meta,\n                        cmd='scope',\n                        options=opts)\n")])])]),r("h2",{attrs:{id:"init"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("init")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L62-L86",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __init__(options=None)\n")])])]),r("p",[e._v("Constructor.")]),e._v(" "),r("h4",{attrs:{id:"args"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("options")]),e._v(": Optional initial option dict to start with.")])]),e._v(" "),r("h2",{attrs:{id:"methods"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),r("h3",{attrs:{id:"account-displayed-op-only"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#account-displayed-op-only","aria-hidden":"true"}},[e._v("#")]),e._v(" account_displayed_op_only")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L372-L385",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" account_displayed_op_only(is_true)\n")])])]),r("p",[e._v("Whether only account the statistics of displayed profiler nodes.")]),e._v(" "),r("h4",{attrs:{id:"args-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("is_true")]),e._v(": If true, only account statistics of nodes eventually displayed by the outputs. Otherwise, a node's statistics are accounted by its parents as long as it's types match 'account_type_regexes', even if it is hidden from the output, say, by hide_name_regexes.")])]),e._v(" "),r("h4",{attrs:{id:"returns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("self")]),e._v(" "),r("h3",{attrs:{id:"build"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#build","aria-hidden":"true"}},[e._v("#")]),e._v(" build")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L193-L199",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" build()\n")])])]),r("p",[e._v("Build a profiling option.")]),e._v(" "),r("h4",{attrs:{id:"returns-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A dict of profiling options.")]),e._v(" "),r("h3",{attrs:{id:"float-operation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#float-operation","aria-hidden":"true"}},[e._v("#")]),e._v(" float_operation")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L114-L141",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" @staticmethod\nfloat_operation()\n")])])]),r("p",[e._v("Options used to profile float operations.")]),e._v(" "),r("p",[e._v("Please see https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/g3doc/profile_model_architecture.md on the caveats of calculating float operations.")]),e._v(" "),r("h4",{attrs:{id:"returns-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A dict of profiling options.")]),e._v(" "),r("h3",{attrs:{id:"order-by"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#order-by","aria-hidden":"true"}},[e._v("#")]),e._v(" order_by")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L421-L435",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" order_by(attribute)\n")])])]),r("p",[e._v("Order the displayed profiler nodes based on a attribute.")]),e._v(" "),r("p",[e._v("Supported attribute includes micros, bytes, occurrence, params, etc. https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/g3doc/options.md")]),e._v(" "),r("h4",{attrs:{id:"args-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("attribute")]),e._v(": An "),r("code",[e._v("attribute")]),e._v(" the profiler node has.")])]),e._v(" "),r("h4",{attrs:{id:"returns-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("self")]),e._v(" "),r("h3",{attrs:{id:"select"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#select","aria-hidden":"true"}},[e._v("#")]),e._v(" select")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L437-L451",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" select(attributes)\n")])])]),r("p",[e._v("Select the attributes to display.")]),e._v(" "),r("p",[e._v("See https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/g3doc/options.md for supported attributes.")]),e._v(" "),r("h4",{attrs:{id:"args-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("attributes")]),e._v(": A list of attribute the profiler node has.")])]),e._v(" "),r("h4",{attrs:{id:"returns-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("self")]),e._v(" "),r("h3",{attrs:{id:"time-and-memory"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#time-and-memory","aria-hidden":"true"}},[e._v("#")]),e._v(" time_and_memory")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L143-L191",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" @staticmethod\ntime_and_memory(\n    min_micros=1,\n    min_bytes=1,\n    min_accelerator_micros=0,\n    min_cpu_micros=0,\n    min_peak_bytes=0,\n    min_residual_bytes=0,\n    min_output_bytes=0\n)\n")])])]),r("p",[e._v("Show operation time and memory consumptions.")]),e._v(" "),r("h4",{attrs:{id:"args-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("min_micros")]),e._v(": Only show profiler nodes with execution time no less than this. It sums accelerator and cpu times.")]),e._v(" "),r("li",[r("code",[e._v("min_bytes")]),e._v(": Only show profiler nodes requested to allocate no less bytes than this.")]),e._v(" "),r("li",[r("code",[e._v("min_accelerator_micros")]),e._v(": Only show profiler nodes spend no less than this time on accelerator (e.g. GPU).")]),e._v(" "),r("li",[r("code",[e._v("min_cpu_micros")]),e._v(": Only show profiler nodes spend no less than this time on cpu.")]),e._v(" "),r("li",[r("code",[e._v("min_peak_bytes")]),e._v(": Only show profiler nodes using no less than this bytes at peak (high watermark). For profiler nodes consist of multiple graph nodes, it sums the graph nodes' peak_bytes.")]),e._v(" "),r("li",[r("code",[e._v("min_residual_bytes")]),e._v(": Only show profiler nodes have no less than this bytes not being de-allocated after Compute() ends. For profiler nodes consist of multiple graph nodes, it sums the graph nodes' residual_bytes.")]),e._v(" "),r("li",[r("code",[e._v("min_output_bytes")]),e._v(": Only show profiler nodes have no less than this bytes output. The output are not necessarily allocated by this profiler nodes.")])]),e._v(" "),r("h4",{attrs:{id:"returns-6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A dict of profiling options.")]),e._v(" "),r("h3",{attrs:{id:"trainable-variables-parameter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#trainable-variables-parameter","aria-hidden":"true"}},[e._v("#")]),e._v(" trainable_variables_parameter")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L88-L112",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" @staticmethod\ntrainable_variables_parameter()\n")])])]),r("p",[e._v("Options used to profile trainable variable parameters.")]),e._v(" "),r("p",[e._v("Normally used together with 'scope' view.")]),e._v(" "),r("h4",{attrs:{id:"returns-7"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A dict of profiling options.")]),e._v(" "),r("h3",{attrs:{id:"with-accounted-types"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-accounted-types","aria-hidden":"true"}},[e._v("#")]),e._v(" with_accounted_types")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L316-L336",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_accounted_types(account_type_regexes)\n")])])]),r("p",[e._v("Selectively counting statistics based on node types.")]),e._v(" "),r("p",[e._v("Here, 'types' means the profiler nodes' properties. Profiler by default consider device name (e.g. /job:xx/.../device:GPU:0) and operation type (e.g. MatMul) as profiler nodes' properties. User can also associate customized 'types' to profiler nodes through OpLogProto proto.")]),e._v(" "),r("p",[e._v("For example, user can select profiler nodes placed on gpu:0 with: account_type_regexes=['."),r("em",[e._v("gpu:0.")]),e._v("']")]),e._v(" "),r("p",[e._v("If none of a node's properties match the specified regexes, the node is not displayed nor accounted.")]),e._v(" "),r("h4",{attrs:{id:"args-6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("account_type_regexes")]),e._v(": A list of regexes specifying the types.")])]),e._v(" "),r("h4",{attrs:{id:"returns-8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("self.")]),e._v(" "),r("h3",{attrs:{id:"with-empty-output"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-empty-output","aria-hidden":"true"}},[e._v("#")]),e._v(" with_empty_output")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L387-L390",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_empty_output()\n")])])]),r("p",[e._v("Do not generate side-effect outputs.")]),e._v(" "),r("h3",{attrs:{id:"with-file-output"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-file-output","aria-hidden":"true"}},[e._v("#")]),e._v(" with_file_output")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L397-L400",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_file_output(outfile)\n")])])]),r("p",[e._v("Print the result to a file.")]),e._v(" "),r("h3",{attrs:{id:"with-max-depth"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-max-depth","aria-hidden":"true"}},[e._v("#")]),e._v(" with_max_depth")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L201-L214",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_max_depth(max_depth)\n")])])]),r("p",[e._v("Set the maximum depth of display.")]),e._v(" "),r("p",[e._v("The depth depends on profiling view. For 'scope' view, it's the depth of name scope hierarchy (tree), for 'op' view, it's the number of operation types (list), etc.")]),e._v(" "),r("h4",{attrs:{id:"args-7"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("max_depth")]),e._v(": Maximum depth of the data structure to display.")])]),e._v(" "),r("h4",{attrs:{id:"returns-9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("self")]),e._v(" "),r("h3",{attrs:{id:"with-min-execution-time"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-min-execution-time","aria-hidden":"true"}},[e._v("#")]),e._v(" with_min_execution_time")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L245-L264",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_min_execution_time(\n    min_micros=0,\n    min_accelerator_micros=0,\n    min_cpu_micros=0\n)\n")])])]),r("p",[e._v("Only show profiler nodes consuming no less than 'min_micros'.")]),e._v(" "),r("h4",{attrs:{id:"args-8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("min_micros")]),e._v(": Only show profiler nodes with execution time no less than this. It sums accelerator and cpu times.")]),e._v(" "),r("li",[r("code",[e._v("min_accelerator_micros")]),e._v(": Only show profiler nodes spend no less than this time on accelerator (e.g. GPU).")]),e._v(" "),r("li",[r("code",[e._v("min_cpu_micros")]),e._v(": Only show profiler nodes spend no less than this time on cpu.")])]),e._v(" "),r("h4",{attrs:{id:"returns-10"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("self")]),e._v(" "),r("h3",{attrs:{id:"with-min-float-operations"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-min-float-operations","aria-hidden":"true"}},[e._v("#")]),e._v(" with_min_float_operations")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L299-L314",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_min_float_operations(min_float_ops)\n")])])]),r("p",[e._v("Only show profiler nodes consuming no less than 'min_float_ops'.")]),e._v(" "),r("p",[e._v("Please see https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/g3doc/profile_model_architecture.md on the caveats of calculating float operations.")]),e._v(" "),r("h4",{attrs:{id:"args-9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("min_float_ops")]),e._v(": Only show profiler nodes with float operations no less than this.")])]),e._v(" "),r("h4",{attrs:{id:"returns-11"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("self")]),e._v(" "),r("h3",{attrs:{id:"with-min-memory"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-min-memory","aria-hidden":"true"}},[e._v("#")]),e._v(" with_min_memory")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L216-L243",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_min_memory(\n    min_bytes=0,\n    min_peak_bytes=0,\n    min_residual_bytes=0,\n    min_output_bytes=0\n)\n")])])]),r("p",[e._v("Only show profiler nodes consuming no less than 'min_bytes'.")]),e._v(" "),r("h4",{attrs:{id:"args-10"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("min_bytes")]),e._v(": Only show profiler nodes requested to allocate no less bytes than this.")]),e._v(" "),r("li",[r("code",[e._v("min_peak_bytes")]),e._v(": Only show profiler nodes using no less than this bytes at peak (high watermark). For profiler nodes consist of multiple graph nodes, it sums the graph nodes' peak_bytes.")]),e._v(" "),r("li",[r("code",[e._v("min_residual_bytes")]),e._v(": Only show profiler nodes have no less than this bytes not being de-allocated after Compute() ends. For profiler nodes consist of multiple graph nodes, it sums the graph nodes' residual_bytes.")]),e._v(" "),r("li",[r("code",[e._v("min_output_bytes")]),e._v(": Only show profiler nodes have no less than this bytes output. The output are not necessarily allocated by this profiler nodes.")])]),e._v(" "),r("h4",{attrs:{id:"returns-12"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("self")]),e._v(" "),r("h3",{attrs:{id:"with-min-occurrence"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-min-occurrence","aria-hidden":"true"}},[e._v("#")]),e._v(" with_min_occurrence")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L281-L297",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_min_occurrence(min_occurrence)\n")])])]),r("p",[e._v("Only show profiler nodes including no less than 'min_occurrence' graph nodes.")]),e._v(" "),r("p",[e._v('A "node" means a profiler output node, which can be a python line (code view), an operation type (op view), or a graph node (graph/scope view). A python line includes all graph nodes created by that line, while an operation type includes all graph nodes of that type.')]),e._v(" "),r("h4",{attrs:{id:"args-11"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("min_occurrence")]),e._v(": Only show nodes including no less than this.")])]),e._v(" "),r("h4",{attrs:{id:"returns-13"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("self")]),e._v(" "),r("h3",{attrs:{id:"with-min-parameters"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-min-parameters","aria-hidden":"true"}},[e._v("#")]),e._v(" with_min_parameters")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L266-L279",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_min_parameters(min_params)\n")])])]),r("p",[e._v("Only show profiler nodes holding no less than 'min_params' parameters.")]),e._v(" "),r("p",[e._v("'Parameters' normally refers the weights of in TensorFlow variables. It reflects the 'capacity' of models.")]),e._v(" "),r("h4",{attrs:{id:"args-12"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("min_params")]),e._v(": Only show profiler nodes holding number parameters no less than this.")])]),e._v(" "),r("h4",{attrs:{id:"returns-14"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("self")]),e._v(" "),r("h3",{attrs:{id:"with-node-names"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-node-names","aria-hidden":"true"}},[e._v("#")]),e._v(" with_node_names")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L338-L370",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_node_names(\n    start_name_regexes=None,\n    show_name_regexes=None,\n    hide_name_regexes=None,\n    trim_name_regexes=None\n)\n")])])]),r("p",[e._v("Regular expressions used to select profiler nodes to display.")]),e._v(" "),r("p",[e._v("After 'with_accounted_types' is evaluated, 'with_node_names' are evaluated as follows:")]),e._v(" "),r("p",[e._v("For a profile data structure, profiler first finds the profiler nodes matching 'start_name_regexes', and starts displaying profiler nodes from there. Then, if a node matches 'show_name_regexes' and doesn't match 'hide_name_regexes', it's displayed. If a node matches 'trim_name_regexes', profiler stops further searching that branch.")]),e._v(" "),r("h4",{attrs:{id:"args-13"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("start_name_regexes")]),e._v(": list of node name regexes to start displaying.")]),e._v(" "),r("li",[r("code",[e._v("show_name_regexes")]),e._v(": list of node names regexes to display.")]),e._v(" "),r("li",[r("code",[e._v("hide_name_regexes")]),e._v(": list of node_names regexes that should be hidden.")]),e._v(" "),r("li",[r("code",[e._v("trim_name_regexes")]),e._v(": list of node name regexes from where to stop.")])]),e._v(" "),r("h4",{attrs:{id:"returns-15"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("self")]),e._v(" "),r("h3",{attrs:{id:"with-pprof-output"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-pprof-output","aria-hidden":"true"}},[e._v("#")]),e._v(" with_pprof_output")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L407-L419",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_pprof_output(pprof_file)\n")])])]),r("p",[e._v("Generate a pprof profile gzip file.")]),e._v(" "),r("h4",{attrs:{id:"to-use-the-pprof-file"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#to-use-the-pprof-file","aria-hidden":"true"}},[e._v("#")]),e._v(" To use the pprof file:")]),e._v(" "),r("p",[e._v("pprof -png --nodecount=100 --sample_index=1")]),e._v(" "),r("h4",{attrs:{id:"args-14"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("pprof_file")]),e._v(": filename for output, usually suffixed with .pb.gz.")])]),e._v(" "),r("h4",{attrs:{id:"returns-16"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("self.")]),e._v(" "),r("h3",{attrs:{id:"with-stdout-output"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-stdout-output","aria-hidden":"true"}},[e._v("#")]),e._v(" with_stdout_output")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L392-L395",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_stdout_output()\n")])])]),r("p",[e._v("Print the result to stdout.")]),e._v(" "),r("h3",{attrs:{id:"with-step"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-step","aria-hidden":"true"}},[e._v("#")]),e._v(" with_step")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L453-L465",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_step(step)\n")])])]),r("p",[e._v("Which profile step to use for profiling.")]),e._v(" "),r("p",[e._v("The 'step' here refers to the step defined by Profiler.add_step() API.")]),e._v(" "),r("h4",{attrs:{id:"args-15"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("step")]),e._v(": When multiple "),r("code",[e._v("step")]),e._v("s of profiles are available, select which "),r("code",[e._v("step")]),e._v("'s profile to use. If -1, use average of all available "),r("code",[e._v("step")]),e._v("s.")])]),e._v(" "),r("h4",{attrs:{id:"returns-17"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-17","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("self")]),e._v(" "),r("h3",{attrs:{id:"with-timeline-output"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#with-timeline-output","aria-hidden":"true"}},[e._v("#")]),e._v(" with_timeline_output")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/profiler/option_builder.py#L402-L405",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" with_timeline_output(timeline_file)\n")])])]),r("p",[e._v("Generate a timeline json file.")])])}),[],!1,null,null,null);t.default=s.exports}}]);