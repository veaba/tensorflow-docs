(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{310:function(e,t,a){"use strict";a.r(t);var o=a(0),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Update ref by adding value to it.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.compat.v1.assign_add(\n    ref,\n    value,\n    use_locking=None,\n    name=None\n)\n")])])]),a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/math/add",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.math.add"),a("OutboundLink")],1),e._v('This operation outputs "ref" after the update is done. This makes it easier to chain operations that need to use the reset value. Unlike , this op does not broadcast. ref and value must have the same shape.')]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ref")]),e._v(": A mutable "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("uint8")]),e._v(", "),a("code",[e._v("uint16")]),e._v(", "),a("code",[e._v("int16")]),e._v(", "),a("code",[e._v("int8")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", "),a("code",[e._v("complex128")]),e._v(", "),a("code",[e._v("qint8")]),e._v(", "),a("code",[e._v("quint8")]),e._v(", "),a("code",[e._v("qint32")]),e._v(", "),a("code",[e._v("half")]),e._v(". Should be from a "),a("code",[e._v("Variable")]),e._v(" node.")]),e._v(" "),a("li",[a("code",[e._v("value")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must have the same shape and dtype as "),a("code",[e._v("ref")]),e._v(". The "),a("code",[e._v("value")]),e._v(" to be added to the variable.")]),e._v(" "),a("li",[a("code",[e._v("use_locking")]),e._v(": An optional "),a("code",[e._v("bool")]),e._v(". Defaults to "),a("code",[e._v("False")]),e._v(". If True, the addition will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v('Same as "ref". Returned as a convenience for operations that want to use the new value after the variable has been updated.')])])}),[],!1,null,null,null);t.default=n.exports}}]);