(window.webpackJsonp=window.webpackJsonp||[]).push([[614],{802:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Returns all variables that maintain their moving averages.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.compat.v1.moving_average_variables(scope=None)\n")])])]),a("p",[e._v("If an ExponentialMovingAverage object is created and the apply() method is called on a list of variables, these variables will be added to the GraphKeys.MOVING_AVERAGE_VARIABLES collection. This convenience function returns the contents of that collection.")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("scope")]),e._v(": (Optional.) A string. If supplied, the resulting list is filtered to include only items whose "),a("code",[e._v("name")]),e._v(" attribute matches "),a("code",[e._v("scope")]),e._v(" using "),a("code",[e._v("re.match")]),e._v(". Items without a "),a("code",[e._v("name")]),e._v(" attribute are never returned if a "),a("code",[e._v("scope")]),e._v(" is supplied. The choice of "),a("code",[e._v("re.match")]),e._v(" means that a "),a("code",[e._v("scope")]),e._v(" without special tokens filters by prefix.")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A list of Variable objects.")])])}),[],!1,null,null,null);t.default=r.exports}}]);