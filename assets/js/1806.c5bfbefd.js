(window.webpackJsonp=window.webpackJsonp||[]).push([[1806],{1997:function(t,e,a){"use strict";a.r(e);var s=a(0),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"class-zeropadding2d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-zeropadding2d","aria-hidden":"true"}},[t._v("#")]),t._v(" Class ZeroPadding2D")]),t._v(" "),a("p",[t._v("Zero-padding layer for 2D input (e.g. picture).\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/keras/layers/Layer",target:"_blank",rel:"noopener noreferrer"}},[t._v("Layer"),a("OutboundLink")],1),t._v("Inherits From:")]),t._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),a("ul",[a("li",[t._v("Class "),a("code",[t._v("tf.compat.v1.keras.layers.ZeroPadding2D")])]),t._v(" "),a("li",[t._v("Class "),a("code",[t._v("tf.compat.v2.keras.layers.ZeroPadding2D")])])]),t._v(" "),a("h3",{attrs:{id:"used-in-the-tutorials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[t._v("#")]),t._v(" Used in the tutorials:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("P")]),t._v("i"),a("code",[t._v("x")]),t._v("2"),a("code",[t._v("P")]),t._v("i"),a("code",[t._v("x")])])]),t._v(" "),a("p",[t._v("This layer can add rows and columns of zeros at the top, bottom, left and right side of an image tensor.")]),t._v(" "),a("h4",{attrs:{id:"arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[t._v("#")]),t._v(" Arguments:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("padding")]),t._v(": Int, or tuple of 2 ints, or tuple of 2 tuples of 2 ints.\nIf int: the same symmetric "),a("code",[t._v("padding")]),t._v(" is applied to height and width.\nIf tuple of 2 ints: interpreted as two different symmetric "),a("code",[t._v("padding")]),t._v(" values for height and width: ("),a("code",[t._v("symmetric_height_pad, symmetric_width_pad")]),t._v(").\nIf tuple of 2 tuples of 2 ints: interpreted as ((top_pad, bottom_pad), (left_pad, right_pad))")]),t._v(" "),a("li",[t._v("If int: the same symmetric "),a("code",[t._v("padding")]),t._v(" is applied to height and width.")]),t._v(" "),a("li",[t._v("If tuple of 2 ints: interpreted as two different symmetric "),a("code",[t._v("padding")]),t._v(" values for height and width: ("),a("code",[t._v("symmetric_height_pad, symmetric_width_pad")]),t._v(").")]),t._v(" "),a("li",[t._v("If tuple of 2 tuples of 2 ints: interpreted as ((top_pad, bottom_pad), (left_pad, right_pad))")]),t._v(" "),a("li",[a("code",[t._v("data_format")]),t._v(": A string, one of "),a("code",[t._v("channels_last")]),t._v(" (default) or "),a("code",[t._v("channels_first")]),t._v(". The ordering of the dimensions in the inputs. "),a("code",[t._v("channels_last")]),t._v(" corresponds to inputs with shape ("),a("code",[t._v("batch, height, width, channels")]),t._v(") while "),a("code",[t._v("channels_first")]),t._v(" corresponds to inputs with shape ("),a("code",[t._v("batch, channels, height, width")]),t._v("). It defaults to the "),a("code",[t._v("image_data_format")]),t._v(" value found in your Keras config file at "),a("code",[t._v("~/.keras/keras.json")]),t._v('. If you never set it, then it will be "'),a("code",[t._v("channels_last")]),t._v('".')])]),t._v(" "),a("h4",{attrs:{id:"input-shape"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#input-shape","aria-hidden":"true"}},[t._v("#")]),t._v(" Input shape:")]),t._v(" "),a("p",[t._v('4D tensor with shape: - If data_format is "channels_last": (batch, rows, cols, channels) - If data_format is "channels_first": (batch, channels, rows, cols)')]),t._v(" "),a("h4",{attrs:{id:"output-shape"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-shape","aria-hidden":"true"}},[t._v("#")]),t._v(" Output shape:")]),t._v(" "),a("p",[t._v('4D tensor with shape: - If data_format is "channels_last": (batch, padded_rows, padded_cols, channels) - If data_format is "channels_first": (batch, channels, padded_rows, padded_cols)')]),t._v(" "),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("init")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/convolutional.py#L2157-L2178",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" __init__(\n    padding=(1, 1),\n    data_format=None,\n    **kwargs\n)\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);