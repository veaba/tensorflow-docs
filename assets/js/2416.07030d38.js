(window.webpackJsonp=window.webpackJsonp||[]).push([[2416],{2604:function(e,t,r){"use strict";r.r(t);var a=r(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"class-benchmark"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#class-benchmark","aria-hidden":"true"}},[e._v("#")]),e._v(" Class Benchmark")]),e._v(" "),r("p",[e._v("Abstract class that provides helpers for TensorFlow benchmarks.")]),e._v(" "),r("h3",{attrs:{id:"aliases"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),r("ul",[r("li",[e._v("Class "),r("code",[e._v("tf.compat.v1.test.Benchmark")])]),e._v(" "),r("li",[e._v("Class "),r("code",[e._v("tf.compat.v2.test.Benchmark")])])]),e._v(" "),r("h2",{attrs:{id:"init"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("init")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/platform/benchmark.py#L234-L238",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __init__()\n")])])]),r("p",[e._v("Initialize self. See help(type(self)) for accurate signature.")]),e._v(" "),r("h2",{attrs:{id:"methods"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),r("h3",{attrs:{id:"evaluate"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#evaluate","aria-hidden":"true"}},[e._v("#")]),e._v(" evaluate")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/platform/benchmark.py#L339-L349",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" evaluate(tensors)\n")])])]),r("p",[e._v("Evaluates tensors and returns numpy values.")]),e._v(" "),r("h4",{attrs:{id:"args"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("tensors")]),e._v(": A Tensor or a nested list/tuple of Tensors.")])]),e._v(" "),r("h4",{attrs:{id:"returns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("tensors numpy values.")]),e._v(" "),r("h3",{attrs:{id:"is-abstract"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#is-abstract","aria-hidden":"true"}},[e._v("#")]),e._v(" is_abstract")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/platform/benchmark.py#L240-L244",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" @classmethod\nis_abstract(cls)\n")])])]),r("h3",{attrs:{id:"report-benchmark"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#report-benchmark","aria-hidden":"true"}},[e._v("#")]),e._v(" report_benchmark")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/platform/benchmark.py#L185-L214",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" report_benchmark(\n    iters=None,\n    cpu_time=None,\n    wall_time=None,\n    throughput=None,\n    extras=None,\n    name=None,\n    metrics=None\n)\n")])])]),r("p",[e._v("Report a benchmark.")]),e._v(" "),r("h4",{attrs:{id:"args-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("iters")]),e._v(": (optional) How many iterations were run")]),e._v(" "),r("li",[r("code",[e._v("cpu_time")]),e._v(": (optional) Median or mean cpu time in seconds.")]),e._v(" "),r("li",[r("code",[e._v("wall_time")]),e._v(": (optional) Median or mean wall time in seconds.")]),e._v(" "),r("li",[r("code",[e._v("throughput")]),e._v(": (optional) Throughput (in MB/s)")]),e._v(" "),r("li",[r("code",[e._v("extras")]),e._v(": (optional) Dict mapping string keys to additional benchmark info. Values may be either floats or values that are convertible to strings.")]),e._v(" "),r("li",[r("code",[e._v("name")]),e._v(": (optional) Override the BenchmarkEntry "),r("code",[e._v("name")]),e._v(" with "),r("code",[e._v("name")]),e._v(". Otherwise it is inferred from the top-level method "),r("code",[e._v("name")]),e._v(".")]),e._v(" "),r("li",[r("code",[e._v("metrics")]),e._v(": (optional) A list of dict, where each dict has the keys below "),r("code",[e._v("name")]),e._v(" (required), string, metric "),r("code",[e._v("name")]),e._v(" value (required), double, metric value min_value (optional), double, minimum acceptable metric value max_value (optional), double, maximum acceptable metric value")])]),e._v(" "),r("h3",{attrs:{id:"run-op-benchmark"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#run-op-benchmark","aria-hidden":"true"}},[e._v("#")]),e._v(" run_op_benchmark")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/platform/benchmark.py#L246-L337",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" run_op_benchmark(\n    sess,\n    op_or_tensor,\n    feed_dict=None,\n    burn_iters=2,\n    min_iters=10,\n    store_trace=False,\n    store_memory_usage=True,\n    name=None,\n    extras=None,\n    mbs=0\n)\n")])])]),r("p",[e._v("Run an op or tensor in the given session. Report the results.")]),e._v(" "),r("h4",{attrs:{id:"args-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("sess")]),e._v(": "),r("code",[e._v("Session")]),e._v(" object to use for timing.")]),e._v(" "),r("li",[r("code",[e._v("op_or_tensor")]),e._v(": "),r("code",[e._v("Operation")]),e._v(" or "),r("code",[e._v("Tensor")]),e._v(" to benchmark.")]),e._v(" "),r("li",[r("code",[e._v("feed_dict")]),e._v(": A "),r("code",[e._v("dict")]),e._v(" of values to feed for each op iteration (see the "),r("code",[e._v("feed_dict")]),e._v(" parameter of "),r("code",[e._v("Session")]),e._v(".run).")]),e._v(" "),r("li",[r("code",[e._v("burn_iters")]),e._v(": Number of burn-in iterations to run.")]),e._v(" "),r("li",[r("code",[e._v("min_iters")]),e._v(": Minimum number of iterations to use for timing.")]),e._v(" "),r("li",[r("code",[e._v("store_trace")]),e._v(': Boolean, whether to run an extra untimed iteration and store the trace of iteration in returned extras. The trace will be stored as a string in Google Chrome trace format in the extras field "full_trace_chrome_format". Note that trace will not be stored in test_log_pb2.TestResults proto.')]),e._v(" "),r("li",[r("code",[e._v("store_memory_usage")]),e._v(": Boolean, whether to run an extra untimed iteration, calculate memory usage, and store that in extras fields.")]),e._v(" "),r("li",[r("code",[e._v("name")]),e._v(": (optional) Override the BenchmarkEntry "),r("code",[e._v("name")]),e._v(" with "),r("code",[e._v("name")]),e._v(". Otherwise it is inferred from the top-level method "),r("code",[e._v("name")]),e._v(".")]),e._v(" "),r("li",[r("code",[e._v("extras")]),e._v(": (optional) Dict mapping string keys to additional benchmark info. Values may be either floats or values that are convertible to strings.")]),e._v(" "),r("li",[r("code",[e._v("mbs")]),e._v(": (optional) The number of megabytes moved by this op, used to calculate the ops throughput.")])]),e._v(" "),r("h4",{attrs:{id:"returns-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A dict containing the key-value pairs that were passed to report_benchmark. If store_trace option is used, then full_chrome_trace_format will be included in return dictionary even though it is not passed to report_benchmark with extras.")])])}),[],!1,null,null,null);t.default=s.exports}}]);