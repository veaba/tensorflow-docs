(window.webpackJsonp=window.webpackJsonp||[]).push([[1523],{1714:function(a,t,e){"use strict";e.r(t);var s=e(0),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("Casts a tensor to a different dtype and returns it.")]),a._v(" "),e("h3",{attrs:{id:"aliases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("tf.compat.v1.keras.backend.cast")])]),a._v(" "),e("li",[e("code",[a._v("tf.compat.v2.keras.backend.cast")])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(" tf.keras.backend.cast(\n    x,\n    dtype\n)\n")])])]),e("p",[a._v("You can cast a Keras variable but it still returns a Keras tensor.")]),a._v(" "),e("h4",{attrs:{id:"arguments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[a._v("#")]),a._v(" Arguments:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("x")]),a._v(": Keras tensor (or variable).")]),a._v(" "),e("li",[e("code",[a._v("dtype")]),a._v(": String, either ("),e("code",[a._v("'float16'")]),a._v(", "),e("code",[a._v("'float32'")]),a._v(", or "),e("code",[a._v("'float64'")]),a._v(").")])]),a._v(" "),e("h4",{attrs:{id:"returns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns:")]),a._v(" "),e("p",[a._v("Keras tensor with dtype dtype.")]),a._v(" "),e("h4",{attrs:{id:"examples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[a._v("#")]),a._v(" Examples:")]),a._v(" "),e("p",[a._v("Cast a float32 variable to a float64 tensor")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("     >>> import tensorflow as tf\n    >>> from tensorflow.keras import backend as K\n    >>> input = K.ones(shape=(1,3))\n    >>> print(input)\n    >>> cast_input = K.cast(input, dtype='float64')\n    >>> print(cast_input)\n\n    <tf.Variable 'Variable:0' shape=(1, 3) dtype=float32,\n         numpy=array([[1., 1., 1.]], dtype=float32)>\n    tf.Tensor([[1. 1. 1.]], shape=(1, 3), dtype=float64)\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);