(window.webpackJsonp=window.webpackJsonp||[]).push([[2455],{2643:function(e,t,i){"use strict";i.r(t);var n=i(0),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("p",[e._v("Continuously yield new checkpoint files as they appear.")]),e._v(" "),i("h3",{attrs:{id:"aliases"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),i("ul",[i("li",[i("code",[e._v("tf.compat.v1.train.checkpoints_iterator")])]),e._v(" "),i("li",[i("code",[e._v("tf.compat.v2.train.checkpoints_iterator")])])]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v(" tf.train.checkpoints_iterator(\n    checkpoint_dir,\n    min_interval_secs=0,\n    timeout=None,\n    timeout_fn=None\n)\n")])])]),i("p",[e._v("The iterator only checks for new checkpoints when control flow has been reverted to it. This means it can miss checkpoints if your code takes longer to run between iterations than min_interval_secs or the interval at which new checkpoints are written.")]),e._v(" "),i("p",[e._v("The timeout argument is the maximum number of seconds to block waiting for a new checkpoint. It is used in combination with the timeout_fn as follows:")]),e._v(" "),i("ul",[i("li",[e._v("If the timeout expires and no "),i("code",[e._v("timeout_fn")]),e._v(" was specified, the iterator stops yielding.")]),e._v(" "),i("li",[e._v("If a "),i("code",[e._v("timeout_fn")]),e._v(" was specified, that function is called and if it returns a true boolean value the iterator stops yielding.")]),e._v(" "),i("li",[e._v("If the function returns a false boolean value then the iterator resumes the wait for new checkpoints. At this point the timeout logic applies again.")])]),e._v(" "),i("p",[e._v("This behavior gives control to callers on what to do if checkpoints do not come fast enough or stop being generated. For example, if callers have a way to detect that the training has stopped and know that no new checkpoints will be generated, they can provide a timeout_fn that returns True when the training has stopped. If they know that the training is still going on they return False instead.")]),e._v(" "),i("h4",{attrs:{id:"args"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),i("ul",[i("li",[i("code",[e._v("checkpoint_dir")]),e._v(": The directory in which checkpoints are saved.")]),e._v(" "),i("li",[i("code",[e._v("min_interval_secs")]),e._v(": The minimum number of seconds between yielding checkpoints.")]),e._v(" "),i("li",[i("code",[e._v("timeout")]),e._v(": The maximum number of seconds to wait between checkpoints. If left as "),i("code",[e._v("None")]),e._v(", then the process will wait indefinitely.")]),e._v(" "),i("li",[i("code",[e._v("timeout")]),e._v("_fn: Optional function to call after a "),i("code",[e._v("timeout")]),e._v(". If the function returns True, then it means that no new checkpoints will be generated and the iterator will exit. The function is called with no arguments.")])]),e._v(" "),i("h4",{attrs:{id:"yields"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#yields","aria-hidden":"true"}},[e._v("#")]),e._v(" Yields:")]),e._v(" "),i("p",[e._v("String paths to latest checkpoint files as they arrive.")])])}),[],!1,null,null,null);t.default=a.exports}}]);