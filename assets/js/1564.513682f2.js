(window.webpackJsonp=window.webpackJsonp||[]).push([[1564],{1755:function(t,e,a){"use strict";a.r(e);var s=a(0),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Selects x in test phase, and alt otherwise.")]),t._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("tf.compat.v1.keras.backend.in_test_phase")])]),t._v(" "),a("li",[a("code",[t._v("tf.compat.v2.keras.backend.in_test_phase")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" tf.keras.backend.in_test_phase(\n    x,\n    alt,\n    training=None\n)\n")])])]),a("p",[t._v("Note that alt should have the same shape as x.")]),t._v(" "),a("h4",{attrs:{id:"arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[t._v("#")]),t._v(" Arguments:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("x")]),t._v(": What to return in test phase (tensor or callable that returns a tensor).")]),t._v(" "),a("li",[a("code",[t._v("alt")]),t._v(": What to return otherwise (tensor or callable that returns a tensor).")]),t._v(" "),a("li",[a("code",[t._v("training")]),t._v(": Optional scalar tensor (or Python boolean, or Python integer) specifying the learning phase.")])]),t._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),a("p",[t._v("Either x or alt based on K.learning_phase.")])])}),[],!1,null,null,null);e.default=r.exports}}]);