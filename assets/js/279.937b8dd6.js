(window.webpackJsonp=window.webpackJsonp||[]).push([[279],{467:function(t,a,e){"use strict";e.r(a);var r=e(0),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Partitioner to specify a fixed number of shards along given axis.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" tf.compat.v1.fixed_size_partitioner(\n    num_shards,\n    axis=0\n)\n")])])]),e("h4",{attrs:{id:"args"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("num_shards")]),t._v(": "),e("code",[t._v("int")]),t._v(", number of shards to partition variable.")]),t._v(" "),e("li",[e("code",[t._v("axis")]),t._v(": "),e("code",[t._v("int")]),t._v(", "),e("code",[t._v("axis")]),t._v(" to partition on.")])]),t._v(" "),e("h4",{attrs:{id:"returns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),e("p",[t._v("A partition function usable as the partitioner argument to variable_scope and get_variable.")])])}),[],!1,null,null,null);a.default=s.exports}}]);