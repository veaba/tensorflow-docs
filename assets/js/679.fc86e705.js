(window.webpackJsonp=window.webpackJsonp||[]).push([[679],{867:function(t,s,e){"use strict";e.r(s);var n=e(0),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Computes matmul(x, weights) + biases.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" tf.compat.v1.nn.xw_plus_b(\n    x,\n    weights,\n    biases,\n    name=None\n)\n")])])]),e("h4",{attrs:{id:"args"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("x")]),t._v(": a 2D tensor. Dimensions typically: batch, in_units")]),t._v(" "),e("li",[e("code",[t._v("weights")]),t._v(": a 2D tensor. Dimensions typically: in_units, out_units")]),t._v(" "),e("li",[e("code",[t._v("biases")]),t._v(": a 1D tensor. Dimensions: out_units")]),t._v(" "),e("li",[e("code",[t._v("name")]),t._v(": A "),e("code",[t._v("name")]),t._v(' for the operation (optional). If not specified "'),e("code",[t._v("x")]),t._v('w_plus_b" is used.')])]),t._v(" "),e("h4",{attrs:{id:"returns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),e("p",[t._v("A 2-D Tensor computing matmul(x, weights) + biases. Dimensions typically: batch, out_units.")])])}),[],!1,null,null,null);s.default=a.exports}}]);