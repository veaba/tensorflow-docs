(window.webpackJsonp=window.webpackJsonp||[]).push([[1972],{2163:function(e,t,s){"use strict";s.r(t);var r=s(0),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Returns the list of input tensors necessary to compute tensor.")]),e._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tf.compat.v1.keras.utils.get_source_inputs")])]),e._v(" "),s("li",[s("code",[e._v("tf.compat.v2.keras.utils.get_source_inputs")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.keras.utils.get_source_inputs(\n    tensor,\n    layer=None,\n    node_index=None\n)\n")])])]),s("p",[e._v("Output will always be a list of tensors (potentially with 1 element).")]),e._v(" "),s("h4",{attrs:{id:"arguments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tensor")]),e._v(": The "),s("code",[e._v("tensor")]),e._v(" to start from.")]),e._v(" "),s("li",[s("code",[e._v("layer")]),e._v(": Origin "),s("code",[e._v("layer")]),e._v(" of the "),s("code",[e._v("tensor")]),e._v(". Will be determined via "),s("code",[e._v("tensor")]),e._v("._keras_history if not provided.")]),e._v(" "),s("li",[s("code",[e._v("node_index")]),e._v(": Origin node index of the "),s("code",[e._v("tensor")]),e._v(".")])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("List of input tensors.")])])}),[],!1,null,null,null);t.default=a.exports}}]);