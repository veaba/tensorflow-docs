(window.webpackJsonp=window.webpackJsonp||[]).push([[2272],{2460:function(a,e,t){"use strict";t.r(e);var s=t(0),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("Applies a boolean mask to data without flattening the mask dimensions.")]),a._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("tf.compat.v1.ragged.boolean_mask")])]),a._v(" "),t("li",[t("code",[a._v("tf.compat.v2.ragged.boolean_mask")])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" tf.ragged.boolean_mask(\n    data,\n    mask,\n    name=None\n)\n")])])]),t("p",[a._v("Returns a potentially ragged tensor that is formed by retaining the elements in data where the corresponding value in mask is True.")]),a._v(" "),t("ul",[t("li",[a._v("output[a1...aA, "),t("code",[a._v("i")]),a._v(", b1...bB] = data[a1...aA, "),t("code",[a._v("j")]),a._v(", b1...bB]\nWhere "),t("code",[a._v("j")]),a._v(" "),t("code",[a._v("i")]),a._v("s the "),t("code",[a._v("i")]),a._v("th "),t("code",[a._v("True")]),a._v(" entry of mask[a1...aA].\n"),t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/boolean_mask",target:"_blank",rel:"noopener noreferrer"}},[a._v("tf.boolean_mask"),t("OutboundLink")],1),a._v("Note that output preserves the mask dimensions a1...aA; this differs from , which flattens those dimensions.")])]),a._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[a._v("#")]),a._v(" Args:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("data")]),a._v(": A potentially ragged tensor.")]),a._v(" "),t("li",[t("code",[a._v("mask")]),a._v(": A potentially ragged boolean tensor. "),t("code",[a._v("mask")]),a._v("'s shape must be a prefix of "),t("code",[a._v("data")]),a._v("'s shape. rank("),t("code",[a._v("mask")]),a._v(") must be known statically.")]),a._v(" "),t("li",[t("code",[a._v("name")]),a._v(": A "),t("code",[a._v("name")]),a._v(" prefix for the returned tensor (optional).")])]),a._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns:")]),a._v(" "),t("p",[a._v("A potentially ragged tensor that is formed by retaining the elements in data where the corresponding value in mask is True.")]),a._v(" "),t("ul",[t("li",[a._v("rank(output) = rank(data).")]),a._v(" "),t("li",[a._v("output.ragged_rank = max(data.ragged_rank, rank(mask) - 1).")])]),a._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[a._v("#")]),a._v(" Raises:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("ValueError")]),a._v(": if rank(mask) is not known statically; or if "),t("code",[a._v("mask.shape")]),a._v(" is not a prefix of "),t("code",[a._v("data.shape")]),a._v(".")])]),a._v(" "),t("h4",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[a._v("#")]),a._v(" Examples:")])])}),[],!1,null,null,null);e.default=r.exports}}]);