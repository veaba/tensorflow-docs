(window.webpackJsonp=window.webpackJsonp||[]).push([[351],{539:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("A version of extract_stack that only returns filenames and line numbers.")]),t._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("tf.compat.v1.app.flags.tf_decorator.tf_stack.extract_stack_file_and_line")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" tf.compat.v1.flags.tf_decorator.tf_stack.extract_stack_file_and_line(max_length=1000)\n")])])]),a("p",[t._v("Callers often only require filenames and line numbers, and do not need the additional information gathered by extract_stack, as they never call convert_stack.")]),t._v(" "),a("p",[t._v("As a further optimisation, we allow users to specify a limit on the number of frames examined.")]),t._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("max_length")]),t._v(": The maximum length of stack to extract.")])]),t._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),a("p",[t._v("A list of FileAndLine objects corresponding to the call stack of the current thread.")])])}),[],!1,null,null,null);e.default=s.exports}}]);