(window.webpackJsonp=window.webpackJsonp||[]).push([[1397],{1588:function(e,_,v){"use strict";v.r(_);var o=v(0),d=Object(o.a)({},(function(){var e=this,_=e.$createElement,v=e._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("p",[e._v("Defined in generated file: python/ops/gen_image_ops.py")]),e._v(" "),v("p",[e._v("Decode a PNG-encoded image to a uint8 or uint16 tensor.")]),e._v(" "),v("h3",{attrs:{id:"aliases"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("tf.compat.v1.image.decode_png")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v1.io.decode_png")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v2.image.decode_png")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v2.io.decode_png")])]),e._v(" "),v("li",[v("code",[e._v("tf.image.decode_png")])])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v(" tf.io.decode_png(\n    contents,\n    channels=0,\n    dtype=tf.dtypes.uint8,\n    name=None\n)\n")])])]),v("h3",{attrs:{id:"used-in-the-guide"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("t")]),e._v("f"),v("code",[e._v(".")]),e._v("d"),v("code",[e._v("a")]),e._v("t"),v("code",[e._v("a")]),e._v(":"),v("code"),e._v("B"),v("code",[e._v("u")]),e._v("i"),v("code",[e._v("l")]),e._v("d"),v("code"),e._v("T"),v("code",[e._v("e")]),e._v("n"),v("code",[e._v("s")]),e._v("o"),v("code",[e._v("r")]),e._v("F"),v("code",[e._v("l")]),e._v("o"),v("code",[e._v("w")]),e._v(" "),v("code",[e._v("i")]),e._v("n"),v("code",[e._v("p")]),e._v("u"),v("code",[e._v("t")]),e._v(" "),v("code",[e._v("p")]),e._v("i"),v("code",[e._v("p")]),e._v("e"),v("code",[e._v("l")]),e._v("i"),v("code",[e._v("n")]),e._v("e"),v("code",[e._v("s")])])]),e._v(" "),v("p",[e._v("The attr channels indicates the desired number of color channels for the decoded image.")]),e._v(" "),v("h4",{attrs:{id:"accepted-values-are"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#accepted-values-are","aria-hidden":"true"}},[e._v("#")]),e._v(" Accepted values are:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("0")]),e._v(":"),v("code"),e._v("U"),v("code",[e._v("s")]),e._v("e"),v("code"),e._v("t"),v("code",[e._v("h")]),e._v("e"),v("code"),e._v("n"),v("code",[e._v("u")]),e._v("m"),v("code",[e._v("b")]),e._v("e"),v("code",[e._v("r")]),e._v(" "),v("code",[e._v("o")]),e._v("f"),v("code"),e._v("c"),v("code",[e._v("h")]),e._v("a"),v("code",[e._v("n")]),e._v("n"),v("code",[e._v("e")]),e._v("l"),v("code",[e._v("s")]),e._v(" "),v("code",[e._v("i")]),e._v("n"),v("code"),e._v("t"),v("code",[e._v("h")]),e._v("e"),v("code"),e._v("P"),v("code",[e._v("N")]),e._v("G"),v("code",[e._v("-")]),e._v("e"),v("code",[e._v("n")]),e._v("c"),v("code",[e._v("o")]),e._v("d"),v("code",[e._v("e")]),e._v("d"),v("code"),e._v("i"),v("code",[e._v("m")]),e._v("a"),v("code",[e._v("g")]),e._v("e"),v("code",[e._v(".")])]),e._v(" "),v("li",[v("code",[e._v("1")]),e._v(":"),v("code"),e._v("o"),v("code",[e._v("u")]),e._v("t"),v("code",[e._v("p")]),e._v("u"),v("code",[e._v("t")]),e._v(" "),v("code",[e._v("a")]),e._v(" "),v("code",[e._v("g")]),e._v("r"),v("code",[e._v("a")]),e._v("y"),v("code",[e._v("s")]),e._v("c"),v("code",[e._v("a")]),e._v("l"),v("code",[e._v("e")]),e._v(" "),v("code",[e._v("i")]),e._v("m"),v("code",[e._v("a")]),e._v("g"),v("code",[e._v("e")]),e._v(".``")]),e._v(" "),v("li",[v("code",[e._v("3")]),e._v(":"),v("code"),e._v("o"),v("code",[e._v("u")]),e._v("t"),v("code",[e._v("p")]),e._v("u"),v("code",[e._v("t")]),e._v(" "),v("code",[e._v("a")]),e._v("n"),v("code"),e._v("R"),v("code",[e._v("G")]),e._v("B"),v("code"),e._v("i"),v("code",[e._v("m")]),e._v("a"),v("code",[e._v("g")]),e._v("e"),v("code",[e._v(".")])]),e._v(" "),v("li",[v("code",[e._v("4")]),e._v(":"),v("code"),e._v("o"),v("code",[e._v("u")]),e._v("t"),v("code",[e._v("p")]),e._v("u"),v("code",[e._v("t")]),e._v(" "),v("code",[e._v("a")]),e._v("n"),v("code"),e._v("R"),v("code",[e._v("G")]),e._v("B"),v("code",[e._v("A")]),e._v(" "),v("code",[e._v("i")]),e._v("m"),v("code",[e._v("a")]),e._v("g"),v("code",[e._v("e")]),e._v(".``")])]),e._v(" "),v("p",[e._v("If needed, the PNG-encoded image is transformed to match the requested number of color channels.\n"),v("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_image",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.image.decode_image"),v("OutboundLink")],1),e._v("This op also supports decoding JPEGs and non-animated GIFs since the interface is the same, though it is cleaner to use .")]),e._v(" "),v("h4",{attrs:{id:"args"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("contents")]),e._v(": A "),v("code",[e._v("Tensor")]),e._v(" of type "),v("code",[e._v("string")]),e._v(". 0-D. The PNG-encoded image.")]),e._v(" "),v("li",[v("code",[e._v("channels")]),e._v(": An optional "),v("code",[e._v("int")]),e._v(". Defaults to "),v("code",[e._v("0")]),e._v(". Number of color "),v("code",[e._v("channels")]),e._v(" for the decoded image.")]),e._v(" "),v("li",[v("code",[e._v("dtype")]),e._v(": An optional "),v("code",[e._v("tf.DType")]),e._v(" from: "),v("code",[e._v("tf.uint8, tf.uint16")]),e._v(". Defaults to "),v("code",[e._v("tf.uint8")]),e._v(".")]),e._v(" "),v("li",[v("code",[e._v("name")]),e._v(": A "),v("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),v("h4",{attrs:{id:"returns"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),v("p",[e._v("A Tensor of type dtype.")])])}),[],!1,null,null,null);_.default=d.exports}}]);