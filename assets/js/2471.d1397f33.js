(window.webpackJsonp=window.webpackJsonp||[]).push([[2471],{2659:function(t,e,o){"use strict";o.r(e);var n=o(0),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("p",[t._v("Builds an operator that compiles and runs computation with XLA.")]),t._v(" "),o("h3",{attrs:{id:"aliases"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("tf.compat.v1.xla.experimental.compile")])]),t._v(" "),o("li",[o("code",[t._v("tf.compat.v2.xla.experimental.compile")])])]),t._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v(" tf.xla.experimental.compile(\n    computation,\n    inputs=None\n)\n")])])]),o("p",[t._v("NOTE: In eager mode, computation will have @tf.function semantics.")]),t._v(" "),o("h4",{attrs:{id:"args"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("computation")]),t._v(": A Python function that builds a "),o("code",[t._v("computation")]),t._v(" to apply to the input. If the function takes n inputs, 'inputs' should be a list of n tensors.\n"),o("code",[t._v("computation")]),t._v(" may return a list of operations and tensors. Tensors must come before operations in the returned list. The return value of "),o("code",[t._v("compile")]),t._v(" is a list of tensors corresponding to the tensors from the output of "),o("code",[t._v("computation")]),t._v(".\nAll "),o("code",[t._v("Operation")]),t._v("s returned from "),o("code",[t._v("computation")]),t._v(" will be executed when evaluating any of the returned output tensors.")]),t._v(" "),o("li",[o("code",[t._v("inputs")]),t._v(": A list of "),o("code",[t._v("inputs")]),t._v(" or "),o("code",[t._v("None")]),t._v(" (equivalent to an empty list). Each input can be a nested structure containing values that are convertible to tensors. Note that passing an N-dimension list of compatible values will result in a N-dimension list of scalar tensors rather than a single Rank-N tensors. If you need different behavior, convert part of "),o("code",[t._v("inputs")]),t._v(" to tensors with "),o("code",[t._v("tf.convert_to_tensor")]),t._v(".")])]),t._v(" "),o("h4",{attrs:{id:"returns"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),o("p",[t._v("Same data structure as if computation(*inputs) is called directly with some exceptions for correctness. Exceptions include: 1) None output: a NoOp would be returned which control-depends on computation. 2) Single value output: A tuple containing the value would be returned. 3) Operation-only outputs: a NoOp would be returned which control-depends on computation. TODO(b/121383831): Investigate into removing these special cases.")]),t._v(" "),o("h4",{attrs:{id:"raises"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[t._v("#")]),t._v(" Raises:")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("RuntimeError")]),t._v(": if called when eager execution is enabled.")])])])}),[],!1,null,null,null);e.default=a.exports}}]);