(window.webpackJsonp=window.webpackJsonp||[]).push([[1758],{1949:function(a,e,t){"use strict";t.r(e);var s=t(0),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"class-gaussiannoise"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-gaussiannoise","aria-hidden":"true"}},[a._v("#")]),a._v(" Class GaussianNoise")]),a._v(" "),t("p",[a._v("Apply additive zero-centered Gaussian noise.\n"),t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/keras/layers/Layer",target:"_blank",rel:"noopener noreferrer"}},[a._v("Layer"),t("OutboundLink")],1),a._v("Inherits From:")]),a._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),t("ul",[t("li",[a._v("Class "),t("code",[a._v("tf.compat.v1.keras.layers.GaussianNoise")])]),a._v(" "),t("li",[a._v("Class "),t("code",[a._v("tf.compat.v2.keras.layers.GaussianNoise")])])]),a._v(" "),t("p",[a._v("This is useful to mitigate overfitting (you could see it as a form of random data augmentation). Gaussian Noise (GS) is a natural choice as corruption process for real valued inputs.")]),a._v(" "),t("p",[a._v("As it is a regularization layer, it is only active at training time.")]),a._v(" "),t("h4",{attrs:{id:"arguments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[a._v("#")]),a._v(" Arguments:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("stddev")]),a._v(": Float, standard deviation of the noise distribution.")])]),a._v(" "),t("h4",{attrs:{id:"call-arguments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#call-arguments","aria-hidden":"true"}},[a._v("#")]),a._v(" Call arguments:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("inputs")]),a._v(": Input tensor (of any rank).")]),a._v(" "),t("li",[t("code",[a._v("training")]),a._v(": Python boolean indicating whether the layer should behave in "),t("code",[a._v("training")]),a._v(" mode (adding noise) or in inference mode (doing nothing).")])]),a._v(" "),t("h4",{attrs:{id:"input-shape"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#input-shape","aria-hidden":"true"}},[a._v("#")]),a._v(" Input shape:")]),a._v(" "),t("p",[a._v("Arbitrary. Use the keyword argument input_shape (tuple of integers, does not include the samples axis) when using this layer as the first layer in a model.")]),a._v(" "),t("h4",{attrs:{id:"output-shape"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#output-shape","aria-hidden":"true"}},[a._v("#")]),a._v(" Output shape:")]),a._v(" "),t("p",[a._v("Same shape as input.")]),a._v(" "),t("h2",{attrs:{id:"init"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("strong",[a._v("init")])]),a._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/noise.py#L59-L62",target:"_blank",rel:"noopener noreferrer"}},[a._v("View source"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" __init__(\n    stddev,\n    **kwargs\n)\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);