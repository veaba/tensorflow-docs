(window.webpackJsonp=window.webpackJsonp||[]).push([[324],{512:function(a,t,e){"use strict";e.r(t);var s=e(0),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("Parser for a whitespace-separated list of strings.\n"),e("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/BaseListParser",target:"_blank",rel:"noopener noreferrer"}},[a._v("BaseListParser"),e("OutboundLink")],1),a._v("Inherits From:")]),a._v(" "),e("h3",{attrs:{id:"aliases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),e("ul",[e("li",[a._v("Class "),e("code",[a._v("tf.compat.v1.app.flags.WhitespaceSeparatedListParser")])])]),a._v(" "),e("h2",{attrs:{id:"init"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("strong",[a._v("init")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(" __init__(comma_compat=False)\n")])])]),e("p",[a._v("Initializer.")]),a._v(" "),e("h4",{attrs:{id:"args"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[a._v("#")]),a._v(" Args:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("comma_compat")]),a._v(": bool, whether to support comma as an additional separator. If False then only whitespace is supported. This is intended only for backwards compatibility with flags that used to be comma-separated.")])]),a._v(" "),e("h2",{attrs:{id:"methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[a._v("#")]),a._v(" Methods")]),a._v(" "),e("h3",{attrs:{id:"flag-type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flag-type","aria-hidden":"true"}},[a._v("#")]),a._v(" flag_type")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(" flag_type()\n")])])]),e("p",[a._v("See base class.")]),a._v(" "),e("h3",{attrs:{id:"parse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parse","aria-hidden":"true"}},[a._v("#")]),a._v(" parse")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(" parse(argument)\n")])])]),e("p",[a._v("Parses argument as whitespace-separated list of strings.")]),a._v(" "),e("p",[a._v("It also parses argument as comma-separated list of strings if requested.")]),a._v(" "),e("h4",{attrs:{id:"args-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Args:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("argument")]),a._v(": string "),e("code",[a._v("argument")]),a._v(" passed in the commandline.")])]),a._v(" "),e("h4",{attrs:{id:"returns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns:")]),a._v(" "),e("p",[a._v("[str], the parsed flag value.")])])}),[],!1,null,null,null);t.default=r.exports}}]);