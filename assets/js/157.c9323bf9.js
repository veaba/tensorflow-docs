(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{345:function(t,e,r){"use strict";r.r(e);var a=r(0),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"class-iterator"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#class-iterator","aria-hidden":"true"}},[t._v("#")]),t._v(" Class Iterator")]),t._v(" "),r("p",[t._v("Represents the state of iterating through a Dataset.")]),t._v(" "),r("h2",{attrs:{id:"init"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[t._v("#")]),t._v(" "),r("strong",[t._v("init")])]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/data/ops/iterator_ops.py#L78-L116",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),r("OutboundLink")],1)]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(" __init__(\n    iterator_resource,\n    initializer,\n    output_types,\n    output_shapes,\n    output_classes\n)\n")])])]),r("p",[t._v("Creates a new iterator from the given iterator resource.")]),t._v(" "),r("h4",{attrs:{id:"args"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("iterator_resource")]),t._v(": A "),r("code",[t._v("tf.resource")]),t._v(" scalar "),r("code",[t._v("tf.Tensor")]),t._v(" representing the iterator.")]),t._v(" "),r("li",[r("code",[t._v("initializer")]),t._v(": A "),r("code",[t._v("tf.Operation")]),t._v(" that should be run to initialize this iterator.")]),t._v(" "),r("li",[r("code",[t._v("output_types")]),t._v(": A nested structure of "),r("code",[t._v("tf.DType")]),t._v(" objects corresponding to each component of an element of this iterator.")]),t._v(" "),r("li",[r("code",[t._v("output_shapes")]),t._v(": A nested structure of "),r("code",[t._v("tf.Tensor")]),t._v("Shape objects corresponding to each component of an element of this iterator.")]),t._v(" "),r("li",[r("code",[t._v("output_classes")]),t._v(": A nested structure of Python "),r("code",[t._v("type")]),t._v(" objects corresponding to each component of an element of this iterator.")])]),t._v(" "),r("h2",{attrs:{id:"properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),r("h3",{attrs:{id:"element-spec"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#element-spec","aria-hidden":"true"}},[t._v("#")]),t._v(" element_spec")]),t._v(" "),r("p",[t._v("The type specification of an element of this iterator.")]),t._v(" "),r("h4",{attrs:{id:"returns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/TypeSpec",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.TypeSpec"),r("OutboundLink")],1),t._v("A nested structure of  objects matching the structure of an element of this iterator and specifying the type of individual components.")]),t._v(" "),r("h3",{attrs:{id:"initializer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#initializer","aria-hidden":"true"}},[t._v("#")]),t._v(" initializer")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/Operation",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.Operation"),r("OutboundLink")],1),t._v("A  that should be run to initialize this iterator.")]),t._v(" "),r("h4",{attrs:{id:"returns-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/Operation",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.Operation"),r("OutboundLink")],1),t._v("A  that should be run to initialize this iterator")]),t._v(" "),r("h4",{attrs:{id:"raises"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[t._v("#")]),t._v(" Raises:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("ValueError")]),t._v(": If this iterator initializes itself automatically.")])]),t._v(" "),r("h3",{attrs:{id:"output-classes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#output-classes","aria-hidden":"true"}},[t._v("#")]),t._v(" output_classes")]),t._v(" "),r("p",[t._v("Returns the class of each component of an element of this iterator. (deprecated)\n"),r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/Tensor",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.Tensor"),r("OutboundLink")],1),t._v("The expected values are  and tf.SparseTensor.")]),t._v(" "),r("h4",{attrs:{id:"returns-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),r("p",[t._v("A nested structure of Python type objects corresponding to each component of an element of this dataset.")]),t._v(" "),r("h3",{attrs:{id:"output-shapes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#output-shapes","aria-hidden":"true"}},[t._v("#")]),t._v(" output_shapes")]),t._v(" "),r("p",[t._v("Returns the shape of each component of an element of this iterator. (deprecated)")]),t._v(" "),r("h4",{attrs:{id:"returns-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-4","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/TensorShape",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.TensorShape"),r("OutboundLink")],1),t._v("A nested structure of  objects corresponding to each component of an element of this dataset.")]),t._v(" "),r("h3",{attrs:{id:"output-types"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#output-types","aria-hidden":"true"}},[t._v("#")]),t._v(" output_types")]),t._v(" "),r("p",[t._v("Returns the type of each component of an element of this iterator. (deprecated)")]),t._v(" "),r("h4",{attrs:{id:"returns-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-5","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/dtypes/DType",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.DType"),r("OutboundLink")],1),t._v("A nested structure of  objects corresponding to each component of an element of this dataset.")]),t._v(" "),r("h2",{attrs:{id:"methods"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),r("h3",{attrs:{id:"from-string-handle"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#from-string-handle","aria-hidden":"true"}},[t._v("#")]),t._v(" from_string_handle")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/data/ops/iterator_ops.py#L222-L298",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),r("OutboundLink")],1)]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(" @staticmethod\nfrom_string_handle(\n    string_handle,\n    output_types,\n    output_shapes=None,\n    output_classes=None\n)\n")])])]),r("p",[t._v("Creates a new, uninitialized Iterator based on the given handle.\n"),r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/placeholder",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.compat.v1.placeholder"),r("OutboundLink")],1),t._v('This method allows you to define a "feedable" iterator where you can choose between concrete iterators by feeding a value in a tf.Session.run call. In that case, string_handle would be a , and you would feed it with the value of tf.data.Iterator.string_handle in each step.')]),t._v(" "),r("p",[t._v("For example, if you had two iterators that marked the current position in a training dataset and a test dataset, you could choose which to use in each step as follows:")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(" train_iterator = tf.data.Dataset(...).make_one_shot_iterator()\ntrain_iterator_handle = sess.run(train_iterator.string_handle())\n\ntest_iterator = tf.data.Dataset(...).make_one_shot_iterator()\ntest_iterator_handle = sess.run(test_iterator.string_handle())\n\nhandle = tf.compat.v1.placeholder(tf.string, shape=[])\niterator = tf.data.Iterator.from_string_handle(\n    handle, train_iterator.output_types)\n\nnext_element = iterator.get_next()\nloss = f(next_element)\n\ntrain_loss = sess.run(loss, feed_dict={handle: train_iterator_handle})\ntest_loss = sess.run(loss, feed_dict={handle: test_iterator_handle})\n")])])]),r("h4",{attrs:{id:"args-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("string_handle")]),t._v(": A scalar "),r("code",[t._v("tf.Tensor")]),t._v(" of type "),r("code",[t._v("tf.string")]),t._v(" that evaluates to a handle produced by the "),r("code",[t._v("Iterator.string_handle")]),t._v("() method.")]),t._v(" "),r("li",[r("code",[t._v("output_types")]),t._v(": A nested structure of "),r("code",[t._v("tf.DType")]),t._v(" objects corresponding to each component of an element of this dataset.")]),t._v(" "),r("li",[r("code",[t._v("output_shapes")]),t._v(": (Optional.) A nested structure of "),r("code",[t._v("tf.Tensor")]),t._v("Shape objects corresponding to each component of an element of this dataset. If omitted, each component will have an unconstrainted shape.")]),t._v(" "),r("li",[r("code",[t._v("output_classes")]),t._v(": (Optional.) A nested structure of Python "),r("code",[t._v("type")]),t._v(" objects corresponding to each component of an element of this iterator. If omitted, each component is assumed to be of "),r("code",[t._v("type")]),t._v(" "),r("code",[t._v("tf.Tensor")]),t._v(".")])]),t._v(" "),r("h4",{attrs:{id:"returns-6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-6","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),r("p",[t._v("An Iterator.")]),t._v(" "),r("h3",{attrs:{id:"from-structure"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#from-structure","aria-hidden":"true"}},[t._v("#")]),t._v(" from_structure")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/data/ops/iterator_ops.py#L118-L220",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),r("OutboundLink")],1)]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(" @staticmethod\nfrom_structure(\n    output_types,\n    output_shapes=None,\n    shared_name=None,\n    output_classes=None\n)\n")])])]),r("p",[t._v("Creates a new, uninitialized Iterator with the given structure.")]),t._v(" "),r("p",[t._v("This iterator-constructing method can be used to create an iterator that is reusable with many different datasets.")]),t._v(" "),r("p",[t._v("The returned iterator is not bound to a particular dataset, and it has no initializer. To initialize the iterator, run the operation returned by Iterator.make_initializer(dataset).")]),t._v(" "),r("p",[t._v("The following is an example")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(" iterator = Iterator.from_structure(tf.int64, tf.TensorShape([]))\n\ndataset_range = Dataset.range(10)\nrange_initializer = iterator.make_initializer(dataset_range)\n\ndataset_evens = dataset_range.filter(lambda x: x % 2 == 0)\nevens_initializer = iterator.make_initializer(dataset_evens)\n\n# Define a model based on the iterator; in this example, the model_fn\n# is expected to take scalar tf.int64 Tensors as input (see\n# the definition of 'iterator' above).\nprediction, loss = model_fn(iterator.get_next())\n\n# Train for `num_epochs`, where for each epoch, we first iterate over\n# dataset_range, and then iterate over dataset_evens.\nfor _ in range(num_epochs):\n  # Initialize the iterator to `dataset_range`\n  sess.run(range_initializer)\n  while True:\n    try:\n      pred, loss_val = sess.run([prediction, loss])\n    except tf.errors.OutOfRangeError:\n      break\n\n  # Initialize the iterator to `dataset_evens`\n  sess.run(evens_initializer)\n  while True:\n    try:\n      pred, loss_val = sess.run([prediction, loss])\n    except tf.errors.OutOfRangeError:\n      break\n")])])]),r("h4",{attrs:{id:"args-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("output_types")]),t._v(": A nested structure of "),r("code",[t._v("tf.DType")]),t._v(" objects corresponding to each component of an element of this dataset.")]),t._v(" "),r("li",[r("code",[t._v("output_shapes")]),t._v(": (Optional.) A nested structure of "),r("code",[t._v("tf.TensorShape")]),t._v(" objects corresponding to each component of an element of this dataset. If omitted, each component will have an unconstrainted shape.")]),t._v(" "),r("li",[r("code",[t._v("shared_name")]),t._v(": (Optional.) If non-empty, this iterator will be shared under the given name across multiple sessions that share the same devices (e.g. when using a remote server).")]),t._v(" "),r("li",[r("code",[t._v("output_classes")]),t._v(": (Optional.) A nested structure of Python "),r("code",[t._v("type")]),t._v(" objects corresponding to each component of an element of this iterator. If omitted, each component is assumed to be of "),r("code",[t._v("type")]),t._v(" "),r("code",[t._v("tf.Tensor")]),t._v(".")])]),t._v(" "),r("h4",{attrs:{id:"returns-7"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-7","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),r("p",[t._v("An Iterator.")]),t._v(" "),r("h4",{attrs:{id:"raises-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises-2","aria-hidden":"true"}},[t._v("#")]),t._v(" Raises:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("TypeError")]),t._v(": If the structures of "),r("code",[t._v("output_shapes")]),t._v(" and "),r("code",[t._v("output_types")]),t._v(" are not the same.")])]),t._v(" "),r("h3",{attrs:{id:"get-next"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#get-next","aria-hidden":"true"}},[t._v("#")]),t._v(" get_next")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/data/ops/iterator_ops.py#L373-L427",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),r("OutboundLink")],1)]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(" get_next(name=None)\n")])])]),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/Tensor",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.Tensor"),r("OutboundLink")],1),t._v("Returns a nested structure of s representing the next element.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/errors/OutOfRangeError",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.errors.OutOfRangeError"),r("OutboundLink")],1),t._v("In graph mode, you should typically call this method once and use its result as the input to another computation. A typical loop will then call tf.Session.run on the result of that computation. The loop will terminate when the Iterator.get_next() operation raises . The following skeleton shows how to use this method when building a training loop:")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(" dataset = ...  # A `tf.data.Dataset` object.\niterator = dataset.make_initializable_iterator()\nnext_element = iterator.get_next()\n\n# Build a TensorFlow graph that does something with each element.\nloss = model_function(next_element)\noptimizer = ...  # A `tf.compat.v1.train.Optimizer` object.\ntrain_op = optimizer.minimize(loss)\n\nwith tf.compat.v1.Session() as sess:\n  try:\n    while True:\n      sess.run(train_op)\n  except tf.errors.OutOfRangeError:\n    pass\n")])])]),r("p",[t._v("NOTE: It is legitimate to call Iterator.get_next() multiple times, e.g. when you are distributing different elements to multiple devices in a single step. However, a common pitfall arises when users call Iterator.get_next() in each iteration of their training loop. Iterator.get_next() adds ops to the graph, and executing each op allocates resources (including threads); as a consequence, invoking it in every iteration of a training loop causes slowdown and eventual resource exhaustion. To guard against this outcome, we log a warning when the number of uses crosses a fixed threshold of suspiciousness.")]),t._v(" "),r("h4",{attrs:{id:"args-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("name")]),t._v(": (Optional.) A "),r("code",[t._v("name")]),t._v(" for the created operation.")])]),t._v(" "),r("h4",{attrs:{id:"returns-8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-8","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/Tensor",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.Tensor"),r("OutboundLink")],1),t._v("A nested structure of  objects.")]),t._v(" "),r("h3",{attrs:{id:"make-initializer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#make-initializer","aria-hidden":"true"}},[t._v("#")]),t._v(" make_initializer")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/data/ops/iterator_ops.py#L317-L371",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),r("OutboundLink")],1)]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(" make_initializer(\n    dataset,\n    name=None\n)\n")])])]),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/Operation",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.Operation"),r("OutboundLink")],1),t._v("Returns a  that initializes this iterator on dataset.")]),t._v(" "),r("h4",{attrs:{id:"args-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-5","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("dataset")]),t._v(": A "),r("code",[t._v("Dataset")]),t._v(" with compatible structure to this iterator.")]),t._v(" "),r("li",[r("code",[t._v("name")]),t._v(": (Optional.) A "),r("code",[t._v("name")]),t._v(" for the created operation.")])]),t._v(" "),r("h4",{attrs:{id:"returns-9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-9","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/Operation",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.Operation"),r("OutboundLink")],1),t._v("A  that can be run to initialize this iterator on the given dataset.")]),t._v(" "),r("h4",{attrs:{id:"raises-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises-3","aria-hidden":"true"}},[t._v("#")]),t._v(" Raises:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("TypeError")]),t._v(": If "),r("code",[t._v("dataset")]),t._v(" and this iterator do not have a compatible element structure.")])]),t._v(" "),r("h3",{attrs:{id:"string-handle"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#string-handle","aria-hidden":"true"}},[t._v("#")]),t._v(" string_handle")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/data/ops/iterator_ops.py#L429-L442",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),r("OutboundLink")],1)]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(" string_handle(name=None)\n")])])]),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/Tensor",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.Tensor"),r("OutboundLink")],1),t._v("Returns a string-valued  that represents this iterator.")]),t._v(" "),r("h4",{attrs:{id:"args-6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-6","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("name")]),t._v(": (Optional.) A "),r("code",[t._v("name")]),t._v(" for the created operation.")])]),t._v(" "),r("h4",{attrs:{id:"returns-10"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-10","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/Tensor",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.Tensor"),r("OutboundLink")],1),t._v("A scalar  of type tf.string.")])])}),[],!1,null,null,null);e.default=s.exports}}]);