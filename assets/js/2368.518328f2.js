(window.webpackJsonp=window.webpackJsonp||[]).push([[2368],{2556:function(e,t,s){"use strict";s.r(t);var a=s(0),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Defined in generated file: python/ops/gen_string_ops.py")]),e._v(" "),s("p",[e._v("Joins the strings in the given list of string tensors into one tensor;")]),e._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tf.compat.v1.string_join")])]),e._v(" "),s("li",[s("code",[e._v("tf.compat.v1.strings.join")])]),e._v(" "),s("li",[s("code",[e._v("tf.compat.v2.strings.join")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.strings.join(\n    inputs,\n    separator='',\n    name=None\n)\n")])])]),s("h3",{attrs:{id:"used-in-the-guide"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("R")]),e._v("a"),s("code",[e._v("g")]),e._v("g"),s("code",[e._v("e")]),e._v("d"),s("code"),e._v("t"),s("code",[e._v("e")]),e._v("n"),s("code",[e._v("s")]),e._v("o"),s("code",[e._v("r")]),e._v("s``")])]),e._v(" "),s("p",[e._v("with the given separator (default is an empty separator).")]),e._v(" "),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("inputs")]),e._v(": A list of at least 1 "),s("code",[e._v("Tensor")]),e._v(" objects with type "),s("code",[e._v("string")]),e._v(". A list of "),s("code",[e._v("string")]),e._v(" tensors. The tensors must all have the same shape, or be scalars. Scalars may be mixed in; these will be broadcast to the shape of non-scalar "),s("code",[e._v("inputs")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("separator")]),e._v(": An optional "),s("code",[e._v("string")]),e._v(". Defaults to "),s("code",[e._v('""')]),e._v(". "),s("code",[e._v("string")]),e._v(", an optional join "),s("code",[e._v("separator")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("name")]),e._v(": A "),s("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("A Tensor of type string.")])])}),[],!1,null,null,null);t.default=n.exports}}]);