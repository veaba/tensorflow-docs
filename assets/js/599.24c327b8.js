(window.webpackJsonp=window.webpackJsonp||[]).push([[599],{787:function(e,t,a){"use strict";a.r(t);var s=a(0),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Computes the recall of the predictions with respect to the labels.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.compat.v1.metrics.recall(\n    labels,\n    predictions,\n    weights=None,\n    metrics_collections=None,\n    updates_collections=None,\n    name=None\n)\n")])])]),a("p",[e._v("The recall function creates two local variables, true_positives and false_negatives, that are used to compute the recall. This value is ultimately returned as recall, an idempotent operation that simply divides true_positives by the sum of true_positives and false_negatives.")]),e._v(" "),a("p",[e._v("For estimation of the metric over a stream of data, the function creates an update_op that updates these variables and returns the recall. update_op weights each prediction by the corresponding value in weights.")]),e._v(" "),a("p",[e._v("If weights is None, weights default to 1. Use weights of 0 to mask values.")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("labels")]),e._v(": The ground truth values, a "),a("code",[e._v("Tensor")]),e._v(" whose dimensions must match "),a("code",[e._v("predictions")]),e._v(". Will be cast to "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("predictions")]),e._v(": The predicted values, a "),a("code",[e._v("Tensor")]),e._v(" of arbitrary dimensions. Will be cast to "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("weights")]),e._v(": Optional "),a("code",[e._v("Tensor")]),e._v(" whose rank is either 0, or the same rank as "),a("code",[e._v("labels")]),e._v(", and must be broadcastable to "),a("code",[e._v("labels")]),e._v(" (i.e., all dimensions must be either "),a("code",[e._v("1")]),e._v(", or the same as the corresponding "),a("code",[e._v("labels")]),e._v(" dimension).")]),e._v(" "),a("li",[a("code",[e._v("metrics_collections")]),e._v(": An optional list of collections that "),a("code",[e._v("recall")]),e._v(" should be added to.")]),e._v(" "),a("li",[a("code",[e._v("updates_collections")]),e._v(": An optional list of collections that "),a("code",[e._v("update_op")]),e._v(" should be added to.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": An optional variable_scope "),a("code",[e._v("name")]),e._v(".")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("recall")]),e._v(": Scalar float "),a("code",[e._v("Tensor")]),e._v(" with the value of "),a("code",[e._v("true_positives")]),e._v(" divided by the sum of "),a("code",[e._v("true_positives")]),e._v(" and "),a("code",[e._v("false_negatives")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("update_op")]),e._v(": "),a("code",[e._v("Operation")]),e._v(" that increments "),a("code",[e._v("true_positives")]),e._v(" and "),a("code",[e._v("false_negatives")]),e._v(" variables appropriately and whose value matches "),a("code",[e._v("recall")]),e._v(".")])]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If "),a("code",[e._v("predictions")]),e._v(" and "),a("code",[e._v("labels")]),e._v(" have mismatched shapes, or if "),a("code",[e._v("weights")]),e._v(" is not "),a("code",[e._v("None")]),e._v(" and its shape doesn't match "),a("code",[e._v("predictions")]),e._v(", or if either "),a("code",[e._v("metrics_collections")]),e._v(" or "),a("code",[e._v("updates_collections")]),e._v(" are not a list or tuple.")]),e._v(" "),a("li",[a("code",[e._v("RuntimeError")]),e._v(": If eager execution is enabled.")])])])}),[],!1,null,null,null);t.default=o.exports}}]);