(window.webpackJsonp=window.webpackJsonp||[]).push([[1317],{1506:function(e,v,_){"use strict";_.r(v);var o=_(0),d=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[e._v("Represents real valued or numerical features.")]),e._v(" "),_("h3",{attrs:{id:"aliases"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("tf.compat.v1.feature_column.numeric_column")])]),e._v(" "),_("li",[_("code",[e._v("tf.compat.v2.feature_column.numeric_column")])])]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" tf.feature_column.numeric_column(\n    key,\n    shape=(1,),\n    default_value=None,\n    dtype=tf.dtypes.float32,\n    normalizer_fn=None\n)\n")])])]),_("h3",{attrs:{id:"used-in-the-guide"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("D")]),e._v("i"),_("code",[e._v("s")]),e._v("t"),_("code",[e._v("r")]),e._v("i"),_("code",[e._v("b")]),e._v("u"),_("code",[e._v("t")]),e._v("e"),_("code",[e._v("d")]),e._v(" "),_("code",[e._v("t")]),e._v("r"),_("code",[e._v("a")]),e._v("i"),_("code",[e._v("n")]),e._v("i"),_("code",[e._v("n")]),e._v("g"),_("code"),e._v("w"),_("code",[e._v("i")]),e._v("t"),_("code",[e._v("h")]),e._v(" "),_("code",[e._v("T")]),e._v("e"),_("code",[e._v("n")]),e._v("s"),_("code",[e._v("o")]),e._v("r"),_("code",[e._v("F")]),e._v("l"),_("code",[e._v("o")]),e._v("w``")]),e._v(" "),_("li",[_("code",[e._v("U")]),e._v("s"),_("code",[e._v("i")]),e._v("n"),_("code",[e._v("g")]),e._v(" "),_("code",[e._v("t")]),e._v("h"),_("code",[e._v("e")]),e._v(" "),_("code",[e._v("S")]),e._v("a"),_("code",[e._v("v")]),e._v("e"),_("code",[e._v("d")]),e._v("M"),_("code",[e._v("o")]),e._v("d"),_("code",[e._v("e")]),e._v("l"),_("code"),e._v("f"),_("code",[e._v("o")]),e._v("r"),_("code",[e._v("m")]),e._v("a"),_("code",[e._v("t")])]),e._v(" "),_("li",[_("code",[e._v("t")]),e._v("f"),_("code",[e._v(".")]),e._v("d"),_("code",[e._v("a")]),e._v("t"),_("code",[e._v("a")]),e._v(":"),_("code"),e._v("B"),_("code",[e._v("u")]),e._v("i"),_("code",[e._v("l")]),e._v("d"),_("code"),e._v("T"),_("code",[e._v("e")]),e._v("n"),_("code",[e._v("s")]),e._v("o"),_("code",[e._v("r")]),e._v("F"),_("code",[e._v("l")]),e._v("o"),_("code",[e._v("w")]),e._v(" "),_("code",[e._v("i")]),e._v("n"),_("code",[e._v("p")]),e._v("u"),_("code",[e._v("t")]),e._v(" "),_("code",[e._v("p")]),e._v("i"),_("code",[e._v("p")]),e._v("e"),_("code",[e._v("l")]),e._v("i"),_("code",[e._v("n")]),e._v("e"),_("code",[e._v("s")])])]),e._v(" "),_("h3",{attrs:{id:"used-in-the-tutorials"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("B")]),e._v("o"),_("code",[e._v("o")]),e._v("s"),_("code",[e._v("t")]),e._v("e"),_("code",[e._v("d")]),e._v(" "),_("code",[e._v("t")]),e._v("r"),_("code",[e._v("e")]),e._v("e"),_("code",[e._v("s")]),e._v(" "),_("code",[e._v("u")]),e._v("s"),_("code",[e._v("i")]),e._v("n"),_("code",[e._v("g")]),e._v(" "),_("code",[e._v("E")]),e._v("s"),_("code",[e._v("t")]),e._v("i"),_("code",[e._v("m")]),e._v("a"),_("code",[e._v("t")]),e._v("o"),_("code",[e._v("r")]),e._v("s``")]),e._v(" "),_("li",[_("code",[e._v("B")]),e._v("u"),_("code",[e._v("i")]),e._v("l"),_("code",[e._v("d")]),e._v(" "),_("code",[e._v("a")]),e._v(" "),_("code",[e._v("l")]),e._v("i"),_("code",[e._v("n")]),e._v("e"),_("code",[e._v("a")]),e._v("r"),_("code"),e._v("m"),_("code",[e._v("o")]),e._v("d"),_("code",[e._v("e")]),e._v("l"),_("code"),e._v("w"),_("code",[e._v("i")]),e._v("t"),_("code",[e._v("h")]),e._v(" "),_("code",[e._v("E")]),e._v("s"),_("code",[e._v("t")]),e._v("i"),_("code",[e._v("m")]),e._v("a"),_("code",[e._v("t")]),e._v("o"),_("code",[e._v("r")]),e._v("s``")]),e._v(" "),_("li",[_("code",[e._v("C")]),e._v("l"),_("code",[e._v("a")]),e._v("s"),_("code",[e._v("s")]),e._v("i"),_("code",[e._v("f")]),e._v("y"),_("code"),e._v("s"),_("code",[e._v("t")]),e._v("r"),_("code",[e._v("u")]),e._v("c"),_("code",[e._v("t")]),e._v("u"),_("code",[e._v("r")]),e._v("e"),_("code",[e._v("d")]),e._v(" "),_("code",[e._v("d")]),e._v("a"),_("code",[e._v("t")]),e._v("a"),_("code"),e._v("w"),_("code",[e._v("i")]),e._v("t"),_("code",[e._v("h")]),e._v(" "),_("code",[e._v("f")]),e._v("e"),_("code",[e._v("a")]),e._v("t"),_("code",[e._v("u")]),e._v("r"),_("code",[e._v("e")]),e._v(" "),_("code",[e._v("c")]),e._v("o"),_("code",[e._v("l")]),e._v("u"),_("code",[e._v("m")]),e._v("n"),_("code",[e._v("s")])]),e._v(" "),_("li",[_("code",[e._v("G")]),e._v("r"),_("code",[e._v("a")]),e._v("d"),_("code",[e._v("i")]),e._v("e"),_("code",[e._v("n")]),e._v("t"),_("code"),e._v("B"),_("code",[e._v("o")]),e._v("o"),_("code",[e._v("s")]),e._v("t"),_("code",[e._v("e")]),e._v("d"),_("code"),e._v("T"),_("code",[e._v("r")]),e._v("e"),_("code",[e._v("e")]),e._v("s"),_("code",[e._v(":")]),e._v(" "),_("code",[e._v("M")]),e._v("o"),_("code",[e._v("d")]),e._v("e"),_("code",[e._v("l")]),e._v(" "),_("code",[e._v("u")]),e._v("n"),_("code",[e._v("d")]),e._v("e"),_("code",[e._v("r")]),e._v("s"),_("code",[e._v("t")]),e._v("a"),_("code",[e._v("n")]),e._v("d"),_("code",[e._v("i")]),e._v("n"),_("code",[e._v("g")])]),e._v(" "),_("li",[_("code",[e._v("L")]),e._v("o"),_("code",[e._v("a")]),e._v("d"),_("code"),e._v("C"),_("code",[e._v("S")]),e._v("V"),_("code"),e._v("d"),_("code",[e._v("a")]),e._v("t"),_("code",[e._v("a")])]),e._v(" "),_("li",[_("code",[e._v("P")]),e._v("r"),_("code",[e._v("e")]),e._v("m"),_("code",[e._v("a")]),e._v("d"),_("code",[e._v("e")]),e._v(" "),_("code",[e._v("E")]),e._v("s"),_("code",[e._v("t")]),e._v("i"),_("code",[e._v("m")]),e._v("a"),_("code",[e._v("t")]),e._v("o"),_("code",[e._v("r")]),e._v("s``")])]),e._v(" "),_("h4",{attrs:{id:"example"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#example","aria-hidden":"true"}},[e._v("#")]),e._v(" Example:")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" price = numeric_column('price')\ncolumns = [price, ...]\nfeatures = tf.io.parse_example(..., features=make_parse_example_spec(columns))\ndense_tensor = input_layer(features, columns)\n\n# or\nbucketized_price = bucketized_column(price, boundaries=[...])\ncolumns = [bucketized_price, ...]\nfeatures = tf.io.parse_example(..., features=make_parse_example_spec(columns))\nlinear_prediction = linear_model(features, columns)\n")])])]),_("h4",{attrs:{id:"args"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("key")]),e._v(": A unique string identifying the input feature. It is used as the column name and the dictionary "),_("code",[e._v("key")]),e._v(" for feature parsing configs, feature "),_("code",[e._v("Tensor")]),e._v(" objects, and feature columns.")]),e._v(" "),_("li",[_("code",[e._v("shape")]),e._v(": An iterable of integers specifies the "),_("code",[e._v("shape")]),e._v(" of the "),_("code",[e._v("Tensor")]),e._v(". An integer can be given which means a single dimension "),_("code",[e._v("Tensor")]),e._v(" with given width. The "),_("code",[e._v("Tensor")]),e._v(" representing the column will have the "),_("code",[e._v("shape")]),e._v(" of [batch_size] + "),_("code",[e._v("shape")]),e._v(".")]),e._v(" "),_("li",[_("code",[e._v("default_value")]),e._v(": A single value compatible with "),_("code",[e._v("dtype")]),e._v(" or an iterable of values compatible with "),_("code",[e._v("dtype")]),e._v(" which the column takes on during "),_("code",[e._v("tf.Example")]),e._v(" parsing if data is missing. A default value of "),_("code",[e._v("None")]),e._v(" will cause "),_("code",[e._v("tf.io.parse_example")]),e._v(" to fail if an example does not contain this column. If a single value is provided, the same value will be applied as the default value for every item. If an iterable of values is provided, the "),_("code",[e._v("shape")]),e._v(" of the "),_("code",[e._v("default_value")]),e._v(" should be equal to the given "),_("code",[e._v("shape")]),e._v(".")]),e._v(" "),_("li",[_("code",[e._v("dtype")]),e._v(": defines the type of values. Default value is "),_("code",[e._v("tf.float32")]),e._v(". Must be a non-quantized, real integer or floating point type.")]),e._v(" "),_("li",[_("code",[e._v("normalizer_fn")]),e._v(": If not "),_("code",[e._v("None")]),e._v(", a function that can be used to normalize the value of the tensor after "),_("code",[e._v("default_value")]),e._v(" is applied for parsing. Normalizer function takes the input "),_("code",[e._v("Tensor")]),e._v(" as its argument, and returns the output "),_("code",[e._v("Tensor")]),e._v(". (e.g. lambda x: (x - 3.0) / 4.2). Please note that even though the most common use case of this function is normalization, it can be used for any kind of "),_("code",[e._v("Tensor")]),e._v("flow transformations.")])]),e._v(" "),_("h4",{attrs:{id:"returns"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),_("p",[e._v("A NumericColumn.")]),e._v(" "),_("h4",{attrs:{id:"raises"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("TypeError")]),e._v(": if any dimension in shape is not an int")]),e._v(" "),_("li",[_("code",[e._v("ValueError")]),e._v(": if any dimension in shape is not a positive integer")]),e._v(" "),_("li",[_("code",[e._v("TypeError")]),e._v(": if "),_("code",[e._v("default_value")]),e._v(" is an iterable but not compatible with "),_("code",[e._v("shape")])]),e._v(" "),_("li",[_("code",[e._v("TypeError")]),e._v(": if "),_("code",[e._v("default_value")]),e._v(" is not compatible with "),_("code",[e._v("dtype")]),e._v(".")]),e._v(" "),_("li",[_("code",[e._v("ValueError")]),e._v(": if "),_("code",[e._v("dtype")]),e._v(" is not convertible to "),_("code",[e._v("tf.float32")]),e._v(".")])])])}),[],!1,null,null,null);v.default=d.exports}}]);