(window.webpackJsonp=window.webpackJsonp||[]).push([[1135],{1324:function(t,a,e){"use strict";e.r(a);var s=e(0),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("A transformation that scans a function across an input dataset.")]),t._v(" "),e("h3",{attrs:{id:"aliases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("tf.compat.v1.data.experimental.scan")])]),t._v(" "),e("li",[e("code",[t._v("tf.compat.v2.data.experimental.scan")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" tf.data.experimental.scan(\n    initial_state,\n    scan_func\n)\n")])])]),e("p",[e("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/Dataset#map",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.data.Dataset.map"),e("OutboundLink")],1),t._v("This transformation is a stateful relative of . In addition to mapping scan_func across the elements of the input dataset, scan() accumulates one or more state tensors, whose initial values are initial_state.")]),t._v(" "),e("h4",{attrs:{id:"args"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("initial_state")]),t._v(": A nested structure of tensors, representing the initial state of the accumulator.")]),t._v(" "),e("li",[e("code",[t._v("scan_func")]),t._v(": A function that maps ("),e("code",[t._v("old_state, input_element")]),t._v(") to (new_state, output_element). It must take two arguments and return a pair of nested structures of tensors. Thenew_state`must match the structure of"),e("code",[t._v("initial_state")]),t._v(".")])]),t._v(" "),e("h4",{attrs:{id:"returns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/Dataset#apply",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.data.Dataset.apply"),e("OutboundLink")],1),t._v("A Dataset transformation function, which can be passed to .")])])}),[],!1,null,null,null);a.default=n.exports}}]);