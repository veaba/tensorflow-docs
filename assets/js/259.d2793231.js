(window.webpackJsonp=window.webpackJsonp||[]).push([[259],{444:function(e,t,a){"use strict";a.r(t);var o=a(0),r=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Returns input function that would feed Pandas DataFrame into the model.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.compat.v1.estimator.inputs.pandas_input_fn(\n    x,\n    y=None,\n    batch_size=128,\n    num_epochs=1,\n    shuffle=None,\n    queue_capacity=1000,\n    num_threads=1,\n    target_column='target'\n)\n")])])]),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": pandas "),a("code",[e._v("DataFrame")]),e._v(" object.")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": pandas "),a("code",[e._v("Series")]),e._v(" object or "),a("code",[e._v("DataFrame")]),e._v(". "),a("code",[e._v("None")]),e._v(" if absent.")]),e._v(" "),a("li",[a("code",[e._v("batch_size")]),e._v(": int, size of batches to return.")]),e._v(" "),a("li",[a("code",[e._v("num_epochs")]),e._v(": int, number of epochs to iterate over data. If not "),a("code",[e._v("None")]),e._v(", read attempts that would e"),a("code",[e._v("x")]),e._v("ceed this value will raise "),a("code",[e._v("OutOfRangeError")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("shuffle")]),e._v(": bool, whether to read the records in random order.")]),e._v(" "),a("li",[a("code",[e._v("queue_capacity")]),e._v(": int, size of the read queue. If "),a("code",[e._v("None")]),e._v(", it will be set roughl"),a("code",[e._v("y")]),e._v(" to the size of "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("num_threads")]),e._v(": Integer, number of threads used for reading and enqueueing. In order to have predicted and repeatable order of reading and enqueueing, such as in prediction and evaluation mode, "),a("code",[e._v("num_threads")]),e._v(" should be 1.")]),e._v(" "),a("li",[a("code",[e._v("target_column")]),e._v(": str, name to give the target column "),a("code",[e._v("y")]),e._v(". This parameter is not used when "),a("code",[e._v("y")]),e._v(" is a "),a("code",[e._v("DataFrame")]),e._v(".")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("Function, that has signature of ()->(dict of features, target)")]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": if "),a("code",[e._v("x")]),e._v(" alread"),a("code",[e._v("y")]),e._v(" contains a column with the same name as "),a("code",[e._v("y")]),e._v(", or if the inde"),a("code",[e._v("x")]),e._v("es of "),a("code",[e._v("x")]),e._v(" and "),a("code",[e._v("y")]),e._v(" don't match.")]),e._v(" "),a("li",[a("code",[e._v("ValueError")]),e._v(": if 'shuffle' is not provided or a bool.")])])])}),[],!1,null,null,null);t.default=r.exports}}]);