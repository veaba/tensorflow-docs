(window.webpackJsonp=window.webpackJsonp||[]).push([[425],{614:function(e,s,t){"use strict";t.r(s);var a=t(0),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Returns the TF session to be used by the backend.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.compat.v1.keras.backend.get_session(op_input_list=())\n")])])]),t("p",[e._v("If a default TensorFlow session is available, we will return it.")]),e._v(" "),t("p",[e._v("Else, we will return the global Keras session assuming it matches the current graph.")]),e._v(" "),t("p",[e._v("If no global Keras session exists at this point: we will create a new global session.")]),e._v(" "),t("p",[e._v("Note that you can manually set the global session via K.set_session(sess).")]),e._v(" "),t("h4",{attrs:{id:"arguments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("op_input_list")]),e._v(": An option sequence of tensors or ops, which will be used to determine the current graph. Otherwise the default graph will be used.")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A TensorFlow session.")])])}),[],!1,null,null,null);s.default=n.exports}}]);