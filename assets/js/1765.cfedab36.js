(window.webpackJsonp=window.webpackJsonp||[]).push([[1765],{1956:function(e,t,a){"use strict";a.r(t);var r=a(0),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"class-inputlayer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-inputlayer","aria-hidden":"true"}},[e._v("#")]),e._v(" Class InputLayer")]),e._v(" "),a("p",[e._v("Layer to be used as an entry point into a Network (a graph of layers).\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/keras/layers/Layer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Layer"),a("OutboundLink")],1),e._v("Inherits From:")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[e._v("Class "),a("code",[e._v("tf.compat.v1.keras.layers.InputLayer")])]),e._v(" "),a("li",[e._v("Class "),a("code",[e._v("tf.compat.v2.keras.layers.InputLayer")])])]),e._v(" "),a("h3",{attrs:{id:"used-in-the-tutorials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("C")]),e._v("o"),a("code",[e._v("n")]),e._v("v"),a("code",[e._v("o")]),e._v("l"),a("code",[e._v("u")]),e._v("t"),a("code",[e._v("i")]),e._v("o"),a("code",[e._v("n")]),e._v("a"),a("code",[e._v("l")]),e._v(" "),a("code",[e._v("V")]),e._v("a"),a("code",[e._v("r")]),e._v("i"),a("code",[e._v("a")]),e._v("t"),a("code",[e._v("i")]),e._v("o"),a("code",[e._v("n")]),e._v("a"),a("code",[e._v("l")]),e._v(" "),a("code",[e._v("A")]),e._v("u"),a("code",[e._v("t")]),e._v("o"),a("code",[e._v("e")]),e._v("n"),a("code",[e._v("c")]),e._v("o"),a("code",[e._v("d")]),e._v("e"),a("code",[e._v("r")])])]),e._v(" "),a("p",[e._v("It can either wrap an existing tensor (pass an input_tensor argument) or create a placeholder tensor (pass arguments input_shape, and optionally, dtype).")]),e._v(" "),a("p",[e._v("It is generally recommend to use the functional layer API via Input, (which creates an InputLayer) without directly using InputLayer.")]),e._v(" "),a("p",[e._v("This class can create placeholders for tf.Tensors, tf.SparseTensors, and tf.RaggedTensors by choosing 'sparse=True' or 'ragged=True'.")]),e._v(" "),a("h4",{attrs:{id:"arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("input_shape")]),e._v(": Shape tuple (not including the batch axis), or "),a("code",[e._v("TensorShape")]),e._v(" instance (not including the batch axis).")]),e._v(" "),a("li",[a("code",[e._v("batch_size")]),e._v(": Optional input batch size (integer or None).")]),e._v(" "),a("li",[a("code",[e._v("dtype")]),e._v(": Datatype of the input.")]),e._v(" "),a("li",[a("code",[e._v("input_tensor")]),e._v(": Optional tensor to use as layer input instead of creating a placeholder.")]),e._v(" "),a("li",[a("code",[e._v("sparse")]),e._v(": Boolean, whether the placeholder created is meant to be "),a("code",[e._v("sparse")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("ragged")]),e._v(": Boolean, whether the placeholder created is meant to be "),a("code",[e._v("ragged")]),e._v(". In this case, values of 'None' in the 'shape' argument represent "),a("code",[e._v("ragged")]),e._v(" dimensions. For more information about RaggedTensors, see https://www.tensorflow.org/guide/"),a("code",[e._v("ragged")]),e._v("_tensors.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Name of the layer (string).")])]),e._v(" "),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("init")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/engine/input_layer.py#L61-L148",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __init__(\n    input_shape=None,\n    batch_size=None,\n    dtype=None,\n    input_tensor=None,\n    sparse=False,\n    name=None,\n    ragged=False,\n    **kwargs\n)\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);