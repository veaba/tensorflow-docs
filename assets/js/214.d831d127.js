(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{402:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"class-distribution"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-distribution","aria-hidden":"true"}},[e._v("#")]),e._v(" Class Distribution")]),e._v(" "),t("p",[e._v("A generic probability distribution base class.")]),e._v(" "),t("p",[e._v("Distribution is a base class for constructing and organizing properties (e.g., mean, variance) of random variables (e.g, Bernoulli, Gaussian).")]),e._v(" "),t("h4",{attrs:{id:"subclassing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#subclassing","aria-hidden":"true"}},[e._v("#")]),e._v(" Subclassing")]),e._v(" "),t("p",[e._v('Subclasses are expected to implement a leading-underscore version of the same-named function. The argument signature should be identical except for the omission of name="...". For example, to enable log_prob(value, name="log_prob") a subclass should implement _log_prob(value).')]),e._v(" "),t("p",[e._v("Subclasses can append to public-level docstrings by providing docstrings for their method specializations. For example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' @util.AppendDocstring("Some other details.")\ndef _log_prob(self, value):\n  ...\n')])])]),t("p",[e._v('would add the string "Some other details." to the log_prob function docstring. This is implemented as a simple decorator to avoid python linter complaining about missing Args/Returns/Raises sections in the partial docstrings.')]),e._v(" "),t("h4",{attrs:{id:"broadcasting-batching-and-shapes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#broadcasting-batching-and-shapes","aria-hidden":"true"}},[e._v("#")]),e._v(" Broadcasting, batching, and shapes")]),e._v(" "),t("p",[e._v("All distributions support batches of independent distributions of that type. The batch shape is determined by broadcasting together the parameters.")]),e._v(" "),t("p",[e._v("The shape of arguments to "),t("strong",[e._v("init")]),e._v(", cdf, log_cdf, prob, and log_prob reflect this broadcasting, as does the return value of sample and sample_n.")]),e._v(" "),t("p",[e._v("sample_n_shape = [n] + batch_shape + event_shape, where sample_n_shape is the shape of the Tensor returned from sample_n, n is the number of samples, batch_shape defines how many independent distributions there are, and event_shape defines the shape of samples from each of those independent distributions. Samples are independent along the batch_shape dimensions, but not necessarily so along the event_shape dimensions (depending on the particulars of the underlying distribution).")]),e._v(" "),t("p",[e._v("Using the Uniform distribution as an example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" minval = 3.0\nmaxval = [[4.0, 6.0],\n          [10.0, 12.0]]\n\n# Broadcasting:\n# This instance represents 4 Uniform distributions. Each has a lower bound at\n# 3.0 as the `minval` parameter was broadcasted to match `maxval`'s shape.\nu = Uniform(minval, maxval)\n\n# `event_shape` is `TensorShape([])`.\nevent_shape = u.event_shape\n# `event_shape_t` is a `Tensor` which will evaluate to [].\nevent_shape_t = u.event_shape_tensor()\n\n# Sampling returns a sample per distribution. `samples` has shape\n# [5, 2, 2], which is [n] + batch_shape + event_shape, where n=5,\n# batch_shape=[2, 2], and event_shape=[].\nsamples = u.sample_n(5)\n\n# The broadcasting holds across methods. Here we use `cdf` as an example. The\n# same holds for `log_cdf` and the likelihood functions.\n\n# `cum_prob` has shape [2, 2] as the `value` argument was broadcasted to the\n# shape of the `Uniform` instance.\ncum_prob_broadcast = u.cdf(4.0)\n\n# `cum_prob`'s shape is [2, 2], one per distribution. No broadcasting\n# occurred.\ncum_prob_per_dist = u.cdf([[4.0, 5.0],\n                           [6.0, 7.0]])\n\n# INVALID as the `value` argument is not broadcastable to the distribution's\n# shape.\ncum_prob_invalid = u.cdf([4.0, 5.0, 6.0])\n")])])]),t("h4",{attrs:{id:"shapes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shapes","aria-hidden":"true"}},[e._v("#")]),e._v(" Shapes")]),e._v(" "),t("p",[e._v('There are three important concepts associated with TensorFlow Distributions shapes: - Event shape describes the shape of a single draw from the distribution; it may be dependent across dimensions. For scalar distributions, the event shape is []. For a 5-dimensional MultivariateNormal, the event shape is [5]. - Batch shape describes independent, not identically distributed draws, aka a "collection" or "bunch" of distributions. - Sample shape describes independent, identically distributed draws of batches from the distribution family.')]),e._v(" "),t("p",[e._v("The event shape and the batch shape are properties of a Distribution object, whereas the sample shape is associated with a specific call to sample or log_prob.\n"),t("a",{attrs:{href:"https://github.com/tensorflow/probability/blob/master/tensorflow_probability/examples/jupyter_notebooks/Understanding_TensorFlow_Distributions_Shapes.ipynb",target:"_blank",rel:"noopener noreferrer"}},[e._v("this tutorial"),t("OutboundLink")],1),e._v("For detailed usage examples of TensorFlow Distributions shapes, see")]),e._v(" "),t("h4",{attrs:{id:"parameter-values-leading-to-undefined-statistics-or-distributions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parameter-values-leading-to-undefined-statistics-or-distributions","aria-hidden":"true"}},[e._v("#")]),e._v(" Parameter values leading to undefined statistics or distributions.")]),e._v(" "),t("p",[e._v("Some distributions do not have well-defined statistics for all initialization parameter values. For example, the beta distribution is parameterized by positive real numbers concentration1 and concentration0, and does not have well-defined mode if concentration1 < 1 or concentration0 < 1.")]),e._v(" "),t("p",[e._v("The user is given the option of raising an exception or returning NaN.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" a = tf.exp(tf.matmul(logits, weights_a))\nb = tf.exp(tf.matmul(logits, weights_b))\n\n# Will raise exception if ANY batch member has a < 1 or b < 1.\ndist = distributions.beta(a, b, allow_nan_stats=False)\nmode = dist.mode().eval()\n\n# Will return NaN for batch members with either a < 1 or b < 1.\ndist = distributions.beta(a, b, allow_nan_stats=True)  # Default behavior\nmode = dist.mode().eval()\n")])])]),t("p",[e._v("In all cases, an exception is raised if invalid parameters are passed, e.g.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" # Will raise an exception if any Op is run.\nnegative_a = -1.0 * a  # beta distribution by definition has a > 0.\ndist = distributions.beta(negative_a, b, allow_nan_stats=True)\ndist.mean().eval()\n")])])]),t("h2",{attrs:{id:"init"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("init")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L417-L477",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __init__(\n    dtype,\n    reparameterization_type,\n    validate_args,\n    allow_nan_stats,\n    parameters=None,\n    graph_parents=None,\n    name=None\n)\n")])])]),t("p",[e._v("Constructs the Distribution. (deprecated)")]),e._v(" "),t("p",[e._v("This is a private method for subclass use.")]),e._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("dtype")]),e._v(": The type of the event samples. "),t("code",[e._v("None")]),e._v(" implies no type-enforcement.")]),e._v(" "),t("li",[t("code",[e._v("reparameterization_type")]),e._v(": Instance of "),t("code",[e._v("ReparameterizationType")]),e._v(". If "),t("code",[e._v("distributions.FULLY_REPARAMETERIZED")]),e._v(", this "),t("code",[e._v("Distribution")]),e._v(" can be reparameterized in terms of some standard distribution with a function whose Jacobian is constant for the support of the standard distribution. If "),t("code",[e._v("distributions.NOT_REPARAMETERIZED")]),e._v(", then no such reparameterization is available.")]),e._v(" "),t("li",[t("code",[e._v("validate_args")]),e._v(": Python "),t("code",[e._v("bool")]),e._v(", default "),t("code",[e._v("False")]),e._v(". When "),t("code",[e._v("True")]),e._v(" distribution parameters are checked for validity despite possibly degrading runtime performance. When "),t("code",[e._v("False")]),e._v(" invalid inputs may silently render incorrect outputs.")]),e._v(" "),t("li",[t("code",[e._v("allow_nan_stats")]),e._v(": Python "),t("code",[e._v("bool")]),e._v(", default "),t("code",[e._v("True")]),e._v(". When "),t("code",[e._v("True")]),e._v(', statistics (e.g., mean, mode, variance) use the value "'),t("code",[e._v("NaN")]),e._v('" to indicate the result is undefined. When '),t("code",[e._v("False")]),e._v(", an exception is raised if one or more of the statistic's batch members are undefined.")]),e._v(" "),t("li",[t("code",[e._v("parameters")]),e._v(": Python "),t("code",[e._v("dict")]),e._v(" of "),t("code",[e._v("parameters")]),e._v(" used to instantiate this "),t("code",[e._v("Distribution")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("graph_parents")]),e._v(": Python "),t("code",[e._v("list")]),e._v(" of graph prerequisites of this "),t("code",[e._v("Distribution")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" "),t("code",[e._v("name")]),e._v(" prefixed to Ops created by this class. Default: subclass "),t("code",[e._v("name")]),e._v(".")])]),e._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ValueError")]),e._v(": if any member of graph_parents is "),t("code",[e._v("None")]),e._v(" or not a "),t("code",[e._v("Tensor")]),e._v(".")])]),e._v(" "),t("h2",{attrs:{id:"properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),t("h3",{attrs:{id:"allow-nan-stats"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#allow-nan-stats","aria-hidden":"true"}},[e._v("#")]),e._v(" allow_nan_stats")]),e._v(" "),t("p",[e._v("Python bool describing behavior when a stat is undefined.")]),e._v(" "),t("p",[e._v("Stats return +/- infinity when it makes sense. E.g., the variance of a Cauchy distribution is infinity. However, sometimes the statistic is undefined, e.g., if a distribution's pdf does not achieve a maximum within the support of the distribution, the mode is undefined. If the mean is undefined, then by definition the variance is undefined. E.g. the mean for Student's T for df = 1 is undefined (no clear way to say it is either + or - infinity), so the variance = E[(X - mean)**2] is also undefined.")]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("allow_nan_stats")]),e._v(": Python "),t("code",[e._v("bool")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"batch-shape"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#batch-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" batch_shape")]),e._v(" "),t("p",[e._v("Shape of a single sample from a single event index as a TensorShape.")]),e._v(" "),t("p",[e._v("May be partially defined or unknown.")]),e._v(" "),t("p",[e._v("The batch dimensions are indexes into independent, non-identical parameterizations of this distribution.")]),e._v(" "),t("h4",{attrs:{id:"returns-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("batch_shape")]),e._v(": "),t("code",[e._v("TensorShape")]),e._v(", possibly unknown.")])]),e._v(" "),t("h3",{attrs:{id:"dtype"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dtype","aria-hidden":"true"}},[e._v("#")]),e._v(" dtype")]),e._v(" "),t("p",[e._v("The DType of Tensors handled by this Distribution.")]),e._v(" "),t("h3",{attrs:{id:"event-shape"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#event-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" event_shape")]),e._v(" "),t("p",[e._v("Shape of a single sample from a single batch as a TensorShape.")]),e._v(" "),t("p",[e._v("May be partially defined or unknown.")]),e._v(" "),t("h4",{attrs:{id:"returns-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("event_shape")]),e._v(": "),t("code",[e._v("TensorShape")]),e._v(", possibly unknown.")])]),e._v(" "),t("h3",{attrs:{id:"name"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#name","aria-hidden":"true"}},[e._v("#")]),e._v(" name")]),e._v(" "),t("p",[e._v("Name prepended to all ops created by this Distribution.")]),e._v(" "),t("h3",{attrs:{id:"parameters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parameters","aria-hidden":"true"}},[e._v("#")]),e._v(" parameters")]),e._v(" "),t("p",[e._v("Dictionary of parameters used to instantiate this Distribution.")]),e._v(" "),t("h3",{attrs:{id:"reparameterization-type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reparameterization-type","aria-hidden":"true"}},[e._v("#")]),e._v(" reparameterization_type")]),e._v(" "),t("p",[e._v("Describes how samples from the distribution are reparameterized.")]),e._v(" "),t("p",[e._v("Currently this is one of the static instances distributions.FULLY_REPARAMETERIZED or distributions.NOT_REPARAMETERIZED.")]),e._v(" "),t("h4",{attrs:{id:"returns-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("An instance of ReparameterizationType.")]),e._v(" "),t("h3",{attrs:{id:"validate-args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#validate-args","aria-hidden":"true"}},[e._v("#")]),e._v(" validate_args")]),e._v(" "),t("p",[e._v("Python bool indicating possibly expensive checks are enabled.")]),e._v(" "),t("h2",{attrs:{id:"methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),t("h3",{attrs:{id:"batch-shape-tensor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#batch-shape-tensor","aria-hidden":"true"}},[e._v("#")]),e._v(" batch_shape_tensor")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L637-L654",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" batch_shape_tensor(name='batch_shape_tensor')\n")])])]),t("p",[e._v("Shape of a single sample from a single event index as a 1-D Tensor.")]),e._v(" "),t("p",[e._v("The batch dimensions are indexes into independent, non-identical parameterizations of this distribution.")]),e._v(" "),t("h4",{attrs:{id:"args-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("name")]),e._v(": "),t("code",[e._v("name")]),e._v(" to give to the op")])]),e._v(" "),t("h4",{attrs:{id:"returns-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("batch_shape")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"cdf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cdf","aria-hidden":"true"}},[e._v("#")]),e._v(" cdf")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L881-L898",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" cdf(\n    value,\n    name='cdf'\n)\n")])])]),t("p",[e._v("Cumulative distribution function.")]),e._v(" "),t("p",[e._v("Given random variable X, the cumulative distribution function cdf is:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" cdf(x) := P[X <= x]\n")])])]),t("h4",{attrs:{id:"args-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(": "),t("code",[e._v("float")]),e._v(" or "),t("code",[e._v("double")]),e._v(" "),t("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("cdf")]),e._v(": a "),t("code",[e._v("Tensor")]),e._v(" of shape sample_shape(x) + self.batch_shape with values of type "),t("code",[e._v("self.dtype")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"copy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#copy","aria-hidden":"true"}},[e._v("#")]),e._v(" copy")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L615-L631",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" copy(**override_parameters_kwargs)\n")])])]),t("p",[e._v("Creates a deep copy of the distribution.")]),e._v(" "),t("h4",{attrs:{id:"args-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("h4",{attrs:{id:"returns-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("h3",{attrs:{id:"covariance"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#covariance","aria-hidden":"true"}},[e._v("#")]),e._v(" covariance")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1094-L1131",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" covariance(name='covariance')\n")])])]),t("p",[e._v("Covariance.")]),e._v(" "),t("p",[e._v("Covariance is (possibly) defined only for non-scalar-event distributions.")]),e._v(" "),t("p",[e._v("For example, for a length-k, vector-valued distribution, it is calculated as,")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" Cov[i, j] = Covariance(X_i, X_j) = E[(X_i - E[X_i]) (X_j - E[X_j])]\n")])])]),t("p",[e._v("where Cov is a (batch of) k x k matrix, 0 <= (i, j) < k, and E denotes expectation.")]),e._v(" "),t("p",[e._v("Alternatively, for non-vector, multivariate distributions (e.g., matrix-valued, Wishart), Covariance shall return a (batch of) matrices under some vectorization of the events, i.e.,")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" Cov[i, j] = Covariance(Vec(X)_i, Vec(X)_j) = [as above]\n")])])]),t("p",[e._v("where Cov is a (batch of) k' x k' matrices, 0 <= (i, j) < k' = reduce_prod(event_shape), and Vec is some function mapping indices of this distribution's event dimensions to indices of a length-k' vector.")]),e._v(" "),t("h4",{attrs:{id:"args-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("covariance")]),e._v(":"),t("code"),e._v("Floati"),t("code",[e._v("n")]),e._v("g-poi"),t("code",[e._v("n")]),e._v("t"),t("code",[e._v("``Tensor``")]),e._v("with"),t("code"),e._v("shape"),t("code"),e._v("["),t("code",[e._v("B``1``,`` ``.``.``.``,`` ``B``n``,`` ``k``'``,`` ``k``'")]),e._v("]"),t("code"),e._v("where"),t("code"),e._v("the"),t("code"),e._v("first"),t("code",[e._v("``n``")]),e._v("dime"),t("code",[e._v("n")]),e._v("sio"),t("code",[e._v("n")]),e._v("s"),t("code"),e._v("are"),t("code"),e._v("batch"),t("code"),e._v("coordi"),t("code",[e._v("n")]),e._v("ates"),t("code"),e._v("a"),t("code",[e._v("n")]),e._v("d"),t("code",[e._v("``k``'``")]),e._v("="),t("code"),e._v("reduce_prod(self"),t("code",[e._v(".")]),e._v("eve"),t("code",[e._v("n")]),e._v("t_shape)"),t("code",[e._v(".")])])]),e._v(" "),t("h3",{attrs:{id:"cross-entropy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cross-entropy","aria-hidden":"true"}},[e._v("#")]),e._v(" cross_entropy")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1146-L1169",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" cross_entropy(\n    other,\n    name='cross_entropy'\n)\n")])])]),t("p",[e._v("Computes the (Shannon) cross entropy.")]),e._v(" "),t("p",[e._v("Denote this distribution (self) by P and the other distribution by Q. Assuming P, Q are absolutely continuous with respect to one another and permit densities p(x) dr(x) and q(x) dr(x), (Shanon) cross entropy is defined as:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" H[P, Q] = E_p[-log q(X)] = -int_F p(x) log q(x) dr(x)\n")])])]),t("p",[e._v("where F denotes the support of the random variable X ~ P.")]),e._v(" "),t("h4",{attrs:{id:"args-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("other")]),e._v(": "),t("code",[e._v("tfp.distributions.Distribution")]),e._v(" instance.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("cross_entropy")]),e._v(":"),t("code",[e._v("``self.dtype`` ``Tensor``")]),e._v("with"),t("code"),e._v("shape"),t("code"),e._v("["),t("code",[e._v("B``1``,`` ``.``.``.``,`` ``B``n")]),e._v("]"),t("code"),e._v("represe"),t("code",[e._v("n")]),e._v("ti"),t("code",[e._v("n")]),e._v("g"),t("code",[e._v("``n``")]),e._v("differe"),t("code",[e._v("n")]),e._v("t"),t("code"),e._v("calculatio"),t("code",[e._v("n")]),e._v("s"),t("code"),e._v("of"),t("code"),e._v("(Sha"),t("code",[e._v("n")]),e._v("o"),t("code",[e._v("n")]),e._v(")"),t("code"),e._v("cross"),t("code"),e._v("e"),t("code",[e._v("n")]),e._v("tropy"),t("code",[e._v(".")])])]),e._v(" "),t("h3",{attrs:{id:"entropy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#entropy","aria-hidden":"true"}},[e._v("#")]),e._v(" entropy")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L982-L985",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" entropy(name='entropy')\n")])])]),t("p",[e._v("Shannon entropy in nats.")]),e._v(" "),t("h3",{attrs:{id:"event-shape-tensor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#event-shape-tensor","aria-hidden":"true"}},[e._v("#")]),e._v(" event_shape_tensor")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L677-L691",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" event_shape_tensor(name='event_shape_tensor')\n")])])]),t("p",[e._v("Shape of a single sample from a single batch as a 1-D int32 Tensor.")]),e._v(" "),t("h4",{attrs:{id:"args-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("name")]),e._v(": "),t("code",[e._v("name")]),e._v(" to give to the op")])]),e._v(" "),t("h4",{attrs:{id:"returns-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("event_shape")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"is-scalar-batch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#is-scalar-batch","aria-hidden":"true"}},[e._v("#")]),e._v(" is_scalar_batch")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L721-L733",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" is_scalar_batch(name='is_scalar_batch')\n")])])]),t("p",[e._v("Indicates that batch_shape == [].")]),e._v(" "),t("h4",{attrs:{id:"args-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("is_scalar_batch")]),e._v(": "),t("code",[e._v("bool")]),e._v(" scalar "),t("code",[e._v("Tensor")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"is-scalar-event"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#is-scalar-event","aria-hidden":"true"}},[e._v("#")]),e._v(" is_scalar_event")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L707-L719",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" is_scalar_event(name='is_scalar_event')\n")])])]),t("p",[e._v("Indicates that event_shape == [].")]),e._v(" "),t("h4",{attrs:{id:"args-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("is_scalar_event")]),e._v(": "),t("code",[e._v("bool")]),e._v(" scalar "),t("code",[e._v("Tensor")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"kl-divergence"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kl-divergence","aria-hidden":"true"}},[e._v("#")]),e._v(" kl_divergence")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1175-L1201",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" kl_divergence(\n    other,\n    name='kl_divergence'\n)\n")])])]),t("p",[e._v("Computes the Kullback--Leibler divergence.")]),e._v(" "),t("p",[e._v("Denote this distribution (self) by p and the other distribution by q. Assuming p, q are absolutely continuous with respect to reference measure r, the KL divergence is defined as:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" KL[p, q] = E_p[log(p(X)/q(X))]\n         = -int_F p(x) log q(x) dr(x) + int_F p(x) log p(x) dr(x)\n         = H[p, q] - H[p]\n")])])]),t("p",[e._v("where F denotes the support of the random variable X ~ p, H[., .] denotes (Shanon) cross entropy, and H[.] denotes (Shanon) entropy.")]),e._v(" "),t("h4",{attrs:{id:"args-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("other")]),e._v(": "),t("code",[e._v("tfp.distributions.Distribution")]),e._v(" instance.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-13"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("kl_divergence")]),e._v(":"),t("code",[e._v("``self.dtype`` ``Tensor``")]),e._v("with"),t("code"),e._v("shape"),t("code"),e._v("["),t("code",[e._v("B``1``,`` ``.``.``.``,`` ``B``n")]),e._v("]"),t("code"),e._v("represe"),t("code",[e._v("n")]),e._v("ti"),t("code",[e._v("n")]),e._v("g"),t("code",[e._v("``n``")]),e._v("differe"),t("code",[e._v("n")]),e._v("t"),t("code"),e._v("calculatio"),t("code",[e._v("n")]),e._v("s"),t("code"),e._v("of"),t("code"),e._v("the"),t("code"),e._v("Kullback-Leibler"),t("code"),e._v("diverge"),t("code",[e._v("n")]),e._v("ce"),t("code",[e._v(".")])])]),e._v(" "),t("h3",{attrs:{id:"log-cdf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-cdf","aria-hidden":"true"}},[e._v("#")]),e._v(" log_cdf")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L842-L863",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" log_cdf(\n    value,\n    name='log_cdf'\n)\n")])])]),t("p",[e._v("Log cumulative distribution function.")]),e._v(" "),t("p",[e._v("Given random variable X, the cumulative distribution function cdf is:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" log_cdf(x) := Log[ P[X <= x] ]\n")])])]),t("p",[e._v("Often, a numerical approximation can be used for log_cdf(x) that yields a more accurate answer than simply taking the logarithm of the cdf when x << -1.")]),e._v(" "),t("h4",{attrs:{id:"args-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(": "),t("code",[e._v("float")]),e._v(" or "),t("code",[e._v("double")]),e._v(" "),t("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-14"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("logcdf")]),e._v(": a "),t("code",[e._v("Tensor")]),e._v(" of shape sample_shape(x) + self.batch_shape with values of type "),t("code",[e._v("self.dtype")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"log-prob"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-prob","aria-hidden":"true"}},[e._v("#")]),e._v(" log_prob")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L784-L795",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" log_prob(\n    value,\n    name='log_prob'\n)\n")])])]),t("p",[e._v("Log probability density/mass function.")]),e._v(" "),t("h4",{attrs:{id:"args-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(": "),t("code",[e._v("float")]),e._v(" or "),t("code",[e._v("double")]),e._v(" "),t("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-15"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("log_prob")]),e._v(": a "),t("code",[e._v("Tensor")]),e._v(" of shape sample_shape(x) + self.batch_shape with values of type "),t("code",[e._v("self.dtype")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"log-survival-function"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-survival-function","aria-hidden":"true"}},[e._v("#")]),e._v(" log_survival_function")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L917-L939",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" log_survival_function(\n    value,\n    name='log_survival_function'\n)\n")])])]),t("p",[e._v("Log survival function.")]),e._v(" "),t("p",[e._v("Given random variable X, the survival function is defined:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" log_survival_function(x) = Log[ P[X > x] ]\n                         = Log[ 1 - P[X <= x] ]\n                         = Log[ 1 - cdf(x) ]\n")])])]),t("p",[e._v("Typically, different numerical approximations can be used for the log survival function, which are more accurate than 1 - cdf(x) when x >> 1.")]),e._v(" "),t("h4",{attrs:{id:"args-13"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(": "),t("code",[e._v("float")]),e._v(" or "),t("code",[e._v("double")]),e._v(" "),t("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("Tensor of shape sample_shape(x) + self.batch_shape with values of type self.dtype.")]),e._v(" "),t("h3",{attrs:{id:"mean"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mean","aria-hidden":"true"}},[e._v("#")]),e._v(" mean")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L991-L994",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" mean(name='mean')\n")])])]),t("p",[e._v("Mean.")]),e._v(" "),t("h3",{attrs:{id:"mode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mode","aria-hidden":"true"}},[e._v("#")]),e._v(" mode")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1137-L1140",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" mode(name='mode')\n")])])]),t("p",[e._v("Mode.")]),e._v(" "),t("h3",{attrs:{id:"param-shapes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#param-shapes","aria-hidden":"true"}},[e._v("#")]),e._v(" param_shapes")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L497-L516",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" @classmethod\nparam_shapes(\n    cls,\n    sample_shape,\n    name='DistributionParamShapes'\n)\n")])])]),t("p",[e._v("Shapes of parameters given the desired shape of a call to sample().")]),e._v(" "),t("p",[e._v("This is a class method that describes what key/value arguments are required to instantiate the given Distribution so that a particular shape is returned for that instance's call to sample().")]),e._v(" "),t("p",[e._v("Subclasses should override class method _param_shapes.")]),e._v(" "),t("h4",{attrs:{id:"args-14"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sample_shape")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(" or python list/tuple. Desired shape of a call to "),t("code",[e._v("sample")]),e._v("().")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": "),t("code",[e._v("name")]),e._v(" to prepend ops with.")])]),e._v(" "),t("h4",{attrs:{id:"returns-17"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-17","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("dict of parameter name to Tensor shapes.")]),e._v(" "),t("h3",{attrs:{id:"param-static-shapes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#param-static-shapes","aria-hidden":"true"}},[e._v("#")]),e._v(" param_static_shapes")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L518-L555",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" @classmethod\nparam_static_shapes(\n    cls,\n    sample_shape\n)\n")])])]),t("p",[e._v("param_shapes with static (i.e. TensorShape) shapes.")]),e._v(" "),t("p",[e._v("This is a class method that describes what key/value arguments are required to instantiate the given Distribution so that a particular shape is returned for that instance's call to sample(). Assumes that the sample's shape is known statically.")]),e._v(" "),t("p",[e._v("Subclasses should override class method _param_shapes to return constant-valued tensors when constant values are fed.")]),e._v(" "),t("h4",{attrs:{id:"args-15"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sample_shape")]),e._v(": "),t("code",[e._v("TensorShape")]),e._v(" or python list/tuple. Desired shape of a call to "),t("code",[e._v("sample")]),e._v("().")])]),e._v(" "),t("h4",{attrs:{id:"returns-18"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-18","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("dict of parameter name to TensorShape.")]),e._v(" "),t("h4",{attrs:{id:"raises-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ValueError")]),e._v(": if "),t("code",[e._v("sample_shape")]),e._v(" is a "),t("code",[e._v("TensorShape")]),e._v(" and is not fully defined.")])]),e._v(" "),t("h3",{attrs:{id:"prob"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prob","aria-hidden":"true"}},[e._v("#")]),e._v(" prob")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L813-L824",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" prob(\n    value,\n    name='prob'\n)\n")])])]),t("p",[e._v("Probability density/mass function.")]),e._v(" "),t("h4",{attrs:{id:"args-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(": "),t("code",[e._v("float")]),e._v(" or "),t("code",[e._v("double")]),e._v(" "),t("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-19"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-19","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("prob")]),e._v(": a "),t("code",[e._v("Tensor")]),e._v(" of shape sample_shape(x) + self.batch_shape with values of type "),t("code",[e._v("self.dtype")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"quantile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#quantile","aria-hidden":"true"}},[e._v("#")]),e._v(" quantile")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1006-L1023",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" quantile(\n    value,\n    name='quantile'\n)\n")])])]),t("p",[e._v('Quantile function. Aka "inverse cdf" or "percent point function".')]),e._v(" "),t("p",[e._v("Given random variable X and p in [0, 1], the quantile is:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" quantile(p) := x such that P[X <= x] == p\n")])])]),t("h4",{attrs:{id:"args-17"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-17","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(": "),t("code",[e._v("float")]),e._v(" or "),t("code",[e._v("double")]),e._v(" "),t("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-20"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-20","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("quantile")]),e._v(": a "),t("code",[e._v("Tensor")]),e._v(" of shape sample_shape(x) + self.batch_shape with values of type "),t("code",[e._v("self.dtype")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"sample"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sample","aria-hidden":"true"}},[e._v("#")]),e._v(" sample")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L752-L766",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" sample(\n    sample_shape=(),\n    seed=None,\n    name='sample'\n)\n")])])]),t("p",[e._v("Generate samples of the specified shape.")]),e._v(" "),t("p",[e._v("Note that a call to sample() without arguments will generate a single sample.")]),e._v(" "),t("h4",{attrs:{id:"args-18"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-18","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sample_shape")]),e._v(": 0D or 1D "),t("code",[e._v("int32")]),e._v(" "),t("code",[e._v("Tensor")]),e._v(". Shape of the generated samples.")]),e._v(" "),t("li",[t("code",[e._v("seed")]),e._v(": Python integer "),t("code",[e._v("seed")]),e._v(" for RNG")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": "),t("code",[e._v("name")]),e._v(" to give to the op.")])]),e._v(" "),t("h4",{attrs:{id:"returns-21"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-21","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("samples")]),e._v(": a "),t("code",[e._v("Tensor")]),e._v(" with prepended dimensions "),t("code",[e._v("sample_shape")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"stddev"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stddev","aria-hidden":"true"}},[e._v("#")]),e._v(" stddev")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1061-L1088",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" stddev(name='stddev')\n")])])]),t("p",[e._v("Standard deviation.")]),e._v(" "),t("p",[e._v("Standard deviation is defined as,")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" stddev = E[(X - E[X])**2]**0.5\n")])])]),t("p",[e._v("where X is the random variable associated with this distribution, E denotes expectation, and stddev.shape = batch_shape + event_shape.")]),e._v(" "),t("h4",{attrs:{id:"args-19"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-19","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-22"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-22","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("stddev")]),e._v(": Floating-point "),t("code",[e._v("Tensor")]),e._v(" with shape identical to batch_shape + event_shape, i.e., the same shape as "),t("code",[e._v("self.mean")]),e._v("().")])]),e._v(" "),t("h3",{attrs:{id:"survival-function"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#survival-function","aria-hidden":"true"}},[e._v("#")]),e._v(" survival_function")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L957-L976",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" survival_function(\n    value,\n    name='survival_function'\n)\n")])])]),t("p",[e._v("Survival function.")]),e._v(" "),t("p",[e._v("Given random variable X, the survival function is defined:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" survival_function(x) = P[X > x]\n                     = 1 - P[X <= x]\n                     = 1 - cdf(x).\n")])])]),t("h4",{attrs:{id:"args-20"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-20","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(": "),t("code",[e._v("float")]),e._v(" or "),t("code",[e._v("double")]),e._v(" "),t("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-23"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-23","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("Tensor of shape sample_shape(x) + self.batch_shape with values of type self.dtype.")]),e._v(" "),t("h3",{attrs:{id:"variance"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#variance","aria-hidden":"true"}},[e._v("#")]),e._v(" variance")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1029-L1055",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" variance(name='variance')\n")])])]),t("p",[e._v("Variance.")]),e._v(" "),t("p",[e._v("Variance is defined as,")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" Var = E[(X - E[X])**2]\n")])])]),t("p",[e._v("where X is the random variable associated with this distribution, E denotes expectation, and Var.shape = batch_shape + event_shape.")]),e._v(" "),t("h4",{attrs:{id:"args-21"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-21","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("name")]),e._v(": Python "),t("code",[e._v("str")]),e._v(" prepended to "),t("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),t("h4",{attrs:{id:"returns-24"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-24","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("variance")]),e._v(": Floating-point "),t("code",[e._v("Tensor")]),e._v(" with shape identical to batch_shape + event_shape, i.e., the same shape as "),t("code",[e._v("self.mean")]),e._v("().")])])])}),[],!1,null,null,null);a.default=r.exports}}]);