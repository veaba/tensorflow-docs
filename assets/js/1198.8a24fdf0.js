(window.webpackJsonp=window.webpackJsonp||[]).push([[1198],{1387:function(t,e,r){"use strict";r.r(e);var n=r(0),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/distribute/ReplicaContext",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.distribute.ReplicaContext"),r("OutboundLink")],1),t._v("Returns the current  or None.")]),t._v(" "),r("h3",{attrs:{id:"aliases"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("tf.compat.v1.distribute.get_replica_context")])]),t._v(" "),r("li",[r("code",[t._v("tf.compat.v2.distribute.get_replica_context")])])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(" tf.distribute.get_replica_context()\n")])])]),r("p",[t._v("Returns None if in a cross-replica context.")]),t._v(" "),r("h4",{attrs:{id:"note-that-execution"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#note-that-execution","aria-hidden":"true"}},[t._v("#")]),t._v(" Note that execution:")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/distribute/Strategy",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.distribute.Strategy"),r("OutboundLink")],1),t._v("Most  methods may only be executed in a cross-replica context, in a replica context you should use the API of the tf.distribute.ReplicaContext object returned by this method instead.")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(' assert tf.distribute.get_replica_context() is not None  # default\nwith strategy.scope():\n  assert tf.distribute.get_replica_context() is None\n\n  def f():\n    replica_context = tf.distribute.get_replica_context()  # for strategy\n    assert replica_context is not None\n    tf.print("Replica id: ", replica_context.replica_id_in_sync_group,\n             " of ", replica_context.num_replicas_in_sync)\n\n  strategy.experimental_run_v2(f)\n')])])]),r("h4",{attrs:{id:"returns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/distribute/ReplicaContext",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.distribute.ReplicaContext"),r("OutboundLink")],1),t._v("The current  object when in a replica context scope, else None.")]),t._v(" "),r("p",[t._v("Within a particular block, exactly one of these two things will be true:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("get_replica_context")]),t._v("() returns non-"),r("code",[t._v("None")]),t._v(", or")]),t._v(" "),r("li",[r("code",[t._v("tf.distribute.is_cross_replica_context")]),t._v("() returns True.")])])])}),[],!1,null,null,null);e.default=a.exports}}]);