(window.webpackJsonp=window.webpackJsonp||[]).push([[2431],{2619:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"class-deviceassignment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-deviceassignment","aria-hidden":"true"}},[e._v("#")]),e._v(" Class DeviceAssignment")]),e._v(" "),a("p",[e._v("Mapping from logical cores in a computation to the physical TPU topology.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[e._v("Class "),a("code",[e._v("tf.compat.v1.tpu.experimental.DeviceAssignment")])]),e._v(" "),a("li",[e._v("Class "),a("code",[e._v("tf.compat.v2.tpu.experimental.DeviceAssignment")]),e._v(" "),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/tpu/experimental/DeviceAssignment#build",target:"_blank",rel:"noopener noreferrer"}},[e._v("DeviceAssignment.build()"),a("OutboundLink")],1),e._v("Prefer to use the  helper to construct a DeviceAssignment; it is easier if less flexible than constructing a DeviceAssignment directly.")])]),e._v(" "),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("init")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/tpu/device_assignment.py#L67-L102",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __init__(\n    topology,\n    core_assignment\n)\n")])])]),a("p",[e._v("Constructs a DeviceAssignment object.")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("topology")]),e._v(": A "),a("code",[e._v("Topology")]),e._v(" object that describes the physical TPU "),a("code",[e._v("topology")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("core_assignment")]),e._v(": A logical to physical core mapping, represented as a rank 3 numpy array. See the description of the "),a("code",[e._v("core_assignment")]),e._v(" property for more details.")])]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If "),a("code",[e._v("topology")]),e._v(" is not "),a("code",[e._v("Topology")]),e._v(" object.")]),e._v(" "),a("li",[a("code",[e._v("ValueError")]),e._v(": If "),a("code",[e._v("core_assignment")]),e._v(" is not a rank 3 numpy array.")])]),e._v(" "),a("h2",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),a("h3",{attrs:{id:"core-assignment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#core-assignment","aria-hidden":"true"}},[e._v("#")]),e._v(" core_assignment")]),e._v(" "),a("p",[e._v("The logical to physical core mapping.")]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("An integer numpy array of rank 3, with shape [num_replicas, num_cores_per_replica, topology_rank]. Maps (replica, logical core) pairs to physical topology coordinates.")]),e._v(" "),a("h3",{attrs:{id:"num-cores-per-replica"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#num-cores-per-replica","aria-hidden":"true"}},[e._v("#")]),e._v(" num_cores_per_replica")]),e._v(" "),a("p",[e._v("The number of cores per replica.")]),e._v(" "),a("h3",{attrs:{id:"num-replicas"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#num-replicas","aria-hidden":"true"}},[e._v("#")]),e._v(" num_replicas")]),e._v(" "),a("p",[e._v("The number of replicas of the computation.")]),e._v(" "),a("h3",{attrs:{id:"topology"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#topology","aria-hidden":"true"}},[e._v("#")]),e._v(" topology")]),e._v(" "),a("p",[e._v("A Topology that describes the TPU topology.")]),e._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),a("h3",{attrs:{id:"build"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build","aria-hidden":"true"}},[e._v("#")]),e._v(" build")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/tpu/device_assignment.py#L169-L175",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" @staticmethod\nbuild(\n    topology,\n    computation_shape=None,\n    computation_stride=None,\n    num_replicas=1\n)\n")])])]),a("h3",{attrs:{id:"coordinates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#coordinates","aria-hidden":"true"}},[e._v("#")]),e._v(" coordinates")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/tpu/device_assignment.py#L130-L132",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" coordinates(\n    replica,\n    logical_core\n)\n")])])]),a("p",[e._v("Returns the physical topology coordinates of a logical core.")]),e._v(" "),a("h3",{attrs:{id:"host-device"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#host-device","aria-hidden":"true"}},[e._v("#")]),e._v(" host_device")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/tpu/device_assignment.py#L159-L162",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" host_device(\n    replica=0,\n    logical_core=0,\n    job=None\n)\n")])])]),a("p",[e._v("Returns the CPU device attached to a logical core.")]),e._v(" "),a("h3",{attrs:{id:"lookup-replicas"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lookup-replicas","aria-hidden":"true"}},[e._v("#")]),e._v(" lookup_replicas")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/tpu/device_assignment.py#L134-L152",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" lookup_replicas(\n    task_id,\n    logical_core\n)\n")])])]),a("p",[e._v("Lookup replica ids by task number and logical core.")]),e._v(" "),a("h4",{attrs:{id:"args-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("task_id")]),e._v(": TensorFlow task number.")]),e._v(" "),a("li",[a("code",[e._v("logical_core")]),e._v(": An integer, identifying a logical core.")])]),e._v(" "),a("h4",{attrs:{id:"returns-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A sorted list of the replicas that are attached to that task and logical_core.")]),e._v(" "),a("h4",{attrs:{id:"raises-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If no replica exists in the task which contains the logical core.")])]),e._v(" "),a("h3",{attrs:{id:"tpu-device"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tpu-device","aria-hidden":"true"}},[e._v("#")]),e._v(" tpu_device")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/tpu/device_assignment.py#L164-L167",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tpu_device(\n    replica=0,\n    logical_core=0,\n    job=None\n)\n")])])]),a("p",[e._v("Returns the name of the TPU device assigned to a logical core.")]),e._v(" "),a("h3",{attrs:{id:"tpu-ordinal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tpu-ordinal","aria-hidden":"true"}},[e._v("#")]),e._v(" tpu_ordinal")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/tpu/device_assignment.py#L154-L157",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tpu_ordinal(\n    replica=0,\n    logical_core=0\n)\n")])])]),a("p",[e._v("Returns the ordinal of the TPU device assigned to a logical core.")])])}),[],!1,null,null,null);t.default=s.exports}}]);