(window.webpackJsonp=window.webpackJsonp||[]).push([[396],{585:function(e,_,v){"use strict";v.r(_);var o=v(0),t=Object(o.a)({},(function(){var e=this,_=e.$createElement,v=e._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("p",[e._v("Resize images to size using the specified method.")]),e._v(" "),v("h3",{attrs:{id:"aliases"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("tf.compat.v1.image.resize_images")])])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v(" tf.compat.v1.image.resize(\n    images,\n    size,\n    method=ResizeMethodV1.BILINEAR,\n    align_corners=False,\n    preserve_aspect_ratio=False,\n    name=None\n)\n")])])]),v("p",[v("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/image/resize_image_with_pad",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.image.resize_image_with_pad"),v("OutboundLink")],1),e._v("Resized images will be distorted if their original aspect ratio is not the same as size. To avoid distortions see .")]),e._v(" "),v("p",[e._v("method can be one of:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("ResizeMethod.BILINEAR")]),e._v(": Bilinear interpolation.")]),e._v(" "),v("li",[v("code",[e._v("ResizeMethod.NEAREST_NEIGHBOR")]),e._v(": Nearest neighbor interpolation.")]),e._v(" "),v("li",[v("code",[e._v("ResizeMethod.BICUBIC")]),e._v(": Bicubic interpolation.")]),e._v(" "),v("li",[v("code",[e._v("ResizeMethod.AREA")]),e._v(": Area interpolation.")])]),e._v(" "),v("p",[e._v("The return value has the same type as images if method is ResizeMethod.NEAREST_NEIGHBOR. It will also have the same type as images if the size of images can be statically determined to be the same as size, because images is returned in this case. Otherwise, the return value has type float32.")]),e._v(" "),v("h4",{attrs:{id:"args"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("images")]),e._v(":"),v("code"),e._v("4-D"),v("code"),e._v("T"),v("code",[e._v("e``n``s")]),e._v("or"),v("code"),e._v("of"),v("code",[e._v("``s``h``a")]),e._v("p"),v("code",[e._v("e``")]),e._v("["),v("code",[e._v("b``a``t``c``h``,`` ``h``e``i``g``h``t``,`` ``w``i``d``t``h``,`` ``c``h``a``n``n``e``l``s")]),e._v("]"),v("code"),e._v("or"),v("code"),e._v("3-D"),v("code"),e._v("T"),v("code",[e._v("e``n``s")]),e._v("or"),v("code"),e._v("of"),v("code",[e._v("``s``h``a")]),e._v("p"),v("code",[e._v("e``")]),e._v("["),v("code",[e._v("h``e``i``g``h``t``,`` ``w``i``d``t``h``,`` ``c``h``a``n``n``e``l``s")]),e._v("].")]),e._v(" "),v("li",[v("code",[e._v("s``i")]),e._v("z"),v("code",[e._v("e")]),e._v(":"),v("code"),e._v("A"),v("code"),e._v("1-D"),v("code",[e._v("``i``n``t")]),e._v("32"),v("code"),e._v("T"),v("code",[e._v("e``n``s")]),e._v("or"),v("code"),e._v("of"),v("code"),e._v("2"),v("code",[e._v("``e``l``e")]),e._v("m"),v("code",[e._v("e``n``t``s")]),e._v(":"),v("code",[e._v("``n``e``w")]),v("em",[v("code",[e._v("h``e``i``g``h``t``,`` ``n``e``w")])]),v("code",[e._v("w``i``d``t``h")]),e._v("."),v("code"),e._v("T"),v("code",[e._v("h``e`` ``n``e``w`` ``s``i")]),e._v("z"),v("code",[e._v("e``")]),e._v("for"),v("code",[e._v("``t``h``e`` ``images")]),e._v(".")]),e._v(" "),v("li",[v("code",[e._v("method")]),e._v(":"),v("code"),e._v("R"),v("code",[e._v("e``s``i")]),e._v("z"),v("code",[e._v("e")]),e._v("M"),v("code",[e._v("e``t``h")]),e._v("o"),v("code",[e._v("d")]),e._v("."),v("code"),e._v("D"),v("code",[e._v("e")]),e._v("f"),v("code",[e._v("a")]),e._v("u"),v("code",[e._v("l``t``s`` ``t")]),e._v("o"),v("code",[e._v("``ResizeMethod.BILINEAR")]),e._v(".")]),e._v(" "),v("li",[v("code",[e._v("a``l``i``g``n")]),e._v("_"),v("code",[e._v("c")]),e._v("or"),v("code",[e._v("n``e")]),e._v("r"),v("code",[e._v("s")]),e._v(":"),v("code",[e._v("``b")]),e._v("oo"),v("code",[e._v("l")]),e._v("."),v("code"),e._v("If"),v("code"),e._v("Tru"),v("code",[e._v("e``,`` ``t``h``e`` ``c``e``n``t``e")]),e._v("r"),v("code",[e._v("s``")]),e._v("of"),v("code",[e._v("``t``h``e``")]),e._v("4"),v("code",[e._v("``c")]),e._v("or"),v("code",[e._v("n``e")]),e._v("r"),v("code"),e._v("p"),v("code",[e._v("i")]),e._v("x"),v("code",[e._v("e``l``s``")]),e._v("of"),v("code",[e._v("``t``h``e`` ``i``n")]),e._v("pu"),v("code",[e._v("t`` ``a``n``d``")]),e._v("ou"),v("code",[e._v("t")]),e._v("pu"),v("code",[e._v("t`` ``t``e``n``s")]),e._v("or"),v("code",[e._v("s`` ``a")]),e._v("r"),v("code",[e._v("e`` ``a``l``i``g``n``e``d``,``")]),e._v("pr"),v("code",[e._v("e``s``e")]),e._v("rv"),v("code",[e._v("i``n``g`` ``t``h``e``")]),e._v("v"),v("code",[e._v("a``l")]),e._v("u"),v("code",[e._v("e``s`` ``a``t`` ``t``h``e`` ``c")]),e._v("or"),v("code",[e._v("n``e")]),e._v("r"),v("code"),e._v("p"),v("code",[e._v("i")]),e._v("x"),v("code",[e._v("e``l``s")]),e._v("."),v("code"),e._v("D"),v("code",[e._v("e")]),e._v("f"),v("code",[e._v("a")]),e._v("u"),v("code",[e._v("l``t``s`` ``t")]),e._v("o"),v("code",[e._v("``False")]),e._v(".")]),e._v(" "),v("li",[v("code",[e._v("preserve_aspect_ratio")]),e._v(":"),v("code"),e._v("W"),v("code",[e._v("h``e``t``h``e")]),e._v("r"),v("code",[e._v("``t")]),e._v("o"),v("code"),e._v("pr"),v("code",[e._v("e``s``e")]),e._v("rv"),v("code",[e._v("e`` ``t``h``e`` ``a``s")]),e._v("p"),v("code",[e._v("e``c``t``")]),e._v("r"),v("code",[e._v("a``t``i")]),e._v("o."),v("code"),e._v("If"),v("code",[e._v("``t``h``i``s`` ``i``s`` ``s``e``t``,`` ``t``h``e``n`` ``images`` ``w``i``l``l`` ``b``e``")]),e._v("r"),v("code",[e._v("e``s``i")]),e._v("z"),v("code",[e._v("e``d`` ``t")]),e._v("o"),v("code",[e._v("``a`` ``s``i")]),e._v("z"),v("code",[e._v("e`` ``t``h``a``t``")]),e._v("f"),v("code",[e._v("i``t``s`` ``i``n`` ``s``i")]),e._v("z"),v("code",[e._v("e`` ``w``h``i``l``e``")]),e._v("pr"),v("code",[e._v("e``s``e")]),e._v("rv"),v("code",[e._v("i``n``g`` ``t``h``e`` ``a``s")]),e._v("p"),v("code",[e._v("e``c``t``")]),e._v("r"),v("code",[e._v("a``t``i")]),e._v("o"),v("code"),e._v("of"),v("code",[e._v("``t``h``e``")]),e._v("or"),v("code",[e._v("i``g``i``n``a``l`` ``i")]),e._v("m"),v("code",[e._v("a``g``e")]),e._v("."),v("code"),e._v("S"),v("code",[e._v("c``a``l``e``s``")]),e._v("up"),v("code",[e._v("``t``h``e`` ``i")]),e._v("m"),v("code",[e._v("a``g``e`` ``i")]),e._v("f"),v("code",[e._v("``s``i")]),e._v("z"),v("code",[e._v("e`` ``i``s`` ``b``i``g``g``e")]),e._v("r"),v("code",[e._v("``t``h``a``n`` ``t``h``e`` ``c")]),e._v("urr"),v("code",[e._v("e``n``t`` ``s``i")]),e._v("z"),v("code",[e._v("e``")]),e._v("of"),v("code",[e._v("``t``h``e`` ``i")]),e._v("m"),v("code",[e._v("a``g``e")]),e._v("."),v("code"),e._v("D"),v("code",[e._v("e")]),e._v("f"),v("code",[e._v("a")]),e._v("u"),v("code",[e._v("l``t``s`` ``t")]),e._v("o"),v("code",[e._v("``False")]),e._v(".")]),e._v(" "),v("li",[v("code",[e._v("n``a")]),e._v("m"),v("code",[e._v("e")]),e._v(":"),v("code"),e._v("A"),v("code",[e._v("``n``a")]),e._v("m"),v("code",[e._v("e``")]),e._v("for"),v("code",[e._v("``t``h``i``s``")]),e._v("op"),v("code",[e._v("e")]),e._v("r"),v("code",[e._v("a``t``i")]),e._v("o"),v("code",[e._v("n``")]),e._v("(op"),v("code",[e._v("t``i")]),e._v("o"),v("code",[e._v("n``a``l")]),e._v(").")])]),e._v(" "),v("h4",{attrs:{id:"raises"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("ValueError")]),e._v(": if the shape of "),v("code",[e._v("images")]),e._v(" is incompatible with the shape arguments to this function")]),e._v(" "),v("li",[v("code",[e._v("ValueError")]),e._v(": if "),v("code",[e._v("size")]),e._v(" has invalid shape or type.")]),e._v(" "),v("li",[v("code",[e._v("ValueError")]),e._v(": if an unsupported re"),v("code",[e._v("size")]),e._v(" method is specified.")])]),e._v(" "),v("h4",{attrs:{id:"returns"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),v("p",[e._v("If images was 4-D, a 4-D float Tensor of shape [batch, new_height, new_width, channels]. If images was 3-D, a 3-D float Tensor of shape [new_height, new_width, channels].")])])}),[],!1,null,null,null);_.default=t.exports}}]);