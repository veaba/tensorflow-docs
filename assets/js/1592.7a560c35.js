(window.webpackJsonp=window.webpackJsonp||[]).push([[1592],{1783:function(e,a,t){"use strict";t.r(a);var r=t(0),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Instantiates an all-ones variable of the same shape as another tensor.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.keras.backend.ones_like")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.keras.backend.ones_like")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.keras.backend.ones_like(\n    x,\n    dtype=None,\n    name=None\n)\n")])])]),t("h4",{attrs:{id:"arguments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": Keras variable or tensor.")]),e._v(" "),t("li",[t("code",[e._v("dtype")]),e._v(": String, "),t("code",[e._v("dtype")]),e._v(" of returned Keras variable. None uses the "),t("code",[e._v("dtype")]),e._v(" of "),t("code",[e._v("x")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": String, "),t("code",[e._v("name")]),e._v(" for the variable to create.")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Keras variable with the shape of x filled with ones.")]),e._v(" "),t("h4",{attrs:{id:"example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example","aria-hidden":"true"}},[e._v("#")]),e._v(" Example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("     >>> from keras import backend as K\n    >>> kvar = K.variable(np.random.random((2,3)))\n    >>> kvar_ones = K.ones_like(kvar)\n    >>> K.eval(kvar_ones)\n    array([[ 1.,  1.,  1.],\n           [ 1.,  1.,  1.]], dtype=float32)\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);