(window.webpackJsonp=window.webpackJsonp||[]).push([[1391],{1581:function(e,s,t){"use strict";t.r(s);var o=t(0),r=Object(o.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Defined in generated file: python/ops/gen_parsing_ops.py")]),e._v(" "),t("p",[e._v("Decompress strings.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.decode_compressed")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v1.io.decode_compressed")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.io.decode_compressed")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.io.decode_compressed(\n    bytes,\n    compression_type='',\n    name=None\n)\n")])])]),t("p",[e._v("This op decompresses each element of the bytes input Tensor, which is assumed to be compressed using the given compression_type.")]),e._v(" "),t("p",[e._v("The output is a string Tensor of the same shape as bytes, each element containing the decompressed data from the corresponding element in bytes.")]),e._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("bytes")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of type "),t("code",[e._v("string")]),e._v(". A "),t("code",[e._v("Tensor")]),e._v(" of "),t("code",[e._v("string")]),e._v(" which is compressed.")]),e._v(" "),t("li",[t("code",[e._v("compression_type")]),e._v(": An optional "),t("code",[e._v("string")]),e._v(". Defaults to "),t("code",[e._v('""')]),e._v(". A scalar containing either (i) the empty "),t("code",[e._v("string")]),e._v(' (no compression), (ii) "ZLIB", or (iii) "GZIP".')]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of type string.")])])}),[],!1,null,null,null);s.default=r.exports}}]);