(window.webpackJsonp=window.webpackJsonp||[]).push([[838],{1026:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"class-crossshardoptimizer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-crossshardoptimizer","aria-hidden":"true"}},[e._v("#")]),e._v(" Class CrossShardOptimizer")]),e._v(" "),a("p",[e._v("An optimizer that averages gradients across TPU shards.\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/train/Optimizer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Optimizer"),a("OutboundLink")],1),e._v("Inherits From:")]),e._v(" "),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("init")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/tpu/tpu_optimizer.py#L37-L70",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __init__(\n    opt,\n    reduction=losses.Reduction.MEAN,\n    name='CrossShardOptimizer',\n    group_assignment=None\n)\n")])])]),a("p",[e._v("Construct a new cross-shard optimizer.")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("opt")]),e._v(": An existing "),a("code",[e._v("Optimizer")]),e._v(" to encapsulate.")]),e._v(" "),a("li",[a("code",[e._v("reduction")]),e._v(": The "),a("code",[e._v("reduction")]),e._v(" to apply to the shard losses.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Optional "),a("code",[e._v("name")]),e._v(' prefix for the operations created when applying gradients. Defaults to "CrossShard'),a("code",[e._v("Optimizer")]),e._v('".')]),e._v(" "),a("li",[a("code",[e._v("group_assignment")]),e._v(": Optional 2d int32 lists with shape [num_groups, num_replicas_per_group] which describles how to apply "),a("code",[e._v("opt")]),e._v("imizer to subgroups.")])]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If reduction is not a valid cross-shard reduction.")])]),e._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),a("h3",{attrs:{id:"apply-gradients"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apply-gradients","aria-hidden":"true"}},[e._v("#")]),e._v(" apply_gradients")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/tpu/tpu_optimizer.py#L153-L182",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" apply_gradients(\n    grads_and_vars,\n    global_step=None,\n    name=None\n)\n")])])]),a("p",[e._v("Apply gradients to variables.")]),e._v(" "),a("p",[e._v("Calls tpu_ops.cross_replica_sum() to sum gradient contributions across replicas, and then applies the real optimizer.")]),e._v(" "),a("h4",{attrs:{id:"args-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("grads_and_vars")]),e._v(": List of (gradient, variable) pairs as returned by compute_gradients().")]),e._v(" "),a("li",[a("code",[e._v("global_step")]),e._v(": Optional Variable to increment by one after the variables have been updated.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Optional "),a("code",[e._v("name")]),e._v(" for the returned operation. Default to the "),a("code",[e._v("name")]),e._v(" passed to the Optimizer constructor.")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("An Operation that applies the gradients. If global_step was not None, that operation also increments global_step.")]),e._v(" "),a("h4",{attrs:{id:"raises-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If the grads_and_vars is malformed.")])]),e._v(" "),a("h3",{attrs:{id:"compute-gradients"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compute-gradients","aria-hidden":"true"}},[e._v("#")]),e._v(" compute_gradients")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/tpu/tpu_optimizer.py#L111-L151",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" compute_gradients(\n    loss,\n    var_list=None,\n    **kwargs\n)\n")])])]),a("p",[e._v('Compute gradients of "loss" for the variables in "var_list".')]),e._v(" "),a("p",[e._v("This simply wraps the compute_gradients() from the real optimizer. The gradients will be aggregated in the apply_gradients() so that user can modify the gradients like clipping with per replica global norm if needed. The global norm with aggregated gradients can be bad as one replica's huge gradients can hurt the gradients from other replicas.")]),e._v(" "),a("h4",{attrs:{id:"args-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("loss")]),e._v(": A Tensor containing the value to minimize.")]),e._v(" "),a("li",[a("code",[e._v("var_list")]),e._v(": Optional list or tuple of "),a("code",[e._v("tf.Variable")]),e._v(" to update to minimize "),a("code",[e._v("loss")]),e._v(". Defaults to the list of variables collected in the graph under the key "),a("code",[e._v("GraphKey.TRAINABLE_VARIABLES")]),e._v(".")])]),e._v(" "),a("h4",{attrs:{id:"returns-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A list of (gradient, variable) pairs.")]),e._v(" "),a("h4",{attrs:{id:"raises-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If not within a tpu_shard_context or group_assignment is invalid.")])]),e._v(" "),a("h3",{attrs:{id:"get-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-name","aria-hidden":"true"}},[e._v("#")]),e._v(" get_name")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/optimizer.py#L352-L353",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_name()\n")])])]),a("h3",{attrs:{id:"get-slot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-slot","aria-hidden":"true"}},[e._v("#")]),e._v(" get_slot")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/tpu/tpu_optimizer.py#L184-L196",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_slot(\n    *args,\n    **kwargs\n)\n")])])]),a("p",[e._v('Return a slot named "name" created for "var" by the Optimizer.')]),e._v(" "),a("p",[e._v("This simply wraps the get_slot() from the actual optimizer.")]),e._v(" "),a("h4",{attrs:{id:"args-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("h4",{attrs:{id:"returns-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("The Variable for the slot if it was created, None otherwise.")]),e._v(" "),a("h3",{attrs:{id:"get-slot-names"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-slot-names","aria-hidden":"true"}},[e._v("#")]),e._v(" get_slot_names")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/tpu/tpu_optimizer.py#L198-L210",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_slot_names(\n    *args,\n    **kwargs\n)\n")])])]),a("p",[e._v("Return a list of the names of slots created by the Optimizer.")]),e._v(" "),a("p",[e._v("This simply wraps the get_slot_names() from the actual optimizer.")]),e._v(" "),a("h4",{attrs:{id:"args-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("h4",{attrs:{id:"returns-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A list of strings.")]),e._v(" "),a("h3",{attrs:{id:"minimize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minimize","aria-hidden":"true"}},[e._v("#")]),e._v(" minimize")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/optimizer.py#L355-L413",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" minimize(\n    loss,\n    global_step=None,\n    var_list=None,\n    gate_gradients=GATE_OP,\n    aggregation_method=None,\n    colocate_gradients_with_ops=False,\n    name=None,\n    grad_loss=None\n)\n")])])]),a("p",[e._v("Add operations to minimize loss by updating var_list.")]),e._v(" "),a("p",[e._v("This method simply combines calls compute_gradients() and apply_gradients(). If you want to process the gradient before applying them call compute_gradients() and apply_gradients() explicitly instead of using this function.")]),e._v(" "),a("h4",{attrs:{id:"args-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("loss")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" containing the value to minimize.")]),e._v(" "),a("li",[a("code",[e._v("global_step")]),e._v(": Optional "),a("code",[e._v("Variable")]),e._v(" to increment by one after the variables have been updated.")]),e._v(" "),a("li",[a("code",[e._v("var_list")]),e._v(": Optional list or tuple of "),a("code",[e._v("Variable")]),e._v(" objects to update to minimize "),a("code",[e._v("loss")]),e._v(". Defaults to the list of variables collected in the graph under the key "),a("code",[e._v("GraphKeys.TRAINABLE_VARIABLES")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("gate_gradients")]),e._v(": How to gate the computation of gradients. Can be "),a("code",[e._v("GATE_NONE")]),e._v(", "),a("code",[e._v("GATE_OP")]),e._v(", or "),a("code",[e._v("GATE_GRAPH")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("aggregation_method")]),e._v(": Specifies the method used to combine gradient terms. Valid values are defined in the class "),a("code",[e._v("AggregationMethod")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("colocate_gradients_with_ops")]),e._v(": If True, try colocating gradients with the corresponding op.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Optional "),a("code",[e._v("name")]),e._v(" for the returned operation.")]),e._v(" "),a("li",[a("code",[e._v("grad_loss")]),e._v(": Optional. A "),a("code",[e._v("Tensor")]),e._v(" holding the gradient computed for "),a("code",[e._v("loss")]),e._v(".")])]),e._v(" "),a("h4",{attrs:{id:"returns-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("An Operation that updates the variables in var_list. If global_step was not None, that operation also increments global_step.")]),e._v(" "),a("h4",{attrs:{id:"raises-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If some of the variables are not "),a("code",[e._v("Variable")]),e._v(" objects.")])]),e._v(" "),a("h4",{attrs:{id:"eager-compatibility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eager-compatibility","aria-hidden":"true"}},[e._v("#")]),e._v(" Eager Compatibility")]),e._v(" "),a("p",[e._v("When eager execution is enabled, loss should be a Python function that takes no arguments and computes the value to be minimized. Minimization (and gradient computation) is done with respect to the elements of var_list if not None, else with respect to any trainable variables created during the execution of the loss function. gate_gradients, aggregation_method, colocate_gradients_with_ops and grad_loss are ignored when eager execution is enabled.")]),e._v(" "),a("h3",{attrs:{id:"variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables","aria-hidden":"true"}},[e._v("#")]),e._v(" variables")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/tpu/tpu_optimizer.py#L212-L214",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" variables()\n")])])]),a("p",[e._v("Forwarding the variables from the underlying optimizer.")]),e._v(" "),a("h2",{attrs:{id:"class-members"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-members","aria-hidden":"true"}},[e._v("#")]),e._v(" Class Members")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("GATE_GRAPH = 2")])]),e._v(" "),a("li",[a("code",[e._v("GATE_NONE = 0")])]),e._v(" "),a("li",[a("code",[e._v("GATE_OP = 1")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);