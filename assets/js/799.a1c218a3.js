(window.webpackJsonp=window.webpackJsonp||[]).push([[799],{987:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Converts each string in the input Tensor to its hash mod by a number of buckets.")]),t._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("tf.compat.v1.strings.to_hash_bucket")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" tf.compat.v1.string_to_hash_bucket(\n    string_tensor=None,\n    num_buckets=None,\n    name=None,\n    input=None\n)\n")])])]),s("p",[t._v("The hash function is deterministic on the content of the string within the process.")]),t._v(" "),s("p",[t._v("Note that the hash function may change from time to time. This functionality will be deprecated and it's recommended to use tf.string_to_hash_bucket_fast() or tf.string_to_hash_bucket_strong().")]),t._v(" "),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("string_tensor")]),t._v(": A "),s("code",[t._v("Tensor")]),t._v(" of type "),s("code",[t._v("string")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("num_buckets")]),t._v(": An "),s("code",[t._v("int")]),t._v(" that is "),s("code",[t._v(">= 1")]),t._v(". The number of buckets.")]),t._v(" "),s("li",[s("code",[t._v("name")]),t._v(": A "),s("code",[t._v("name")]),t._v(" for the operation (optional).")])]),t._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),s("p",[t._v("A Tensor of type int64.")])])}),[],!1,null,null,null);e.default=a.exports}}]);