(window.webpackJsonp=window.webpackJsonp||[]).push([[2093],{2281:function(e,t,o){"use strict";o.r(t);var a=o(0),_=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("Defined in generated file: python/ops/gen_math_ops.py")]),e._v(" "),o("p",[e._v("Returns element-wise remainder of division. When x < 0 xor y < 0 is")]),e._v(" "),o("h3",{attrs:{id:"aliases"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("tf.RaggedTensor.__mod__")])]),e._v(" "),o("li",[o("code",[e._v("tf.compat.v1.RaggedTensor.__mod__")])]),e._v(" "),o("li",[o("code",[e._v("tf.compat.v1.floormod")])]),e._v(" "),o("li",[o("code",[e._v("tf.compat.v1.math.floormod")])]),e._v(" "),o("li",[o("code",[e._v("tf.compat.v1.math.mod")])]),e._v(" "),o("li",[o("code",[e._v("tf.compat.v1.mod")])]),e._v(" "),o("li",[o("code",[e._v("tf.compat.v2.RaggedTensor.__mod__")])]),e._v(" "),o("li",[o("code",[e._v("tf.compat.v2.math.floormod")])]),e._v(" "),o("li",[o("code",[e._v("tf.compat.v2.math.mod")])]),e._v(" "),o("li",[o("code",[e._v("tf.math.mod")])])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(" tf.math.floormod(\n    x,\n    y,\n    name=None\n)\n")])])]),o("p",[e._v("true, this follows Python semantics in that the result here is consistent with a flooring divide. E.g. floor(x / y) * y + mod(x, y) = x.\n"),o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/math/floormod",target:"_blank",rel:"noopener noreferrer"}},[e._v("math.floormod"),o("OutboundLink")],1),e._v("NOTE:  supports broadcasting. More about broadcasting here")]),e._v(" "),o("h4",{attrs:{id:"args"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("x")]),e._v(": A "),o("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),o("code",[e._v("int32")]),e._v(", "),o("code",[e._v("int64")]),e._v(", "),o("code",[e._v("bfloat16")]),e._v(", "),o("code",[e._v("half")]),e._v(", "),o("code",[e._v("float32")]),e._v(", "),o("code",[e._v("float64")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("y")]),e._v(": A "),o("code",[e._v("Tensor")]),e._v(". Must have the same t"),o("code",[e._v("y")]),e._v("pe as "),o("code",[e._v("x")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("name")]),e._v(": A "),o("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),o("h4",{attrs:{id:"returns"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),o("p",[e._v("A Tensor. Has the same type as x.")])])}),[],!1,null,null,null);t.default=_.exports}}]);