(window.webpackJsonp=window.webpackJsonp||[]).push([[654],{842:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Computes Relu(x * weight + biases).")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" tf.compat.v1.nn.relu_layer(\n    x,\n    weights,\n    biases,\n    name=None\n)\n")])])]),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("x")]),t._v(": a 2D tensor. Dimensions typically: batch, in_units")]),t._v(" "),s("li",[s("code",[t._v("weights")]),t._v(": a 2D tensor. Dimensions typically: in_units, out_units")]),t._v(" "),s("li",[s("code",[t._v("biases")]),t._v(": a 1D tensor. Dimensions: out_units")]),t._v(" "),s("li",[s("code",[t._v("name")]),t._v(": A "),s("code",[t._v("name")]),t._v(' for the operation (optional). If not specified "nn_relu_layer" is used.')])]),t._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),s("p",[t._v("A 2-D Tensor computing relu(matmul(x, weights) + biases). Dimensions typically: batch, out_units.")])])}),[],!1,null,null,null);e.default=a.exports}}]);