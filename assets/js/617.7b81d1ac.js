(window.webpackJsonp=window.webpackJsonp||[]).push([[617],{805:function(t,e,o){"use strict";o.r(e);var r=o(0),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("p",[t._v("Wrappers for primitive Neural Net (NN) Operations.")]),t._v(" "),o("h2",{attrs:{id:"modules"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#modules","aria-hidden":"true"}},[t._v("#")]),t._v(" Modules")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/rnn_cell",target:"_blank",rel:"noopener noreferrer"}},[t._v("rnn_cell"),o("OutboundLink")],1),t._v(" module: Module for constructing RNN Cells.")]),t._v(" "),o("h2",{attrs:{id:"functions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#functions","aria-hidden":"true"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/random/all_candidate_sampler",target:"_blank",rel:"noopener noreferrer"}},[t._v("all_candidate_sampler(...)"),o("OutboundLink")],1),t._v(": Generate the set of all classes.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d",target:"_blank",rel:"noopener noreferrer"}},[t._v("atrous_conv2d(...)"),o("OutboundLink")],1),t._v(": Atrous convolution (a.k.a. convolution with holes or dilated convolution).")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d_transpose",target:"_blank",rel:"noopener noreferrer"}},[t._v("atrous_conv2d_transpose(...)"),o("OutboundLink")],1),t._v(": The transpose of atrous_conv2d.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/avg_pool",target:"_blank",rel:"noopener noreferrer"}},[t._v("avg_pool(...)"),o("OutboundLink")],1),t._v(": Performs the average pooling on the input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/avg_pool1d",target:"_blank",rel:"noopener noreferrer"}},[t._v("avg_pool1d(...)"),o("OutboundLink")],1),t._v(": Performs the average pooling on the input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/avg_pool",target:"_blank",rel:"noopener noreferrer"}},[t._v("avg_pool2d(...)"),o("OutboundLink")],1),t._v(": Performs the average pooling on the input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/avg_pool3d",target:"_blank",rel:"noopener noreferrer"}},[t._v("avg_pool3d(...)"),o("OutboundLink")],1),t._v(": Performs the average pooling on the input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/avg_pool",target:"_blank",rel:"noopener noreferrer"}},[t._v("avg_pool_v2(...)"),o("OutboundLink")],1),t._v(": Performs the avg pooling on the input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/batch_norm_with_global_normalization",target:"_blank",rel:"noopener noreferrer"}},[t._v("batch_norm_with_global_normalization(...)"),o("OutboundLink")],1),t._v(": Batch normalization.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/batch_normalization",target:"_blank",rel:"noopener noreferrer"}},[t._v("batch_normalization(...)"),o("OutboundLink")],1),t._v(": Batch normalization.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/bias_add",target:"_blank",rel:"noopener noreferrer"}},[t._v("bias_add(...)"),o("OutboundLink")],1),t._v(": Adds bias to value.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/bidirectional_dynamic_rnn",target:"_blank",rel:"noopener noreferrer"}},[t._v("bidirectional_dynamic_rnn(...)"),o("OutboundLink")],1),t._v(": Creates a dynamic version of bidirectional recurrent neural network. (deprecated)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/collapse_repeated",target:"_blank",rel:"noopener noreferrer"}},[t._v("collapse_repeated(...)"),o("OutboundLink")],1),t._v(": Merge repeated labels into single labels.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/compute_accidental_hits",target:"_blank",rel:"noopener noreferrer"}},[t._v("compute_accidental_hits(...)"),o("OutboundLink")],1),t._v(": Compute the position ids in sampled_candidates matching true_classes.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/compute_average_loss",target:"_blank",rel:"noopener noreferrer"}},[t._v("compute_average_loss(...)"),o("OutboundLink")],1),t._v(": Scales per-example losses with sample_weights and computes their average.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/conv1d",target:"_blank",rel:"noopener noreferrer"}},[t._v("conv1d(...)"),o("OutboundLink")],1),t._v(": Computes a 1-D convolution given 3-D input and filter tensors. (deprecated argument values) (deprecated argument values)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/conv1d_transpose",target:"_blank",rel:"noopener noreferrer"}},[t._v("conv1d_transpose(...)"),o("OutboundLink")],1),t._v(": The transpose of conv1d.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/conv2d",target:"_blank",rel:"noopener noreferrer"}},[t._v("conv2d(...)"),o("OutboundLink")],1),t._v(": Computes a 2-D convolution given 4-D input and filter tensors.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/conv2d_backprop_filter",target:"_blank",rel:"noopener noreferrer"}},[t._v("conv2d_backprop_filter(...)"),o("OutboundLink")],1),t._v(": Computes the gradients of convolution with respect to the filter.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/conv2d_backprop_input",target:"_blank",rel:"noopener noreferrer"}},[t._v("conv2d_backprop_input(...)"),o("OutboundLink")],1),t._v(": Computes the gradients of convolution with respect to the input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/conv2d_transpose",target:"_blank",rel:"noopener noreferrer"}},[t._v("conv2d_transpose(...)"),o("OutboundLink")],1),t._v(": The transpose of conv2d.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/conv3d",target:"_blank",rel:"noopener noreferrer"}},[t._v("conv3d(...)"),o("OutboundLink")],1),t._v(": Computes a 3-D convolution given 5-D input and filter tensors.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/conv3d_backprop_filter",target:"_blank",rel:"noopener noreferrer"}},[t._v("conv3d_backprop_filter(...)"),o("OutboundLink")],1),t._v(": Computes the gradients of 3-D convolution with respect to the filter.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/conv3d_backprop_filter",target:"_blank",rel:"noopener noreferrer"}},[t._v("conv3d_backprop_filter_v2(...)"),o("OutboundLink")],1),t._v(": Computes the gradients of 3-D convolution with respect to the filter.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/conv3d_transpose",target:"_blank",rel:"noopener noreferrer"}},[t._v("conv3d_transpose(...)"),o("OutboundLink")],1),t._v(": The transpose of conv3d.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/conv_transpose",target:"_blank",rel:"noopener noreferrer"}},[t._v("conv_transpose(...)"),o("OutboundLink")],1),t._v(": The transpose of convolution.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/convolution",target:"_blank",rel:"noopener noreferrer"}},[t._v("convolution(...)"),o("OutboundLink")],1),t._v(": Computes sums of N-D convolutions (actually cross-correlation).")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/crelu",target:"_blank",rel:"noopener noreferrer"}},[t._v("crelu(...)"),o("OutboundLink")],1),t._v(": Computes Concatenated ReLU.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/ctc_beam_search_decoder",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctc_beam_search_decoder(...)"),o("OutboundLink")],1),t._v(": Performs beam search decoding on the logits given in input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/ctc_beam_search_decoder",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctc_beam_search_decoder_v2(...)"),o("OutboundLink")],1),t._v(": Performs beam search decoding on the logits given in input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/ctc_greedy_decoder",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctc_greedy_decoder(...)"),o("OutboundLink")],1),t._v(": Performs greedy decoding on the logits given in input (best path).")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/ctc_loss",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctc_loss(...)"),o("OutboundLink")],1),t._v(": Computes the CTC (Connectionist Temporal Classification) Loss.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/ctc_loss",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctc_loss_v2(...)"),o("OutboundLink")],1),t._v(": Computes CTC (Connectionist Temporal Classification) loss.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/ctc_unique_labels",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctc_unique_labels(...)"),o("OutboundLink")],1),t._v(": Get unique labels and indices for batched labels for tf.nn.ctc_loss.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/depth_to_space",target:"_blank",rel:"noopener noreferrer"}},[t._v("depth_to_space(...)"),o("OutboundLink")],1),t._v(": DepthToSpace for tensors of type T.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/depthwise_conv2d",target:"_blank",rel:"noopener noreferrer"}},[t._v("depthwise_conv2d(...)"),o("OutboundLink")],1),t._v(": Depthwise 2-D convolution.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d_backprop_filter",target:"_blank",rel:"noopener noreferrer"}},[t._v("depthwise_conv2d_backprop_filter(...)"),o("OutboundLink")],1),t._v(": Computes the gradients of depthwise convolution with respect to the filter.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d_backprop_input",target:"_blank",rel:"noopener noreferrer"}},[t._v("depthwise_conv2d_backprop_input(...)"),o("OutboundLink")],1),t._v(": Computes the gradients of depthwise convolution with respect to the input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/depthwise_conv2d_native",target:"_blank",rel:"noopener noreferrer"}},[t._v("depthwise_conv2d_native(...)"),o("OutboundLink")],1),t._v(": Computes a 2-D depthwise convolution given 4-D input and filter tensors.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d_backprop_filter",target:"_blank",rel:"noopener noreferrer"}},[t._v("depthwise_conv2d_native_backprop_filter(...)"),o("OutboundLink")],1),t._v(": Computes the gradients of depthwise convolution with respect to the filter.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d_backprop_input",target:"_blank",rel:"noopener noreferrer"}},[t._v("depthwise_conv2d_native_backprop_input(...)"),o("OutboundLink")],1),t._v(": Computes the gradients of depthwise convolution with respect to the input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/dilation2d",target:"_blank",rel:"noopener noreferrer"}},[t._v("dilation2d(...)"),o("OutboundLink")],1),t._v(": Computes the grayscale dilation of 4-D input and 3-D filter tensors.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/dropout",target:"_blank",rel:"noopener noreferrer"}},[t._v("dropout(...)"),o("OutboundLink")],1),t._v(": Computes dropout. (deprecated arguments)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/dynamic_rnn",target:"_blank",rel:"noopener noreferrer"}},[t._v("dynamic_rnn(...)"),o("OutboundLink")],1),t._v(": Creates a recurrent neural network specified by RNNCell cell. (deprecated)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/elu",target:"_blank",rel:"noopener noreferrer"}},[t._v("elu(...)"),o("OutboundLink")],1),t._v(": Computes exponential linear: exp(features) - 1 if < 0, features otherwise.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/embedding_lookup",target:"_blank",rel:"noopener noreferrer"}},[t._v("embedding_lookup(...)"),o("OutboundLink")],1),t._v(": Looks up ids in a list of embedding tensors.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/embedding_lookup_sparse",target:"_blank",rel:"noopener noreferrer"}},[t._v("embedding_lookup_sparse(...)"),o("OutboundLink")],1),t._v(": Computes embeddings for the given ids and weights.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/erosion2d",target:"_blank",rel:"noopener noreferrer"}},[t._v("erosion2d(...)"),o("OutboundLink")],1),t._v(": Computes the grayscale erosion of 4-D value and 3-D kernel tensors.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/random/fixed_unigram_candidate_sampler",target:"_blank",rel:"noopener noreferrer"}},[t._v("fixed_unigram_candidate_sampler(...)"),o("OutboundLink")],1),t._v(": Samples a set of classes using the provided (fixed) base distribution.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/fractional_avg_pool",target:"_blank",rel:"noopener noreferrer"}},[t._v("fractional_avg_pool(...)"),o("OutboundLink")],1),t._v(": Performs fractional average pooling on the input. (deprecated)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/fractional_max_pool",target:"_blank",rel:"noopener noreferrer"}},[t._v("fractional_max_pool(...)"),o("OutboundLink")],1),t._v(": Performs fractional max pooling on the input. (deprecated)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/fused_batch_norm",target:"_blank",rel:"noopener noreferrer"}},[t._v("fused_batch_norm(...)"),o("OutboundLink")],1),t._v(": Batch normalization.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/math/in_top_k",target:"_blank",rel:"noopener noreferrer"}},[t._v("in_top_k(...)"),o("OutboundLink")],1),t._v(": Says whether the targets are in the top K predictions.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/l2_loss",target:"_blank",rel:"noopener noreferrer"}},[t._v("l2_loss(...)"),o("OutboundLink")],1),t._v(": L2 Loss.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/linalg/l2_normalize",target:"_blank",rel:"noopener noreferrer"}},[t._v("l2_normalize(...)"),o("OutboundLink")],1),t._v(": Normalizes along dimension axis using an L2 norm. (deprecated arguments)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/leaky_relu",target:"_blank",rel:"noopener noreferrer"}},[t._v("leaky_relu(...)"),o("OutboundLink")],1),t._v(": Compute the Leaky ReLU activation function.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/random/learned_unigram_candidate_sampler",target:"_blank",rel:"noopener noreferrer"}},[t._v("learned_unigram_candidate_sampler(...)"),o("OutboundLink")],1),t._v(": Samples a set of classes from a distribution learned during training.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/local_response_normalization",target:"_blank",rel:"noopener noreferrer"}},[t._v("local_response_normalization(...)"),o("OutboundLink")],1),t._v(": Local Response Normalization.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/log_poisson_loss",target:"_blank",rel:"noopener noreferrer"}},[t._v("log_poisson_loss(...)"),o("OutboundLink")],1),t._v(": Computes log Poisson loss given log_input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/math/log_softmax",target:"_blank",rel:"noopener noreferrer"}},[t._v("log_softmax(...)"),o("OutboundLink")],1),t._v(": Computes log softmax activations. (deprecated arguments)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/random/log_uniform_candidate_sampler",target:"_blank",rel:"noopener noreferrer"}},[t._v("log_uniform_candidate_sampler(...)"),o("OutboundLink")],1),t._v(": Samples a set of classes using a log-uniform (Zipfian) base distribution.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/local_response_normalization",target:"_blank",rel:"noopener noreferrer"}},[t._v("lrn(...)"),o("OutboundLink")],1),t._v(": Local Response Normalization.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/max_pool",target:"_blank",rel:"noopener noreferrer"}},[t._v("max_pool(...)"),o("OutboundLink")],1),t._v(": Performs the max pooling on the input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/max_pool1d",target:"_blank",rel:"noopener noreferrer"}},[t._v("max_pool1d(...)"),o("OutboundLink")],1),t._v(": Performs the max pooling on the input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/max_pool2d",target:"_blank",rel:"noopener noreferrer"}},[t._v("max_pool2d(...)"),o("OutboundLink")],1),t._v(": Performs the max pooling on the input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/max_pool3d",target:"_blank",rel:"noopener noreferrer"}},[t._v("max_pool3d(...)"),o("OutboundLink")],1),t._v(": Performs the max pooling on the input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/max_pool",target:"_blank",rel:"noopener noreferrer"}},[t._v("max_pool_v2(...)"),o("OutboundLink")],1),t._v(": Performs the max pooling on the input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/max_pool_with_argmax",target:"_blank",rel:"noopener noreferrer"}},[t._v("max_pool_with_argmax(...)"),o("OutboundLink")],1),t._v(": Performs max pooling on the input and outputs both max values and indices.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/moments",target:"_blank",rel:"noopener noreferrer"}},[t._v("moments(...)"),o("OutboundLink")],1),t._v(": Calculate the mean and variance of x.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/nce_loss",target:"_blank",rel:"noopener noreferrer"}},[t._v("nce_loss(...)"),o("OutboundLink")],1),t._v(": Computes and returns the noise-contrastive estimation training loss.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/normalize_moments",target:"_blank",rel:"noopener noreferrer"}},[t._v("normalize_moments(...)"),o("OutboundLink")],1),t._v(": Calculate the mean and variance of based on the sufficient statistics.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/pool",target:"_blank",rel:"noopener noreferrer"}},[t._v("pool(...)"),o("OutboundLink")],1),t._v(": Performs an N-D pooling operation.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/quantized_avg_pool",target:"_blank",rel:"noopener noreferrer"}},[t._v("quantized_avg_pool(...)"),o("OutboundLink")],1),t._v(": Produces the average pool of the input tensor for quantized types.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/quantized_conv2d",target:"_blank",rel:"noopener noreferrer"}},[t._v("quantized_conv2d(...)"),o("OutboundLink")],1),t._v(": Computes a 2D convolution given quantized 4D input and filter tensors.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/quantized_max_pool",target:"_blank",rel:"noopener noreferrer"}},[t._v("quantized_max_pool(...)"),o("OutboundLink")],1),t._v(": Produces the max pool of the input tensor for quantized types.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/quantized_relu_x",target:"_blank",rel:"noopener noreferrer"}},[t._v("quantized_relu_x(...)"),o("OutboundLink")],1),t._v(": Computes Quantized Rectified Linear X: min(max(features, 0), max_value)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/raw_rnn",target:"_blank",rel:"noopener noreferrer"}},[t._v("raw_rnn(...)"),o("OutboundLink")],1),t._v(": Creates an RNN specified by RNNCell cell and loop function loop_fn.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/relu",target:"_blank",rel:"noopener noreferrer"}},[t._v("relu(...)"),o("OutboundLink")],1),t._v(": Computes rectified linear: max(features, 0).")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/relu6",target:"_blank",rel:"noopener noreferrer"}},[t._v("relu6(...)"),o("OutboundLink")],1),t._v(": Computes Rectified Linear 6: min(max(features, 0), 6).")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/relu_layer",target:"_blank",rel:"noopener noreferrer"}},[t._v("relu_layer(...)"),o("OutboundLink")],1),t._v(": Computes Relu(x * weight + biases).")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/safe_embedding_lookup_sparse",target:"_blank",rel:"noopener noreferrer"}},[t._v("safe_embedding_lookup_sparse(...)"),o("OutboundLink")],1),t._v(": Lookup embedding results, accounting for invalid IDs and empty features.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/sampled_softmax_loss",target:"_blank",rel:"noopener noreferrer"}},[t._v("sampled_softmax_loss(...)"),o("OutboundLink")],1),t._v(": Computes and returns the sampled softmax training loss.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/scale_regularization_loss",target:"_blank",rel:"noopener noreferrer"}},[t._v("scale_regularization_loss(...)"),o("OutboundLink")],1),t._v(": Scales the sum of the given regularization losses by number of replicas.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/selu",target:"_blank",rel:"noopener noreferrer"}},[t._v("selu(...)"),o("OutboundLink")],1),t._v(": Computes scaled exponential linear: scale * alpha * (exp(features) - 1)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/separable_conv2d",target:"_blank",rel:"noopener noreferrer"}},[t._v("separable_conv2d(...)"),o("OutboundLink")],1),t._v(": 2-D convolution with separable filters.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/math/sigmoid",target:"_blank",rel:"noopener noreferrer"}},[t._v("sigmoid(...)"),o("OutboundLink")],1),t._v(": Computes sigmoid of x element-wise.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/sigmoid_cross_entropy_with_logits",target:"_blank",rel:"noopener noreferrer"}},[t._v("sigmoid_cross_entropy_with_logits(...)"),o("OutboundLink")],1),t._v(": Computes sigmoid cross entropy given logits.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/math/softmax",target:"_blank",rel:"noopener noreferrer"}},[t._v("softmax(...)"),o("OutboundLink")],1),t._v(": Computes softmax activations. (deprecated arguments)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/softmax_cross_entropy_with_logits",target:"_blank",rel:"noopener noreferrer"}},[t._v("softmax_cross_entropy_with_logits(...)"),o("OutboundLink")],1),t._v(": Computes softmax cross entropy between logits and labels. (deprecated)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/softmax_cross_entropy_with_logits_v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("softmax_cross_entropy_with_logits_v2(...)"),o("OutboundLink")],1),t._v(": Computes softmax cross entropy between logits and labels. (deprecated arguments)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/math/softplus",target:"_blank",rel:"noopener noreferrer"}},[t._v("softplus(...)"),o("OutboundLink")],1),t._v(": Computes softplus: log(exp(features) + 1).")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/softsign",target:"_blank",rel:"noopener noreferrer"}},[t._v("softsign(...)"),o("OutboundLink")],1),t._v(": Computes softsign: features / (abs(features) + 1).")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/space_to_batch",target:"_blank",rel:"noopener noreferrer"}},[t._v("space_to_batch(...)"),o("OutboundLink")],1),t._v(": SpaceToBatch for 4-D tensors of type T.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/space_to_depth",target:"_blank",rel:"noopener noreferrer"}},[t._v("space_to_depth(...)"),o("OutboundLink")],1),t._v(": SpaceToDepth for tensors of type T.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/sparse_softmax_cross_entropy_with_logits",target:"_blank",rel:"noopener noreferrer"}},[t._v("sparse_softmax_cross_entropy_with_logits(...)"),o("OutboundLink")],1),t._v(": Computes sparse softmax cross entropy between logits and labels.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/static_bidirectional_rnn",target:"_blank",rel:"noopener noreferrer"}},[t._v("static_bidirectional_rnn(...)"),o("OutboundLink")],1),t._v(": Creates a bidirectional recurrent neural network. (deprecated)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/static_rnn",target:"_blank",rel:"noopener noreferrer"}},[t._v("static_rnn(...)"),o("OutboundLink")],1),t._v(": Creates a recurrent neural network specified by RNNCell cell. (deprecated)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/static_state_saving_rnn",target:"_blank",rel:"noopener noreferrer"}},[t._v("static_state_saving_rnn(...)"),o("OutboundLink")],1),t._v(": RNN that accepts a state saver for time-truncated RNN calculation. (deprecated)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/sufficient_statistics",target:"_blank",rel:"noopener noreferrer"}},[t._v("sufficient_statistics(...)"),o("OutboundLink")],1),t._v(": Calculate the sufficient statistics for the mean and variance of x.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/math/tanh",target:"_blank",rel:"noopener noreferrer"}},[t._v("tanh(...)"),o("OutboundLink")],1),t._v(": Computes hyperbolic tangent of x element-wise.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/math/top_k",target:"_blank",rel:"noopener noreferrer"}},[t._v("top_k(...)"),o("OutboundLink")],1),t._v(": Finds values and indices of the k largest entries for the last dimension.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/random/uniform_candidate_sampler",target:"_blank",rel:"noopener noreferrer"}},[t._v("uniform_candidate_sampler(...)"),o("OutboundLink")],1),t._v(": Samples a set of classes using a uniform base distribution.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/weighted_cross_entropy_with_logits",target:"_blank",rel:"noopener noreferrer"}},[t._v("weighted_cross_entropy_with_logits(...)"),o("OutboundLink")],1),t._v(": Computes a weighted cross entropy. (deprecated arguments)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/weighted_moments",target:"_blank",rel:"noopener noreferrer"}},[t._v("weighted_moments(...)"),o("OutboundLink")],1),t._v(": Returns the frequency-weighted mean and variance of x.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/with_space_to_batch",target:"_blank",rel:"noopener noreferrer"}},[t._v("with_space_to_batch(...)"),o("OutboundLink")],1),t._v(": Performs op on the space-to-batch representation of input.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/xw_plus_b",target:"_blank",rel:"noopener noreferrer"}},[t._v("xw_plus_b(...)"),o("OutboundLink")],1),t._v(": Computes matmul(x, weights) + biases.")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/math/zero_fraction",target:"_blank",rel:"noopener noreferrer"}},[t._v("zero_fraction(...)"),o("OutboundLink")],1),t._v(": Returns the fraction of zeros in value.")]),t._v(" "),o("h2",{attrs:{id:"other-members"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#other-members","aria-hidden":"true"}},[t._v("#")]),t._v(" Other Members")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("swish")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);