(window.webpackJsonp=window.webpackJsonp||[]).push([[298],{486:function(e,t,a){"use strict";a.r(t);var l=a(0),s=Object(l.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Registers a flag whose value can be a list of enum members.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v1.app.flags.DEFINE_multi_enum_class")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.compat.v1.flags.DEFINE_multi_enum_class(\n    name,\n    default,\n    enum_class,\n    help,\n    flag_values=_flagvalues.FLAGS,\n    module_name=None,\n    **args\n)\n")])])]),a("p",[e._v("Use the flag on the command line multiple times to place multiple enum values into the list.")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": str, the flag "),a("code",[e._v("name")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("default")]),e._v(": Union[Iterable[Enum], Iterable[Text], Enum, Text, None], the "),a("code",[e._v("default")]),e._v(" value of the flag; see "),a("code",[e._v("DEFINE_multi")]),e._v("; only differences are documented here. If the value is a single Enum, it is treated as a single-item list of that Enum value. If it is an iterable, text values within the iterable will be converted to the equivalent Enum objects.")]),e._v(" "),a("li",[a("code",[e._v("enum_class")]),e._v(": class, the Enum class with all the possible values for the flag. help: str, the help message.")]),e._v(" "),a("li",[a("code",[e._v("flag_values")]),e._v(": FlagValues, the FlagValues instance with which the flag will be registered. This should almost never need to be overridden.")]),e._v(" "),a("li",[a("code",[e._v("module_name")]),e._v(": A string, the "),a("code",[e._v("name")]),e._v(" of the Python module declaring this flag. If not provided, it will be computed using the stack trace of this call.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);