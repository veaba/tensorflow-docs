(window.webpackJsonp=window.webpackJsonp||[]).push([[515],{703:function(r,e,t){"use strict";t.r(e);var o=t(0),n=Object(o.a)({},(function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("p",[r._v("Operations for linear algebra.")]),r._v(" "),t("h2",{attrs:{id:"classes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#classes","aria-hidden":"true"}},[r._v("#")]),r._v(" Classes")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperator",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperator"),t("OutboundLink")],1),r._v(": Base class defining a [batch of] linear operator[s].")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorAdjoint",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorAdjoint"),t("OutboundLink")],1),r._v(": LinearOperator representing the adjoint of another operator.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorBlockDiag",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorBlockDiag"),t("OutboundLink")],1),r._v(": Combines one or more LinearOperators in to a Block Diagonal matrix.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorCirculant",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorCirculant"),t("OutboundLink")],1),r._v(": LinearOperator acting like a circulant matrix.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorCirculant2D",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorCirculant2D"),t("OutboundLink")],1),r._v(": LinearOperator acting like a block circulant matrix.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorCirculant3D",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorCirculant3D"),t("OutboundLink")],1),r._v(": LinearOperator acting like a nested block circulant matrix.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorComposition",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorComposition"),t("OutboundLink")],1),r._v(": Composes one or more LinearOperators.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorDiag",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorDiag"),t("OutboundLink")],1),r._v(": LinearOperator acting like a [batch] square diagonal matrix.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorFullMatrix",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorFullMatrix"),t("OutboundLink")],1),r._v(": LinearOperator that wraps a [batch] matrix.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorHouseholder",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorHouseholder"),t("OutboundLink")],1),r._v(": LinearOperator acting like a [batch] of Householder transformations.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorIdentity",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorIdentity"),t("OutboundLink")],1),r._v(": LinearOperator acting like a [batch] square identity matrix.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorInversion",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorInversion"),t("OutboundLink")],1),r._v(": LinearOperator representing the inverse of another operator.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorKronecker",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorKronecker"),t("OutboundLink")],1),r._v(": Kronecker product between two LinearOperators.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorLowRankUpdate",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorLowRankUpdate"),t("OutboundLink")],1),r._v(": Perturb a LinearOperator with a rank K update.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorLowerTriangular",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorLowerTriangular"),t("OutboundLink")],1),r._v(": LinearOperator acting like a [batch] square lower triangular matrix.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorScaledIdentity",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorScaledIdentity"),t("OutboundLink")],1),r._v(": LinearOperator acting like a scaled [batch] identity matrix A = c I.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorToeplitz",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorToeplitz"),t("OutboundLink")],1),r._v(": LinearOperator acting like a [batch] of toeplitz matrices.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/LinearOperatorZeros",target:"_blank",rel:"noopener noreferrer"}},[r._v("class LinearOperatorZeros"),t("OutboundLink")],1),r._v(": LinearOperator acting like a [batch] zero matrix.")]),r._v(" "),t("h2",{attrs:{id:"functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#functions","aria-hidden":"true"}},[r._v("#")]),r._v(" Functions")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/adjoint",target:"_blank",rel:"noopener noreferrer"}},[r._v("adjoint(...)"),t("OutboundLink")],1),r._v(": Transposes the last two dimensions of and conjugates tensor matrix.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/band_part",target:"_blank",rel:"noopener noreferrer"}},[r._v("band_part(...)"),t("OutboundLink")],1),r._v(": Copy a tensor setting everything outside a central band in each innermost matrix")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/cholesky",target:"_blank",rel:"noopener noreferrer"}},[r._v("cholesky(...)"),t("OutboundLink")],1),r._v(": Computes the Cholesky decomposition of one or more square matrices.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/cholesky_solve",target:"_blank",rel:"noopener noreferrer"}},[r._v("cholesky_solve(...)"),t("OutboundLink")],1),r._v(": Solves systems of linear eqns A X = RHS, given Cholesky factorizations.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/cross",target:"_blank",rel:"noopener noreferrer"}},[r._v("cross(...)"),t("OutboundLink")],1),r._v(": Compute the pairwise cross product.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/det",target:"_blank",rel:"noopener noreferrer"}},[r._v("det(...)"),t("OutboundLink")],1),r._v(": Computes the determinant of one or more square matrices.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/diag",target:"_blank",rel:"noopener noreferrer"}},[r._v("diag(...)"),t("OutboundLink")],1),r._v(": Returns a batched diagonal tensor with given batched diagonal values.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/diag_part",target:"_blank",rel:"noopener noreferrer"}},[r._v("diag_part(...)"),t("OutboundLink")],1),r._v(": Returns the batched diagonal part of a batched tensor.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/eigh",target:"_blank",rel:"noopener noreferrer"}},[r._v("eigh(...)"),t("OutboundLink")],1),r._v(": Computes the eigen decomposition of a batch of self-adjoint matrices.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/eigvalsh",target:"_blank",rel:"noopener noreferrer"}},[r._v("eigvalsh(...)"),t("OutboundLink")],1),r._v(": Computes the eigenvalues of one or more self-adjoint matrices.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/einsum",target:"_blank",rel:"noopener noreferrer"}},[r._v("einsum(...)"),t("OutboundLink")],1),r._v(": A generalized contraction between tensors of arbitrary dimension.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/expm",target:"_blank",rel:"noopener noreferrer"}},[r._v("expm(...)"),t("OutboundLink")],1),r._v(": Computes the matrix exponential of one or more square matrices.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/eye",target:"_blank",rel:"noopener noreferrer"}},[r._v("eye(...)"),t("OutboundLink")],1),r._v(": Construct an identity matrix, or a batch of matrices.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/global_norm",target:"_blank",rel:"noopener noreferrer"}},[r._v("global_norm(...)"),t("OutboundLink")],1),r._v(": Computes the global norm of multiple tensors.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/inv",target:"_blank",rel:"noopener noreferrer"}},[r._v("inv(...)"),t("OutboundLink")],1),r._v(": Computes the inverse of one or more square invertible matrices or their")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/linalg/l2_normalize",target:"_blank",rel:"noopener noreferrer"}},[r._v("l2_normalize(...)"),t("OutboundLink")],1),r._v(": Normalizes along dimension axis using an L2 norm. (deprecated arguments)")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/logdet",target:"_blank",rel:"noopener noreferrer"}},[r._v("logdet(...)"),t("OutboundLink")],1),r._v(": Computes log of the determinant of a hermitian positive definite matrix.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/logm",target:"_blank",rel:"noopener noreferrer"}},[r._v("logm(...)"),t("OutboundLink")],1),r._v(": Computes the matrix logarithm of one or more square matrices:")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/lstsq",target:"_blank",rel:"noopener noreferrer"}},[r._v("lstsq(...)"),t("OutboundLink")],1),r._v(": Solves one or more linear least-squares problems.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/lu",target:"_blank",rel:"noopener noreferrer"}},[r._v("lu(...)"),t("OutboundLink")],1),r._v(": Computes the LU decomposition of one or more square matrices.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/matmul",target:"_blank",rel:"noopener noreferrer"}},[r._v("matmul(...)"),t("OutboundLink")],1),r._v(": Multiplies matrix a by matrix b, producing a * b.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/matrix_transpose",target:"_blank",rel:"noopener noreferrer"}},[r._v("matrix_transpose(...)"),t("OutboundLink")],1),r._v(": Transposes last two dimensions of tensor a.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/matvec",target:"_blank",rel:"noopener noreferrer"}},[r._v("matvec(...)"),t("OutboundLink")],1),r._v(": Multiplies matrix a by vector b, producing a * b.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/norm",target:"_blank",rel:"noopener noreferrer"}},[r._v("norm(...)"),t("OutboundLink")],1),r._v(": Computes the norm of vectors, matrices, and tensors. (deprecated arguments)")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/normalize",target:"_blank",rel:"noopener noreferrer"}},[r._v("normalize(...)"),t("OutboundLink")],1),r._v(": Normalizes tensor along dimension axis using specified norm.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/qr",target:"_blank",rel:"noopener noreferrer"}},[r._v("qr(...)"),t("OutboundLink")],1),r._v(": Computes the QR decompositions of one or more matrices.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/set_diag",target:"_blank",rel:"noopener noreferrer"}},[r._v("set_diag(...)"),t("OutboundLink")],1),r._v(": Returns a batched matrix tensor with new batched diagonal values.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/slogdet",target:"_blank",rel:"noopener noreferrer"}},[r._v("slogdet(...)"),t("OutboundLink")],1),r._v(": Computes the sign and the log of the absolute value of the determinant of")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/solve",target:"_blank",rel:"noopener noreferrer"}},[r._v("solve(...)"),t("OutboundLink")],1),r._v(": Solves systems of linear equations.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/sqrtm",target:"_blank",rel:"noopener noreferrer"}},[r._v("sqrtm(...)"),t("OutboundLink")],1),r._v(": Computes the matrix square root of one or more square matrices:")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/svd",target:"_blank",rel:"noopener noreferrer"}},[r._v("svd(...)"),t("OutboundLink")],1),r._v(": Computes the singular value decompositions of one or more matrices.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/tensor_diag",target:"_blank",rel:"noopener noreferrer"}},[r._v("tensor_diag(...)"),t("OutboundLink")],1),r._v(": Returns a diagonal tensor with a given diagonal values.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/tensor_diag_part",target:"_blank",rel:"noopener noreferrer"}},[r._v("tensor_diag_part(...)"),t("OutboundLink")],1),r._v(": Returns the diagonal part of the tensor.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/tensordot",target:"_blank",rel:"noopener noreferrer"}},[r._v("tensordot(...)"),t("OutboundLink")],1),r._v(": Tensor contraction of a and b along specified axes.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/trace",target:"_blank",rel:"noopener noreferrer"}},[r._v("trace(...)"),t("OutboundLink")],1),r._v(": Compute the trace of a tensor x.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/matrix_transpose",target:"_blank",rel:"noopener noreferrer"}},[r._v("transpose(...)"),t("OutboundLink")],1),r._v(": Transposes last two dimensions of tensor a.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/triangular_solve",target:"_blank",rel:"noopener noreferrer"}},[r._v("triangular_solve(...)"),t("OutboundLink")],1),r._v(": Solves systems of linear equations with upper or lower triangular matrices by backsubstitution.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/tridiagonal_matmul",target:"_blank",rel:"noopener noreferrer"}},[r._v("tridiagonal_matmul(...)"),t("OutboundLink")],1),r._v(": Multiplies tridiagonal matrix by matrix.")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/linalg/tridiagonal_solve",target:"_blank",rel:"noopener noreferrer"}},[r._v("tridiagonal_solve(...)"),t("OutboundLink")],1),r._v(": Solves tridiagonal systems of equations.")])])}),[],!1,null,null,null);e.default=n.exports}}]);