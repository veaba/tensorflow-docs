(window.webpackJsonp=window.webpackJsonp||[]).push([[848],{1036:function(e,t,n){"use strict";n.r(t);var o=n(0),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[n("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/feature_column/embedding_column",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.feature_column.embedding_column"),n("OutboundLink")],1),e._v("TPU version of .")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(" tf.compat.v1.tpu.experimental.embedding_column(\n    categorical_column,\n    dimension,\n    combiner='mean',\n    initializer=None,\n    max_sequence_length=0\n)\n")])])]),n("p",[n("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/feature_column/embedding_column",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.feature_column.embedding_column"),n("OutboundLink")],1),e._v("Note that the interface for tf.tpu.experimental.embedding_column is different from that of : The following arguments are NOT supported: ckpt_to_load_from, tensor_name_in_ckpt, max_norm and trainable.")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/feature_column/embedding_column",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.feature_column.embedding_column"),n("OutboundLink")],1),e._v("Use this function in place of  when you want to use the TPU to accelerate your embedding lookups via TPU embeddings.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(" column = tf.feature_column.categorical_column_with_identity(...)\ntpu_column = tf.tpu.experimental.embedding_column(column, 10)\n...\ndef model_fn(features):\n  dense_feature = tf.keras.layers.DenseFeature(tpu_column)\n  embedded_feature = dense_feature(features)\n  ...\n\nestimator = tf.estimator.tpu.TPUEstimator(\n    model_fn=model_fn,\n    ...\n    embedding_config_spec=tf.estimator.tpu.experimental.EmbeddingConfigSpec(\n      column=[tpu_column],\n      ...))\n")])])]),n("h4",{attrs:{id:"args"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("categorical_column")]),e._v(": A categorical column returned from "),n("code",[e._v("categorical_column")]),e._v("_with_identity, "),n("code",[e._v("weighted_categorical_column")]),e._v(", "),n("code",[e._v("categorical_column")]),e._v("_with_vocabulary_file, "),n("code",[e._v("categorical_column")]),e._v("_with_vocabulary_list, "),n("code",[e._v("sequence_categorical_column_with_identity")]),e._v(", "),n("code",[e._v("sequence_categorical_column_with_vocabulary_file")]),e._v(", "),n("code",[e._v("sequence_categorical_column_with_vocabulary_list")])]),e._v(" "),n("li",[n("code",[e._v("dimension")]),e._v(": An integer specifying "),n("code",[e._v("dimension")]),e._v(" of the embedding, must be > 0.")]),e._v(" "),n("li",[n("code",[e._v("combiner")]),e._v(": A string specifying how to reduce if there are multiple entries in a single row for a non-sequence column. For more information, see "),n("code",[e._v("tf.feature_column.embedding_column")]),e._v(".")]),e._v(" "),n("li",[n("code",[e._v("initializer")]),e._v(": A variable "),n("code",[e._v("initializer")]),e._v(" function to be used in embedding variable initialization. If not specified, defaults to "),n("code",[e._v("tf.compat.v1.truncated_normal_initializer")]),e._v(" with mean "),n("code",[e._v("0.0")]),e._v(" and standard deviation 1/sqrt("),n("code",[e._v("dimension")]),e._v(").")]),e._v(" "),n("li",[n("code",[e._v("max_sequence_length")]),e._v(": An non-negative integer specifying the max sequence length. Any sequence shorter then this will be padded with 0 embeddings and any sequence longer will be truncated. This must be positive for sequence features and 0 for non-sequence features.")])]),e._v(" "),n("h4",{attrs:{id:"returns"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),n("p",[e._v("A _TPUEmbeddingColumnV2.")]),e._v(" "),n("h4",{attrs:{id:"raises"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("ValueError")]),e._v(": if "),n("code",[e._v("dimension")]),e._v(" not > 0.")]),e._v(" "),n("li",[n("code",[e._v("ValueError")]),e._v(": if "),n("code",[e._v("initializer")]),e._v(" is specified but not callable.")])])])}),[],!1,null,null,null);t.default=a.exports}}]);