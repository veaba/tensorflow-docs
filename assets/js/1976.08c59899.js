(window.webpackJsonp=window.webpackJsonp||[]).push([[1976],{2167:function(e,_,t){"use strict";t.r(_);var v=t(0),o=Object(v.a)({},(function(){var e=this,_=e.$createElement,t=e._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Converts a Keras model to dot format and save to a file.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.keras.utils.plot_model")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.keras.utils.plot_model")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.keras.utils.plot_model(\n    model,\n    to_file='model.png',\n    show_shapes=False,\n    show_layer_names=True,\n    rankdir='TB',\n    expand_nested=False,\n    dpi=96\n)\n")])])]),t("h3",{attrs:{id:"used-in-the-guide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("T")]),e._v("h"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("K")]),e._v("e"),t("code",[e._v("r")]),e._v("a"),t("code",[e._v("s")]),e._v(" "),t("code",[e._v("f")]),e._v("u"),t("code",[e._v("n")]),e._v("c"),t("code",[e._v("t")]),e._v("i"),t("code",[e._v("o")]),e._v("n"),t("code",[e._v("a")]),e._v("l"),t("code"),e._v("A"),t("code",[e._v("P")]),e._v("I"),t("code"),e._v("i"),t("code",[e._v("n")]),e._v(" "),t("code",[e._v("T")]),e._v("e"),t("code",[e._v("n")]),e._v("s"),t("code",[e._v("o")]),e._v("r"),t("code",[e._v("F")]),e._v("l"),t("code",[e._v("o")]),e._v("w``")]),e._v(" "),t("li",[t("code",[e._v("T")]),e._v("r"),t("code",[e._v("a")]),e._v("i"),t("code",[e._v("n")]),e._v(" "),t("code",[e._v("a")]),e._v("n"),t("code",[e._v("d")]),e._v(" "),t("code",[e._v("e")]),e._v("v"),t("code",[e._v("a")]),e._v("l"),t("code",[e._v("u")]),e._v("a"),t("code",[e._v("t")]),e._v("e"),t("code"),e._v("w"),t("code",[e._v("i")]),e._v("t"),t("code",[e._v("h")]),e._v(" "),t("code",[e._v("K")]),e._v("e"),t("code",[e._v("r")]),e._v("a"),t("code",[e._v("s")])])]),e._v(" "),t("h4",{attrs:{id:"arguments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("model")]),e._v(": A Keras "),t("code",[e._v("model")]),e._v(" instance")]),e._v(" "),t("li",[t("code",[e._v("to_file")]),e._v(": File name of the plot image.")]),e._v(" "),t("li",[t("code",[e._v("show_shapes")]),e._v(": whether to display shape information.")]),e._v(" "),t("li",[t("code",[e._v("show_layer_names")]),e._v(": whether to display layer names.")]),e._v(" "),t("li",[t("code",[e._v("rankdir")]),e._v(": "),t("code",[e._v("rankdir")]),e._v(" argument passed to PyDot, a string specifying the format of the plot: 'TB' creates a vertical plot; 'LR' creates a horizontal plot.")]),e._v(" "),t("li",[t("code",[e._v("expand_nested")]),e._v(": Whether to expand nested "),t("code",[e._v("model")]),e._v("s into clusters.")]),e._v(" "),t("li",[t("code",[e._v("dpi")]),e._v(": Dots per inch.")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Jupyter notebook Image object if Jupyter is installed. This enables in-line display of the model plots in notebooks.")])])}),[],!1,null,null,null);_.default=o.exports}}]);