(window.webpackJsonp=window.webpackJsonp||[]).push([[1064],{1253:function(e,t,i){"use strict";i.r(t);var a=i(0),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("p",[e._v("Get the virtual device configuration for a PhysicalDevice.")]),e._v(" "),i("h3",{attrs:{id:"aliases"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),i("ul",[i("li",[i("code",[e._v("tf.compat.v1.config.experimental.get_virtual_device_configuration")])]),e._v(" "),i("li",[i("code",[e._v("tf.compat.v2.config.experimental.get_virtual_device_configuration")])])]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v(" tf.config.experimental.get_virtual_device_configuration(device)\n")])])]),i("p",[i("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/config/experimental/set_virtual_device_configuration",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.config.experimental.set_virtual_device_configuration()"),i("OutboundLink")],1),e._v("Returns the list of VirtualDeviceConfiguration objects previously configured by a call to .")]),e._v(" "),i("h4",{attrs:{id:"for-example"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v(" physical_devices = tf.config.experimental.list_physical_devices('CPU')\nassert len(physical_devices) == 1, \"No CPUs found\"\nconfigs = tf.config.experimental.get_virtual_device_configuration(\n    physical_devices[0])\nassert configs is None\ntf.config.experimental.set_virtual_device_configuration(\n    physical_devices[0],\n    [tf.config.experimental.VirtualDeviceConfiguration(),\n     tf.config.experimental.VirtualDeviceConfiguration()])\nconfigs = tf.config.experimental.get_virtual_device_configuration(\n    physical_devices[0])\nassert len(configs) == 2\n")])])]),i("h4",{attrs:{id:"args"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),i("ul",[i("li",[i("code",[e._v("device")]),e._v(": PhysicalDevice to query")])]),e._v(" "),i("h4",{attrs:{id:"returns"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),i("p",[i("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/config/experimental/VirtualDeviceConfiguration",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.config.experimental.VirtualDeviceConfiguration"),i("OutboundLink")],1),e._v("List of  objects or None if no virtual device configuration has been set for this physical device.")])])}),[],!1,null,null,null);t.default=r.exports}}]);