(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{299:function(e,t,s){"use strict";s.r(t);var a=s(0),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Assert the condition x <= y holds element-wise.")]),e._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tf.compat.v1.debugging.assert_less_equal")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.compat.v1.assert_less_equal(\n    x,\n    y,\n    data=None,\n    summarize=None,\n    message=None,\n    name=None\n)\n")])])]),s("p",[e._v("Example of adding a dependency to an operation:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" with tf.control_dependencies([tf.compat.v1.assert_less_equal(x, y)]):\n  output = tf.reduce_sum(x)\n")])])]),s("p",[e._v("This condition holds if for every pair of (possibly broadcast) elements x[i], y[i], we have x[i] <= y[i]. If both x and y are empty, this is trivially satisfied.")]),e._v(" "),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("x")]),e._v(": Numeric "),s("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("y")]),e._v(": Numeric "),s("code",[e._v("Tensor")]),e._v(", same dt"),s("code",[e._v("y")]),e._v("pe as and broadcastable to "),s("code",[e._v("x")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("data")]),e._v(": The tensors to print out if the condition is False. Defaults to error message and first few entries of "),s("code",[e._v("x")]),e._v(", "),s("code",[e._v("y")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("summarize")]),e._v(": Print this man"),s("code",[e._v("y")]),e._v(" entries of each tensor.")]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(": A string to prefi"),s("code",[e._v("x")]),e._v(" to the default "),s("code",[e._v("message")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("name")]),e._v(": A "),s("code",[e._v("name")]),e._v(' for this operation (optional). Defaults to "assert_less_equal"')])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("Op that raises InvalidArgumentError if x <= y is False.")])])}),[],!1,null,null,null);t.default=r.exports}}]);