(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{293:function(e,t,a){"use strict";a.r(t);var s=a(0),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Returns the index with the smallest value across axes of a tensor. (deprecated arguments)")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v1.math.argmin")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.compat.v1.argmin(\n    input,\n    axis=None,\n    name=None,\n    dimension=None,\n    output_type=tf.dtypes.int64\n)\n")])])]),a("p",[e._v("Note that in case of ties the identity of the return value is not guaranteed.")]),e._v(" "),a("h4",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[e._v("#")]),e._v(" Usage:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" import tensorflow as tf\na = [1, 10, 26.9, 2.8, 166.32, 62.3]\nb = tf.math.argmin(input = a)\nc = tf.keras.backend.eval(b)\n# c = 0\n# here a[0] = 1 which is the smallest element of a across axis 0\n")])])]),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("input")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("uint8")]),e._v(", "),a("code",[e._v("int16")]),e._v(", "),a("code",[e._v("int8")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("qint8")]),e._v(", "),a("code",[e._v("quint8")]),e._v(", "),a("code",[e._v("qint32")]),e._v(", "),a("code",[e._v("bfloat16")]),e._v(", "),a("code",[e._v("uint16")]),e._v(", "),a("code",[e._v("complex128")]),e._v(", "),a("code",[e._v("half")]),e._v(", "),a("code",[e._v("uint32")]),e._v(", "),a("code",[e._v("uint64")]),e._v(".")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A Tensor of type output_type.")])])}),[],!1,null,null,null);t.default=n.exports}}]);