(window.webpackJsonp=window.webpackJsonp||[]).push([[1164],{1353:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Defined in generated file: python/ops/gen_array_ops.py")]),e._v(" "),t("p",[e._v("Checks a tensor for NaN and Inf values.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.check_numerics")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v1.debugging.check_numerics")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.debugging.check_numerics")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.debugging.check_numerics(\n    tensor,\n    message,\n    name=None\n)\n")])])]),t("p",[e._v("When run, reports an InvalidArgument error if tensor has any values that are not a number (NaN) or infinity (Inf). Otherwise, passes tensor as-is.")]),e._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tensor")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),t("code",[e._v("bfloat16")]),e._v(", "),t("code",[e._v("half")]),e._v(", "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("message")]),e._v(": A "),t("code",[e._v("string")]),e._v(". Prefix of the error "),t("code",[e._v("message")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor. Has the same type as tensor.")])])}),[],!1,null,null,null);a.default=r.exports}}]);