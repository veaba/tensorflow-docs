(window.webpackJsonp=window.webpackJsonp||[]).push([[277],{465:function(e,a,t){"use strict";t.r(a);var r=t(0),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Creates parsing spec dictionary from input feature_columns.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.compat.v1.feature_column.make_parse_example_spec(feature_columns)\n")])])]),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/parse_example",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.io.parse_example"),t("OutboundLink")],1),e._v("The returned dictionary can be used as arg 'features' in .")]),e._v(" "),t("h4",{attrs:{id:"typical-usage-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#typical-usage-example","aria-hidden":"true"}},[e._v("#")]),e._v(" Typical usage example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' # Define features and transformations\nfeature_a = categorical_column_with_vocabulary_file(...)\nfeature_b = numeric_column(...)\nfeature_c_bucketized = bucketized_column(numeric_column("feature_c"), ...)\nfeature_a_x_feature_c = crossed_column(\n    columns=["feature_a", feature_c_bucketized], ...)\n\nfeature_columns = set(\n    [feature_b, feature_c_bucketized, feature_a_x_feature_c])\nfeatures = tf.io.parse_example(\n    serialized=serialized_examples,\n    features=make_parse_example_spec(feature_columns))\n')])])]),t("p",[e._v("For the above example, make_parse_example_spec would return the dict:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' {\n    "feature_a": parsing_ops.VarLenFeature(tf.string),\n    "feature_b": parsing_ops.FixedLenFeature([1], dtype=tf.float32),\n    "feature_c": parsing_ops.FixedLenFeature([1], dtype=tf.float32)\n}\n')])])]),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("feature_columns")]),e._v(": An iterable containing all feature columns. All items should be instances of classes derived from "),t("code",[e._v("_FeatureColumn")]),e._v(".")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A dict mapping each feature key to a FixedLenFeature or VarLenFeature value.")]),e._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ValueError")]),e._v(": If any of the given "),t("code",[e._v("feature_columns")]),e._v(" is not a "),t("code",[e._v("_FeatureColumn")]),e._v(" instance.")])])])}),[],!1,null,null,null);a.default=s.exports}}]);