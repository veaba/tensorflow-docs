(window.webpackJsonp=window.webpackJsonp||[]).push([[2259],{2447:function(a,e,t){"use strict";t.r(e);var _=t(0),o=Object(_.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("Defined in generated file: python/ops/gen_array_ops.py")]),a._v(" "),t("p",[a._v("Compute gradients for a FakeQuantWithMinMaxVars operation.")]),a._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("tf.compat.v1.fake_quant_with_min_max_vars_gradient")])]),a._v(" "),t("li",[t("code",[a._v("tf.compat.v1.quantization.fake_quant_with_min_max_vars_gradient")])]),a._v(" "),t("li",[t("code",[a._v("tf.compat.v2.quantization.fake_quant_with_min_max_vars_gradient")])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" tf.quantization.fake_quant_with_min_max_vars_gradient(\n    gradients,\n    inputs,\n    min,\n    max,\n    num_bits=8,\n    narrow_range=False,\n    name=None\n)\n")])])]),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[a._v("#")]),a._v(" Args:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("gradients")]),a._v(": A "),t("code",[a._v("Tensor")]),a._v(" of type "),t("code",[a._v("float32")]),a._v(". Backpropagated "),t("code",[a._v("gradients")]),a._v(" above the FakeQuantWithMinMaxVars operation.")]),a._v(" "),t("li",[t("code",[a._v("inputs")]),a._v(": A "),t("code",[a._v("Tensor")]),a._v(" of type "),t("code",[a._v("float32")]),a._v(". Values passed as "),t("code",[a._v("inputs")]),a._v(" to the FakeQuantWithMinMaxVars operation. min, max: Quantization interval, scalar floats.")]),a._v(" "),t("li",[t("code",[a._v("min")]),a._v(": A "),t("code",[a._v("Tensor")]),a._v(" of type "),t("code",[a._v("float32")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("max")]),a._v(": A "),t("code",[a._v("Tensor")]),a._v(" of type "),t("code",[a._v("float32")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("num_bits")]),a._v(": An optional "),t("code",[a._v("int")]),a._v(". Defaults to "),t("code",[a._v("8")]),a._v(". The bitwidth of the quantization; between 2 and "),t("code",[a._v("8")]),a._v(", inclusive.")]),a._v(" "),t("li",[t("code",[a._v("narrow_range")]),a._v(": An optional "),t("code",[a._v("bool")]),a._v(". Defaults to "),t("code",[a._v("False")]),a._v(". Whether to quantize "),t("code",[a._v("int")]),a._v("o 2^"),t("code",[a._v("num_bits")]),a._v(" - 1 distinct values.")]),a._v(" "),t("li",[t("code",[a._v("name")]),a._v(": A "),t("code",[a._v("name")]),a._v(" for the operation (optional).")])]),a._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns:")]),a._v(" "),t("p",[a._v("A tuple of Tensor objects (backprops_wrt_input, backprop_wrt_min, backprop_wrt_max).")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("backprops_wrt_input")]),a._v(": A "),t("code",[a._v("Tensor")]),a._v(" of type "),t("code",[a._v("float32")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("backprop_wrt_min")]),a._v(": A "),t("code",[a._v("Tensor")]),a._v(" of type "),t("code",[a._v("float32")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("backprop_wrt_max")]),a._v(": A "),t("code",[a._v("Tensor")]),a._v(" of type "),t("code",[a._v("float32")]),a._v(".")])])])}),[],!1,null,null,null);e.default=o.exports}}]);