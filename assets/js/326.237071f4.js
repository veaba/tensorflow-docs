(window.webpackJsonp=window.webpackJsonp||[]).push([[326],{514:function(a,e,l){"use strict";l.r(e);var s=l(0),t=Object(s.a)({},(function(){var a=this,e=a.$createElement,l=a._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[l("p",[a._v("Declares one flag as key to the current module.")]),a._v(" "),l("h3",{attrs:{id:"aliases"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),l("ul",[l("li",[l("code",[a._v("tf.compat.v1.app.flags.declare_key_flag")])])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v(" tf.compat.v1.flags.declare_key_flag(\n    flag_name,\n    flag_values=_flagvalues.FLAGS\n)\n")])])]),l("p",[a._v("Key flags are flags that are deemed really important for a module. They are important when listing help messages; e.g., if the --helpshort command-line flag is used, then only the key flags of the main module are listed (instead of all flags, as in the case of --helpfull).")]),a._v(" "),l("h4",{attrs:{id:"sample-usage"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#sample-usage","aria-hidden":"true"}},[a._v("#")]),a._v(" Sample usage:")]),a._v(" "),l("p",[a._v("flags.declare_key_flag('flag_1')")]),a._v(" "),l("h4",{attrs:{id:"args"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[a._v("#")]),a._v(" Args:")]),a._v(" "),l("ul",[l("li",[l("code",[a._v("flag_name")]),a._v(": str, the name of an already declared flag. (Redeclaring flags as key, including flags implicitly key because they were declared in this module, is a no-op.)")]),a._v(" "),l("li",[l("code",[a._v("flag_values")]),a._v(": FlagValues, the FlagValues instance in which the flag will be declared as a key flag. This should almost never need to be overridden.")])]),a._v(" "),l("h4",{attrs:{id:"raises"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[a._v("#")]),a._v(" Raises:")]),a._v(" "),l("ul",[l("li",[l("code",[a._v("ValueError")]),a._v(": Raised if flag_name not defined as a Python flag.")])])])}),[],!1,null,null,null);e.default=t.exports}}]);