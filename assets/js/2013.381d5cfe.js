(window.webpackJsonp=window.webpackJsonp||[]).push([[2013],{2202:function(t,e,a){"use strict";a.r(e);var s=a(0),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Computes the global norm of multiple tensors.")]),t._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("tf.compat.v1.global_norm")])]),t._v(" "),a("li",[a("code",[t._v("tf.compat.v1.linalg.global_norm")])]),t._v(" "),a("li",[a("code",[t._v("tf.compat.v2.linalg.global_norm")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" tf.linalg.global_norm(\n    t_list,\n    name=None\n)\n")])])]),a("p",[t._v("Given a tuple or list of tensors t_list, this operation returns the global norm of the elements in all tensors in t_list. The global norm is computed as:")]),t._v(" "),a("p",[t._v("global_norm = sqrt(sum([l2norm(t)**2 for t in t_list]))")]),t._v(" "),a("p",[t._v("Any entries in t_list that are of type None are ignored.")]),t._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("t_list")]),t._v(": A tuple or list of mixed "),a("code",[t._v("Tensors")]),t._v(", "),a("code",[t._v("IndexedSlices")]),t._v(", or None.")]),t._v(" "),a("li",[a("code",[t._v("name")]),t._v(": A "),a("code",[t._v("name")]),t._v(" for the operation (optional).")])]),t._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),a("p",[t._v("A 0-D (scalar) Tensor of type float.")]),t._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[t._v("#")]),t._v(" Raises:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("TypeError")]),t._v(": If "),a("code",[t._v("t_list")]),t._v(" is not a sequence.")])])])}),[],!1,null,null,null);e.default=r.exports}}]);