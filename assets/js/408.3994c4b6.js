(window.webpackJsonp=window.webpackJsonp||[]).push([[408],{597:function(e,r,o){"use strict";o.r(r);var t=o(0),n=Object(t.a)({},(function(){var e=this,r=e.$createElement,o=e._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("Public API for tf.io namespace.")]),e._v(" "),o("h2",{attrs:{id:"modules"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#modules","aria-hidden":"true"}},[e._v("#")]),e._v(" Modules")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/io/gfile",target:"_blank",rel:"noopener noreferrer"}},[e._v("gfile"),o("OutboundLink")],1),e._v(" module: Public API for tf.io. namespace.")]),e._v(" "),o("h2",{attrs:{id:"classes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#classes","aria-hidden":"true"}},[e._v("#")]),e._v(" Classes")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/FixedLenFeature",target:"_blank",rel:"noopener noreferrer"}},[e._v("class FixedLenFeature"),o("OutboundLink")],1),e._v(": Configuration for parsing a fixed-length input feature.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/FixedLenSequenceFeature",target:"_blank",rel:"noopener noreferrer"}},[e._v("class FixedLenSequenceFeature"),o("OutboundLink")],1),e._v(": Configuration for parsing a variable-length input feature into a Tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/queue/PaddingFIFOQueue",target:"_blank",rel:"noopener noreferrer"}},[e._v("class PaddingFIFOQueue"),o("OutboundLink")],1),e._v(": A FIFOQueue that supports batching variable-sized tensors by padding.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/queue/PriorityQueue",target:"_blank",rel:"noopener noreferrer"}},[e._v("class PriorityQueue"),o("OutboundLink")],1),e._v(": A queue implementation that dequeues elements in prioritized order.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/queue/QueueBase",target:"_blank",rel:"noopener noreferrer"}},[e._v("class QueueBase"),o("OutboundLink")],1),e._v(": Base class for queue implementations.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/queue/RandomShuffleQueue",target:"_blank",rel:"noopener noreferrer"}},[e._v("class RandomShuffleQueue"),o("OutboundLink")],1),e._v(": A queue implementation that dequeues elements in a random order.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/SparseFeature",target:"_blank",rel:"noopener noreferrer"}},[e._v("class SparseFeature"),o("OutboundLink")],1),e._v(": Configuration for parsing a sparse input feature from an Example.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/io/TFRecordCompressionType",target:"_blank",rel:"noopener noreferrer"}},[e._v("class TFRecordCompressionType"),o("OutboundLink")],1),e._v(": The type of compression for the record.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/TFRecordOptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("class TFRecordOptions"),o("OutboundLink")],1),e._v(": Options used for manipulating TFRecord files.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/TFRecordWriter",target:"_blank",rel:"noopener noreferrer"}},[e._v("class TFRecordWriter"),o("OutboundLink")],1),e._v(": A class to write records to a TFRecords file.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/VarLenFeature",target:"_blank",rel:"noopener noreferrer"}},[e._v("class VarLenFeature"),o("OutboundLink")],1),e._v(": Configuration for parsing a variable-length input feature.")]),e._v(" "),o("h2",{attrs:{id:"functions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#functions","aria-hidden":"true"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_and_crop_jpeg",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_and_crop_jpeg(...)"),o("OutboundLink")],1),e._v(": Decode and Crop a JPEG-encoded image to a uint8 tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_base64",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_base64(...)"),o("OutboundLink")],1),e._v(": Decode web-safe base64-encoded strings.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_bmp",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_bmp(...)"),o("OutboundLink")],1),e._v(": Decode the first frame of a BMP-encoded image to a uint8 tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_compressed",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_compressed(...)"),o("OutboundLink")],1),e._v(": Decompress strings.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/decode_csv",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_csv(...)"),o("OutboundLink")],1),e._v(": Convert CSV records to tensors. Each column maps to one tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_gif",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_gif(...)"),o("OutboundLink")],1),e._v(": Decode the frame(s) of a GIF-encoded image to a uint8 tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_image",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_image(...)"),o("OutboundLink")],1),e._v(": Function for decode_bmp, decode_gif, decode_jpeg, and decode_png.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_jpeg",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_jpeg(...)"),o("OutboundLink")],1),e._v(": Decode a JPEG-encoded image to a uint8 tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_json_example",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_json_example(...)"),o("OutboundLink")],1),e._v(": Convert JSON-encoded Example records to binary protocol buffer strings.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_png",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_png(...)"),o("OutboundLink")],1),e._v(": Decode a PNG-encoded image to a uint8 or uint16 tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_proto",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_proto(...)"),o("OutboundLink")],1),e._v(": The op extracts fields from a serialized protocol buffers message into tensors.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/decode_raw",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_raw(...)"),o("OutboundLink")],1),e._v(": Convert raw byte strings into tensors. (deprecated arguments)")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/deserialize_many_sparse",target:"_blank",rel:"noopener noreferrer"}},[e._v("deserialize_many_sparse(...)"),o("OutboundLink")],1),e._v(": Deserialize and concatenate SparseTensors from a serialized minibatch.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/encode_base64",target:"_blank",rel:"noopener noreferrer"}},[e._v("encode_base64(...)"),o("OutboundLink")],1),e._v(": Encode strings into web-safe base64 format.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/encode_jpeg",target:"_blank",rel:"noopener noreferrer"}},[e._v("encode_jpeg(...)"),o("OutboundLink")],1),e._v(": JPEG-encode an image.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/encode_proto",target:"_blank",rel:"noopener noreferrer"}},[e._v("encode_proto(...)"),o("OutboundLink")],1),e._v(": The op serializes protobuf messages provided in the input tensors.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/extract_jpeg_shape",target:"_blank",rel:"noopener noreferrer"}},[e._v("extract_jpeg_shape(...)"),o("OutboundLink")],1),e._v(": Extract the shape information of a JPEG-encoded image.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/is_jpeg",target:"_blank",rel:"noopener noreferrer"}},[e._v("is_jpeg(...)"),o("OutboundLink")],1),e._v(": Convenience function to check if the 'contents' encodes a JPEG image.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/match_filenames_once",target:"_blank",rel:"noopener noreferrer"}},[e._v("match_filenames_once(...)"),o("OutboundLink")],1),e._v(": Save the list of files matching pattern, so it is only computed once.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/matching_files",target:"_blank",rel:"noopener noreferrer"}},[e._v("matching_files(...)"),o("OutboundLink")],1),e._v(": Returns the set of files matching one or more glob patterns.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/parse_example",target:"_blank",rel:"noopener noreferrer"}},[e._v("parse_example(...)"),o("OutboundLink")],1),e._v(": Parses Example protos into a dict of tensors.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/parse_sequence_example",target:"_blank",rel:"noopener noreferrer"}},[e._v("parse_sequence_example(...)"),o("OutboundLink")],1),e._v(": Parses a batch of SequenceExample protos.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/parse_single_example",target:"_blank",rel:"noopener noreferrer"}},[e._v("parse_single_example(...)"),o("OutboundLink")],1),e._v(": Parses a single Example proto.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/parse_single_sequence_example",target:"_blank",rel:"noopener noreferrer"}},[e._v("parse_single_sequence_example(...)"),o("OutboundLink")],1),e._v(": Parses a single SequenceExample proto.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/parse_tensor",target:"_blank",rel:"noopener noreferrer"}},[e._v("parse_tensor(...)"),o("OutboundLink")],1),e._v(": Transforms a serialized tensorflow.TensorProto proto into a Tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/read_file",target:"_blank",rel:"noopener noreferrer"}},[e._v("read_file(...)"),o("OutboundLink")],1),e._v(": Reads and outputs the entire contents of the input filename.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/serialize_many_sparse",target:"_blank",rel:"noopener noreferrer"}},[e._v("serialize_many_sparse(...)"),o("OutboundLink")],1),e._v(": Serialize N-minibatch SparseTensor into an [N, 3] Tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/serialize_sparse",target:"_blank",rel:"noopener noreferrer"}},[e._v("serialize_sparse(...)"),o("OutboundLink")],1),e._v(": Serialize a SparseTensor into a 3-vector (1-D Tensor) object.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/serialize_tensor",target:"_blank",rel:"noopener noreferrer"}},[e._v("serialize_tensor(...)"),o("OutboundLink")],1),e._v(": Transforms a Tensor into a serialized TensorProto proto.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/io/tf_record_iterator",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf_record_iterator(...)"),o("OutboundLink")],1),e._v(": An iterator that read the records from a TFRecords file. (deprecated)")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/write_file",target:"_blank",rel:"noopener noreferrer"}},[e._v("write_file(...)"),o("OutboundLink")],1),e._v(": Writes contents to the file at input filename. Creates file and recursively")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/write_graph",target:"_blank",rel:"noopener noreferrer"}},[e._v("write_graph(...)"),o("OutboundLink")],1),e._v(": Writes a graph proto to a file.")])])}),[],!1,null,null,null);r.default=n.exports}}]);