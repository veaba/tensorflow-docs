(window.webpackJsonp=window.webpackJsonp||[]).push([[492],{681:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"class-dropout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-dropout","aria-hidden":"true"}},[e._v("#")]),e._v(" Class Dropout")]),e._v(" "),a("p",[e._v("Applies Dropout to the input.\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/keras/layers/Dropout",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dropout"),a("OutboundLink")],1),e._v("Inherits From: , Layer")]),e._v(" "),a("p",[e._v("Dropout consists in randomly setting a fraction rate of input units to 0 at each update during training time, which helps prevent overfitting. The units that are kept are scaled by 1 / (1 - rate), so that their sum is unchanged at training time and inference time.")]),e._v(" "),a("h4",{attrs:{id:"arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("rate")]),e._v(": The dropout "),a("code",[e._v("rate")]),e._v(", between 0 and 1. E.g. "),a("code",[e._v("rate")]),e._v("=0.1 would drop out 10% of input units.")]),e._v(" "),a("li",[a("code",[e._v("noise_shape")]),e._v(": 1D tensor of type "),a("code",[e._v("int32")]),e._v(" representing the shape of the binary dropout mask that will be multiplied with the input. For instance, if your inputs have shape ("),a("code",[e._v("batch_size, timesteps, features")]),e._v("), and you want the dropout mask to be the same for all timesteps, you can use "),a("code",[e._v("noise_shape")]),e._v("=[batch_size, 1, features].")]),e._v(" "),a("li",[a("code",[e._v("seed")]),e._v(": A Python integer. Used to create random "),a("code",[e._v("seed")]),e._v("s. See "),a("code",[e._v("tf.compat.v1.set_random_seed")]),e._v(". for behavior.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": The "),a("code",[e._v("name")]),e._v(" of the layer (string).")])]),e._v(" "),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("init")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/layers/core.py#L214-L223",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __init__(\n    rate=0.5,\n    noise_shape=None,\n    seed=None,\n    name=None,\n    **kwargs\n)\n")])])]),a("h2",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),a("h3",{attrs:{id:"graph"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#graph","aria-hidden":"true"}},[e._v("#")]),e._v(" graph")]),e._v(" "),a("p",[e._v("DEPRECATED FUNCTION")]),e._v(" "),a("h3",{attrs:{id:"scope-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scope-name","aria-hidden":"true"}},[e._v("#")]),e._v(" scope_name")])])}),[],!1,null,null,null);t.default=s.exports}}]);