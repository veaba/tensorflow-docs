(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{401:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"class-dirichletmultinomial"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-dirichletmultinomial","aria-hidden":"true"}},[e._v("#")]),e._v(" Class DirichletMultinomial")]),e._v(" "),a("p",[e._v("Dirichlet-Multinomial compound distribution.\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/distributions/Distribution",target:"_blank",rel:"noopener noreferrer"}},[e._v("Distribution"),a("OutboundLink")],1),e._v("Inherits From:")]),e._v(" "),a("p",[e._v("The Dirichlet-Multinomial distribution is parameterized by a (batch of) length-K concentration vectors (K > 1) and a total_count number of trials, i.e., the number of trials per draw from the DirichletMultinomial. It is defined over a (batch of) length-K vector counts such that tf.reduce_sum(counts, -1) = total_count. The Dirichlet-Multinomial is identically the Beta-Binomial distribution when K = 2.")]),e._v(" "),a("h4",{attrs:{id:"mathematical-details"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mathematical-details","aria-hidden":"true"}},[e._v("#")]),e._v(" Mathematical Details")]),e._v(" "),a("p",[e._v("The Dirichlet-Multinomial is a distribution over K-class counts, i.e., a length-K vector of non-negative integer counts = n = [n_0, ..., n_{K-1}].")]),e._v(" "),a("p",[e._v("The probability mass function (pmf) is,")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" pmf(n; alpha, N) = Beta(alpha + n) / (prod_j n_j!) / Z\nZ = Beta(alpha) / N!\n")])])]),a("p",[e._v("where:\n"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Compound_probability_distribution",target:"_blank",rel:"noopener noreferrer"}},[e._v("compound distribution"),a("OutboundLink")],1),e._v("Dirichlet-Multinomial is a , i.e., its samples are generated as follows.")]),e._v(" "),a("p",[e._v("The last concentration dimension parametrizes a single Dirichlet-Multinomial distribution. When calling distribution functions (e.g., dist.prob(counts)), concentration, total_count and counts are broadcast to the same shape. The last dimension of counts corresponds single Dirichlet-Multinomial distributions.")]),e._v(" "),a("p",[e._v("Distribution parameters are automatically broadcast in all functions; see examples for details.")]),e._v(" "),a("h4",{attrs:{id:"pitfalls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pitfalls","aria-hidden":"true"}},[e._v("#")]),e._v(" Pitfalls")]),e._v(" "),a("p",[e._v("The number of classes, K, must not exceed: - the largest integer representable by self.dtype, i.e., 2**(mantissa_bits+1) (IEE754), - the maximum Tensor index, i.e., 2**31-1.")]),e._v(" "),a("p",[e._v("In other words,")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" K <= min(2**31-1, {\n  tf.float16: 2**11,\n  tf.float32: 2**24,\n  tf.float64: 2**53 }[param.dtype])\n")])])]),a("h4",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" alpha = [1., 2., 3.]\nn = 2.\ndist = DirichletMultinomial(n, alpha)\n")])])]),a("p",[e._v("Creates a 3-class distribution, with the 3rd class is most likely to be drawn. The distribution functions can be evaluated on counts.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" # counts same shape as alpha.\ncounts = [0., 0., 2.]\ndist.prob(counts)  # Shape []\n\n# alpha will be broadcast to [[1., 2., 3.], [1., 2., 3.]] to match counts.\ncounts = [[1., 1., 0.], [1., 0., 1.]]\ndist.prob(counts)  # Shape [2]\n\n# alpha will be broadcast to shape [5, 7, 3] to match counts.\ncounts = [[...]]  # Shape [5, 7, 3]\ndist.prob(counts)  # Shape [5, 7]\n")])])]),a("p",[e._v("Creates a 2-batch of 3-class distributions.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" alpha = [[1., 2., 3.], [4., 5., 6.]]  # Shape [2, 3]\nn = [3., 3.]\ndist = DirichletMultinomial(n, alpha)\n\n# counts will be broadcast to [[2., 1., 0.], [2., 1., 0.]] to match alpha.\ncounts = [2., 1., 0.]\ndist.prob(counts)  # Shape [2]\n")])])]),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("init")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/dirichlet_multinomial.py#L167-L231",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __init__(\n    total_count,\n    concentration,\n    validate_args=False,\n    allow_nan_stats=True,\n    name='DirichletMultinomial'\n)\n")])])]),a("p",[e._v("Initialize a batch of DirichletMultinomial distributions. (deprecated)")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("total_count")]),e._v(":"),a("code",[e._v("``N")]),e._v("on-negative"),a("code"),e._v("floating"),a("code"),e._v("point"),a("code"),e._v("tensor"),a("code",[e._v(",``")]),e._v("whose"),a("code"),e._v("dtype"),a("code"),e._v("is"),a("code"),e._v("the"),a("code"),e._v("sa"),a("code",[e._v("m")]),e._v("e"),a("code"),e._v("as"),a("code",[e._v("``concentration``.``")]),e._v("The"),a("code"),e._v("shape"),a("code"),e._v("is"),a("code"),e._v("broadcastable"),a("code"),e._v("to"),a("code"),e._v("["),a("code",[e._v("N``1``,``.``.``.``,`` ``N``m")]),e._v("]"),a("code"),e._v("with"),a("code",[e._v("``m``")]),e._v(">="),a("code"),e._v("0"),a("code",[e._v(".``")]),e._v("Defines"),a("code"),e._v("this"),a("code"),e._v("as"),a("code"),e._v("a"),a("code"),e._v("batch"),a("code"),e._v("of"),a("code",[e._v("``N``1``")]),e._v("x"),a("code",[e._v("``.``.``.``")]),e._v("x"),a("code",[e._v("``N``m``")]),e._v("different"),a("code"),e._v("Dirichlet"),a("code",[e._v("``m")]),e._v("ultino"),a("code",[e._v("m")]),e._v("ial"),a("code"),e._v("distributions"),a("code",[e._v(".``")]),e._v("Its"),a("code"),e._v("co"),a("code",[e._v("m")]),e._v("ponents"),a("code"),e._v("should"),a("code"),e._v("be"),a("code"),e._v("equal"),a("code"),e._v("to"),a("code"),e._v("integer"),a("code"),e._v("values"),a("code",[e._v(".")])]),e._v(" "),a("li",[a("code",[e._v("concentration")]),e._v(":"),a("code"),e._v("Positive"),a("code"),e._v("floati"),a("code",[e._v("n")]),e._v("g"),a("code"),e._v("poi"),a("code",[e._v("n")]),e._v("t"),a("code"),e._v("te"),a("code",[e._v("n")]),e._v("sor"),a("code",[e._v(",``")]),e._v("whose"),a("code"),e._v("dtype"),a("code"),e._v("is"),a("code"),e._v("the"),a("code"),e._v("sa"),a("code",[e._v("m")]),e._v("e"),a("code"),e._v("as"),a("code",[e._v("``n``")]),e._v("with"),a("code"),e._v("shape"),a("code"),e._v("broadcastable"),a("code"),e._v("to"),a("code"),e._v("["),a("code",[e._v("N``1``,``.``.``.``,`` ``N``m``,`` ``K")]),e._v("]"),a("code",[e._v("``m``")]),e._v(">="),a("code"),e._v("0"),a("code",[e._v(".``")]),e._v("Defi"),a("code",[e._v("n")]),e._v("es"),a("code"),e._v("this"),a("code"),e._v("as"),a("code"),e._v("a"),a("code"),e._v("batch"),a("code"),e._v("of"),a("code",[e._v("``N``1``")]),e._v("x"),a("code",[e._v("``.``.``.``")]),e._v("x"),a("code",[e._v("``N``m``")]),e._v("differe"),a("code",[e._v("n")]),e._v("t"),a("code",[e._v("``K``")]),e._v("class"),a("code"),e._v("Dirichlet"),a("code",[e._v("``m")]),e._v("ulti"),a("code",[e._v("n")]),e._v("o"),a("code",[e._v("m")]),e._v("ial"),a("code"),e._v("distributio"),a("code",[e._v("n")]),e._v("s"),a("code",[e._v(".")])]),e._v(" "),a("li",[a("code",[e._v("validate_args")]),e._v(":"),a("code"),e._v("Pytho"),a("code",[e._v("n`` ``bool``,``")]),e._v("default"),a("code",[e._v("``False``.``")]),e._v("Whe"),a("code",[e._v("n`` ``True``")]),e._v("distributio"),a("code",[e._v("n``")]),e._v("para"),a("code",[e._v("m")]),e._v("eters"),a("code"),e._v("are"),a("code"),e._v("checked"),a("code"),e._v("for"),a("code"),e._v("validity"),a("code"),e._v("despite"),a("code"),e._v("possibly"),a("code"),e._v("degradi"),a("code",[e._v("n")]),e._v("g"),a("code"),e._v("ru"),a("code",[e._v("n")]),e._v("ti"),a("code",[e._v("m")]),e._v("e"),a("code"),e._v("perfor"),a("code",[e._v("m")]),e._v("a"),a("code",[e._v("n")]),e._v("ce"),a("code",[e._v(".``")]),e._v("Whe"),a("code",[e._v("n`` ``False``")]),e._v("i"),a("code",[e._v("n")]),e._v("valid"),a("code"),e._v("i"),a("code",[e._v("n")]),e._v("puts"),a("code",[e._v("``m")]),e._v("ay"),a("code"),e._v("sile"),a("code",[e._v("n")]),e._v("tly"),a("code"),e._v("re"),a("code",[e._v("n")]),e._v("der"),a("code"),e._v("i"),a("code",[e._v("n")]),e._v("correct"),a("code"),e._v("outputs"),a("code",[e._v(".")])]),e._v(" "),a("li",[a("code",[e._v("allow_nan_stats")]),e._v(":"),a("code"),e._v("Pytho"),a("code",[e._v("n`` ``bool``,``")]),e._v("default"),a("code",[e._v("``True``.``")]),e._v("Whe"),a("code",[e._v("n`` ``True``,``")]),e._v("statistics"),a("code"),e._v("(e"),a("code",[e._v(".")]),e._v("g"),a("code",[e._v(".``,`` ``m")]),e._v("ea"),a("code",[e._v("n``,`` ``m")]),e._v("ode"),a("code",[e._v(",``")]),e._v("varia"),a("code",[e._v("n")]),e._v("ce)"),a("code"),e._v("use"),a("code"),e._v("the"),a("code"),e._v("value"),a("code"),e._v('"'),a("code",[e._v("N")]),e._v("a"),a("code",[e._v("N")]),e._v('"'),a("code"),e._v("to"),a("code"),e._v("i"),a("code",[e._v("n")]),e._v("dicate"),a("code"),e._v("the"),a("code"),e._v("result"),a("code"),e._v("is"),a("code"),e._v("u"),a("code",[e._v("n")]),e._v("defi"),a("code",[e._v("n")]),e._v("ed"),a("code",[e._v(".``")]),e._v("Whe"),a("code",[e._v("n`` ``False``,``")]),e._v("a"),a("code",[e._v("n``")]),e._v("exceptio"),a("code",[e._v("n``")]),e._v("is"),a("code"),e._v("raised"),a("code"),e._v("if"),a("code"),e._v("o"),a("code",[e._v("n")]),e._v("e"),a("code"),e._v("or"),a("code",[e._v("``m")]),e._v("ore"),a("code"),e._v("of"),a("code"),e._v("the"),a("code"),e._v("statistic's"),a("code"),e._v("batch"),a("code",[e._v("``m")]),e._v("e"),a("code",[e._v("m")]),e._v("bers"),a("code"),e._v("are"),a("code"),e._v("u"),a("code",[e._v("n")]),e._v("defi"),a("code",[e._v("n")]),e._v("ed"),a("code",[e._v(".")])]),e._v(" "),a("li",[a("code",[e._v("n")]),e._v("a"),a("code",[e._v("m")]),e._v("e:"),a("code"),e._v("Pytho"),a("code",[e._v("n`` ``str`` ``n")]),e._v("a"),a("code",[e._v("m")]),e._v("e"),a("code"),e._v("prefixed"),a("code"),e._v("to"),a("code"),e._v("Ops"),a("code"),e._v("created"),a("code"),e._v("by"),a("code"),e._v("this"),a("code"),e._v("class"),a("code",[e._v(".")])])]),e._v(" "),a("h2",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),a("h3",{attrs:{id:"allow-nan-stats"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#allow-nan-stats","aria-hidden":"true"}},[e._v("#")]),e._v(" allow_nan_stats")]),e._v(" "),a("p",[e._v("Python bool describing behavior when a stat is undefined.")]),e._v(" "),a("p",[e._v("Stats return +/- infinity when it makes sense. E.g., the variance of a Cauchy distribution is infinity. However, sometimes the statistic is undefined, e.g., if a distribution's pdf does not achieve a maximum within the support of the distribution, the mode is undefined. If the mean is undefined, then by definition the variance is undefined. E.g. the mean for Student's T for df = 1 is undefined (no clear way to say it is either + or - infinity), so the variance = E[(X - mean)**2] is also undefined.")]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("allow_nan_stats")]),e._v(": Python "),a("code",[e._v("bool")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"batch-shape"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#batch-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" batch_shape")]),e._v(" "),a("p",[e._v("Shape of a single sample from a single event index as a TensorShape.")]),e._v(" "),a("p",[e._v("May be partially defined or unknown.")]),e._v(" "),a("p",[e._v("The batch dimensions are indexes into independent, non-identical parameterizations of this distribution.")]),e._v(" "),a("h4",{attrs:{id:"returns-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("batch_shape")]),e._v(": "),a("code",[e._v("TensorShape")]),e._v(", possibly unknown.")])]),e._v(" "),a("h3",{attrs:{id:"concentration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concentration","aria-hidden":"true"}},[e._v("#")]),e._v(" concentration")]),e._v(" "),a("p",[e._v("Concentration parameter; expected prior counts for that coordinate.")]),e._v(" "),a("h3",{attrs:{id:"dtype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dtype","aria-hidden":"true"}},[e._v("#")]),e._v(" dtype")]),e._v(" "),a("p",[e._v("The DType of Tensors handled by this Distribution.")]),e._v(" "),a("h3",{attrs:{id:"event-shape"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" event_shape")]),e._v(" "),a("p",[e._v("Shape of a single sample from a single batch as a TensorShape.")]),e._v(" "),a("p",[e._v("May be partially defined or unknown.")]),e._v(" "),a("h4",{attrs:{id:"returns-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("event_shape")]),e._v(": "),a("code",[e._v("TensorShape")]),e._v(", possibly unknown.")])]),e._v(" "),a("h3",{attrs:{id:"name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#name","aria-hidden":"true"}},[e._v("#")]),e._v(" name")]),e._v(" "),a("p",[e._v("Name prepended to all ops created by this Distribution.")]),e._v(" "),a("h3",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters","aria-hidden":"true"}},[e._v("#")]),e._v(" parameters")]),e._v(" "),a("p",[e._v("Dictionary of parameters used to instantiate this Distribution.")]),e._v(" "),a("h3",{attrs:{id:"reparameterization-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reparameterization-type","aria-hidden":"true"}},[e._v("#")]),e._v(" reparameterization_type")]),e._v(" "),a("p",[e._v("Describes how samples from the distribution are reparameterized.")]),e._v(" "),a("p",[e._v("Currently this is one of the static instances distributions.FULLY_REPARAMETERIZED or distributions.NOT_REPARAMETERIZED.")]),e._v(" "),a("h4",{attrs:{id:"returns-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("An instance of ReparameterizationType.")]),e._v(" "),a("h3",{attrs:{id:"total-concentration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#total-concentration","aria-hidden":"true"}},[e._v("#")]),e._v(" total_concentration")]),e._v(" "),a("p",[e._v("Sum of last dim of concentration parameter.")]),e._v(" "),a("h3",{attrs:{id:"total-count"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#total-count","aria-hidden":"true"}},[e._v("#")]),e._v(" total_count")]),e._v(" "),a("p",[e._v("Number of trials used to construct a sample.")]),e._v(" "),a("h3",{attrs:{id:"validate-args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validate-args","aria-hidden":"true"}},[e._v("#")]),e._v(" validate_args")]),e._v(" "),a("p",[e._v("Python bool indicating possibly expensive checks are enabled.")]),e._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),a("h3",{attrs:{id:"batch-shape-tensor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#batch-shape-tensor","aria-hidden":"true"}},[e._v("#")]),e._v(" batch_shape_tensor")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L637-L654",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" batch_shape_tensor(name='batch_shape_tensor')\n")])])]),a("p",[e._v("Shape of a single sample from a single event index as a 1-D Tensor.")]),e._v(" "),a("p",[e._v("The batch dimensions are indexes into independent, non-identical parameterizations of this distribution.")]),e._v(" "),a("h4",{attrs:{id:"args-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": "),a("code",[e._v("name")]),e._v(" to give to the op")])]),e._v(" "),a("h4",{attrs:{id:"returns-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("batch_shape")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"cdf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdf","aria-hidden":"true"}},[e._v("#")]),e._v(" cdf")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L881-L898",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" cdf(\n    value,\n    name='cdf'\n)\n")])])]),a("p",[e._v("Cumulative distribution function.")]),e._v(" "),a("p",[e._v("Given random variable X, the cumulative distribution function cdf is:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" cdf(x) := P[X <= x]\n")])])]),a("h4",{attrs:{id:"args-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("value")]),e._v(": "),a("code",[e._v("float")]),e._v(" or "),a("code",[e._v("double")]),e._v(" "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("cdf")]),e._v(": a "),a("code",[e._v("Tensor")]),e._v(" of shape sample_shape(x) + self.batch_shape with values of type "),a("code",[e._v("self.dtype")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"copy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copy","aria-hidden":"true"}},[e._v("#")]),e._v(" copy")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L615-L631",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" copy(**override_parameters_kwargs)\n")])])]),a("p",[e._v("Creates a deep copy of the distribution.")]),e._v(" "),a("h4",{attrs:{id:"args-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("h4",{attrs:{id:"returns-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("h3",{attrs:{id:"covariance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#covariance","aria-hidden":"true"}},[e._v("#")]),e._v(" covariance")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1094-L1131",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" covariance(name='covariance')\n")])])]),a("p",[e._v("Covariance.")]),e._v(" "),a("p",[e._v("Covariance is (possibly) defined only for non-scalar-event distributions.")]),e._v(" "),a("p",[e._v("For example, for a length-k, vector-valued distribution, it is calculated as,")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" Cov[i, j] = Covariance(X_i, X_j) = E[(X_i - E[X_i]) (X_j - E[X_j])]\n")])])]),a("p",[e._v("where Cov is a (batch of) k x k matrix, 0 <= (i, j) < k, and E denotes expectation.")]),e._v(" "),a("p",[e._v("Alternatively, for non-vector, multivariate distributions (e.g., matrix-valued, Wishart), Covariance shall return a (batch of) matrices under some vectorization of the events, i.e.,")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" Cov[i, j] = Covariance(Vec(X)_i, Vec(X)_j) = [as above]\n")])])]),a("p",[e._v("where Cov is a (batch of) k' x k' matrices, 0 <= (i, j) < k' = reduce_prod(event_shape), and Vec is some function mapping indices of this distribution's event dimensions to indices of a length-k' vector.")]),e._v(" "),a("p",[e._v("Additional documentation from DirichletMultinomial:")]),e._v(" "),a("p",[e._v("The covariance for each batch member is defined as the following:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" Var(X_j) = n * alpha_j / alpha_0 * (1 - alpha_j / alpha_0) *\n(n + alpha_0) / (1 + alpha_0)\n")])])]),a("p",[e._v("where concentration = alpha and total_concentration = alpha_0 = sum_j alpha_j.")]),e._v(" "),a("p",[e._v("The covariance between elements in a batch is defined as:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" Cov(X_i, X_j) = -n * alpha_i * alpha_j / alpha_0 ** 2 *\n(n + alpha_0) / (1 + alpha_0)\n")])])]),a("h4",{attrs:{id:"args-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("covariance")]),e._v(":"),a("code"),e._v("Floati"),a("code",[e._v("n")]),e._v("g-poi"),a("code",[e._v("n")]),e._v("t"),a("code",[e._v("``Tensor``")]),e._v("with"),a("code"),e._v("shape"),a("code"),e._v("["),a("code",[e._v("B``1``,`` ``.``.``.``,`` ``B``n``,`` ``k``'``,`` ``k``'")]),e._v("]"),a("code"),e._v("where"),a("code"),e._v("the"),a("code"),e._v("first"),a("code",[e._v("``n``")]),e._v("dime"),a("code",[e._v("n")]),e._v("sio"),a("code",[e._v("n")]),e._v("s"),a("code"),e._v("are"),a("code"),e._v("batch"),a("code"),e._v("coordi"),a("code",[e._v("n")]),e._v("ates"),a("code"),e._v("a"),a("code",[e._v("n")]),e._v("d"),a("code",[e._v("``k``'``")]),e._v("="),a("code"),e._v("reduce_prod(self"),a("code",[e._v(".")]),e._v("eve"),a("code",[e._v("n")]),e._v("t_shape)"),a("code",[e._v(".")])])]),e._v(" "),a("h3",{attrs:{id:"cross-entropy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cross-entropy","aria-hidden":"true"}},[e._v("#")]),e._v(" cross_entropy")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1146-L1169",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" cross_entropy(\n    other,\n    name='cross_entropy'\n)\n")])])]),a("p",[e._v("Computes the (Shannon) cross entropy.")]),e._v(" "),a("p",[e._v("Denote this distribution (self) by P and the other distribution by Q. Assuming P, Q are absolutely continuous with respect to one another and permit densities p(x) dr(x) and q(x) dr(x), (Shanon) cross entropy is defined as:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" H[P, Q] = E_p[-log q(X)] = -int_F p(x) log q(x) dr(x)\n")])])]),a("p",[e._v("where F denotes the support of the random variable X ~ P.")]),e._v(" "),a("h4",{attrs:{id:"args-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("other")]),e._v(": "),a("code",[e._v("tfp.distributions.Distribution")]),e._v(" instance.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("cross_entropy")]),e._v(":"),a("code",[e._v("``self.dtype`` ``Tensor``")]),e._v("with"),a("code"),e._v("shape"),a("code"),e._v("["),a("code",[e._v("B``1``,`` ``.``.``.``,`` ``B``n")]),e._v("]"),a("code"),e._v("represe"),a("code",[e._v("n")]),e._v("ti"),a("code",[e._v("n")]),e._v("g"),a("code",[e._v("``n``")]),e._v("differe"),a("code",[e._v("n")]),e._v("t"),a("code"),e._v("calculatio"),a("code",[e._v("n")]),e._v("s"),a("code"),e._v("of"),a("code"),e._v("(Sha"),a("code",[e._v("n")]),e._v("o"),a("code",[e._v("n")]),e._v(")"),a("code"),e._v("cross"),a("code"),e._v("e"),a("code",[e._v("n")]),e._v("tropy"),a("code",[e._v(".")])])]),e._v(" "),a("h3",{attrs:{id:"entropy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entropy","aria-hidden":"true"}},[e._v("#")]),e._v(" entropy")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L982-L985",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" entropy(name='entropy')\n")])])]),a("p",[e._v("Shannon entropy in nats.")]),e._v(" "),a("h3",{attrs:{id:"event-shape-tensor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-shape-tensor","aria-hidden":"true"}},[e._v("#")]),e._v(" event_shape_tensor")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L677-L691",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" event_shape_tensor(name='event_shape_tensor')\n")])])]),a("p",[e._v("Shape of a single sample from a single batch as a 1-D int32 Tensor.")]),e._v(" "),a("h4",{attrs:{id:"args-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": "),a("code",[e._v("name")]),e._v(" to give to the op")])]),e._v(" "),a("h4",{attrs:{id:"returns-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("event_shape")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"is-scalar-batch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#is-scalar-batch","aria-hidden":"true"}},[e._v("#")]),e._v(" is_scalar_batch")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L721-L733",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" is_scalar_batch(name='is_scalar_batch')\n")])])]),a("p",[e._v("Indicates that batch_shape == [].")]),e._v(" "),a("h4",{attrs:{id:"args-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("is_scalar_batch")]),e._v(": "),a("code",[e._v("bool")]),e._v(" scalar "),a("code",[e._v("Tensor")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"is-scalar-event"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#is-scalar-event","aria-hidden":"true"}},[e._v("#")]),e._v(" is_scalar_event")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L707-L719",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" is_scalar_event(name='is_scalar_event')\n")])])]),a("p",[e._v("Indicates that event_shape == [].")]),e._v(" "),a("h4",{attrs:{id:"args-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("is_scalar_event")]),e._v(": "),a("code",[e._v("bool")]),e._v(" scalar "),a("code",[e._v("Tensor")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"kl-divergence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kl-divergence","aria-hidden":"true"}},[e._v("#")]),e._v(" kl_divergence")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1175-L1201",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" kl_divergence(\n    other,\n    name='kl_divergence'\n)\n")])])]),a("p",[e._v("Computes the Kullback--Leibler divergence.")]),e._v(" "),a("p",[e._v("Denote this distribution (self) by p and the other distribution by q. Assuming p, q are absolutely continuous with respect to reference measure r, the KL divergence is defined as:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" KL[p, q] = E_p[log(p(X)/q(X))]\n         = -int_F p(x) log q(x) dr(x) + int_F p(x) log p(x) dr(x)\n         = H[p, q] - H[p]\n")])])]),a("p",[e._v("where F denotes the support of the random variable X ~ p, H[., .] denotes (Shanon) cross entropy, and H[.] denotes (Shanon) entropy.")]),e._v(" "),a("h4",{attrs:{id:"args-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("other")]),e._v(": "),a("code",[e._v("tfp.distributions.Distribution")]),e._v(" instance.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("kl_divergence")]),e._v(":"),a("code",[e._v("``self.dtype`` ``Tensor``")]),e._v("with"),a("code"),e._v("shape"),a("code"),e._v("["),a("code",[e._v("B``1``,`` ``.``.``.``,`` ``B``n")]),e._v("]"),a("code"),e._v("represe"),a("code",[e._v("n")]),e._v("ti"),a("code",[e._v("n")]),e._v("g"),a("code",[e._v("``n``")]),e._v("differe"),a("code",[e._v("n")]),e._v("t"),a("code"),e._v("calculatio"),a("code",[e._v("n")]),e._v("s"),a("code"),e._v("of"),a("code"),e._v("the"),a("code"),e._v("Kullback-Leibler"),a("code"),e._v("diverge"),a("code",[e._v("n")]),e._v("ce"),a("code",[e._v(".")])])]),e._v(" "),a("h3",{attrs:{id:"log-cdf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log-cdf","aria-hidden":"true"}},[e._v("#")]),e._v(" log_cdf")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L842-L863",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" log_cdf(\n    value,\n    name='log_cdf'\n)\n")])])]),a("p",[e._v("Log cumulative distribution function.")]),e._v(" "),a("p",[e._v("Given random variable X, the cumulative distribution function cdf is:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" log_cdf(x) := Log[ P[X <= x] ]\n")])])]),a("p",[e._v("Often, a numerical approximation can be used for log_cdf(x) that yields a more accurate answer than simply taking the logarithm of the cdf when x << -1.")]),e._v(" "),a("h4",{attrs:{id:"args-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("value")]),e._v(": "),a("code",[e._v("float")]),e._v(" or "),a("code",[e._v("double")]),e._v(" "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("logcdf")]),e._v(": a "),a("code",[e._v("Tensor")]),e._v(" of shape sample_shape(x) + self.batch_shape with values of type "),a("code",[e._v("self.dtype")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"log-prob"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log-prob","aria-hidden":"true"}},[e._v("#")]),e._v(" log_prob")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L784-L795",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" log_prob(\n    value,\n    name='log_prob'\n)\n")])])]),a("p",[e._v("Log probability density/mass function.")]),e._v(" "),a("p",[e._v("Additional documentation from DirichletMultinomial:\n"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Exchangeable_random_variables",target:"_blank",rel:"noopener noreferrer"}},[e._v("exchangeable"),a("OutboundLink")],1),e._v("For each batch of counts, value = [n_0, ..., n_{K-1}], P[value] is the probability that after sampling self.total_count draws from this Dirichlet-Multinomial distribution, the number of draws falling in class j is n_j. Since this definition is ; different sequences have the same counts so the probability includes a combinatorial coefficient.")]),e._v(" "),a("h4",{attrs:{id:"args-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("value")]),e._v(": "),a("code",[e._v("float")]),e._v(" or "),a("code",[e._v("double")]),e._v(" "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("log_prob")]),e._v(": a "),a("code",[e._v("Tensor")]),e._v(" of shape sample_shape(x) + self.batch_shape with values of type "),a("code",[e._v("self.dtype")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"log-survival-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log-survival-function","aria-hidden":"true"}},[e._v("#")]),e._v(" log_survival_function")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L917-L939",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" log_survival_function(\n    value,\n    name='log_survival_function'\n)\n")])])]),a("p",[e._v("Log survival function.")]),e._v(" "),a("p",[e._v("Given random variable X, the survival function is defined:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" log_survival_function(x) = Log[ P[X > x] ]\n                         = Log[ 1 - P[X <= x] ]\n                         = Log[ 1 - cdf(x) ]\n")])])]),a("p",[e._v("Typically, different numerical approximations can be used for the log survival function, which are more accurate than 1 - cdf(x) when x >> 1.")]),e._v(" "),a("h4",{attrs:{id:"args-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("value")]),e._v(": "),a("code",[e._v("float")]),e._v(" or "),a("code",[e._v("double")]),e._v(" "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("Tensor of shape sample_shape(x) + self.batch_shape with values of type self.dtype.")]),e._v(" "),a("h3",{attrs:{id:"mean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mean","aria-hidden":"true"}},[e._v("#")]),e._v(" mean")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L991-L994",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" mean(name='mean')\n")])])]),a("p",[e._v("Mean.")]),e._v(" "),a("h3",{attrs:{id:"mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mode","aria-hidden":"true"}},[e._v("#")]),e._v(" mode")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1137-L1140",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" mode(name='mode')\n")])])]),a("p",[e._v("Mode.")]),e._v(" "),a("h3",{attrs:{id:"param-shapes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#param-shapes","aria-hidden":"true"}},[e._v("#")]),e._v(" param_shapes")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L497-L516",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" param_shapes(\n    cls,\n    sample_shape,\n    name='DistributionParamShapes'\n)\n")])])]),a("p",[e._v("Shapes of parameters given the desired shape of a call to sample().")]),e._v(" "),a("p",[e._v("This is a class method that describes what key/value arguments are required to instantiate the given Distribution so that a particular shape is returned for that instance's call to sample().")]),e._v(" "),a("p",[e._v("Subclasses should override class method _param_shapes.")]),e._v(" "),a("h4",{attrs:{id:"args-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("sample_shape")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(" or python list/tuple. Desired shape of a call to "),a("code",[e._v("sample")]),e._v("().")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": "),a("code",[e._v("name")]),e._v(" to prepend ops with.")])]),e._v(" "),a("h4",{attrs:{id:"returns-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-17","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("dict of parameter name to Tensor shapes.")]),e._v(" "),a("h3",{attrs:{id:"param-static-shapes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#param-static-shapes","aria-hidden":"true"}},[e._v("#")]),e._v(" param_static_shapes")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L518-L555",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" param_static_shapes(\n    cls,\n    sample_shape\n)\n")])])]),a("p",[e._v("param_shapes with static (i.e. TensorShape) shapes.")]),e._v(" "),a("p",[e._v("This is a class method that describes what key/value arguments are required to instantiate the given Distribution so that a particular shape is returned for that instance's call to sample(). Assumes that the sample's shape is known statically.")]),e._v(" "),a("p",[e._v("Subclasses should override class method _param_shapes to return constant-valued tensors when constant values are fed.")]),e._v(" "),a("h4",{attrs:{id:"args-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("sample_shape")]),e._v(": "),a("code",[e._v("TensorShape")]),e._v(" or python list/tuple. Desired shape of a call to "),a("code",[e._v("sample")]),e._v("().")])]),e._v(" "),a("h4",{attrs:{id:"returns-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-18","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("dict of parameter name to TensorShape.")]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": if "),a("code",[e._v("sample_shape")]),e._v(" is a "),a("code",[e._v("TensorShape")]),e._v(" and is not fully defined.")])]),e._v(" "),a("h3",{attrs:{id:"prob"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prob","aria-hidden":"true"}},[e._v("#")]),e._v(" prob")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L813-L824",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" prob(\n    value,\n    name='prob'\n)\n")])])]),a("p",[e._v("Probability density/mass function.")]),e._v(" "),a("p",[e._v("Additional documentation from DirichletMultinomial:\n"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Exchangeable_random_variables",target:"_blank",rel:"noopener noreferrer"}},[e._v("exchangeable"),a("OutboundLink")],1),e._v("For each batch of counts, value = [n_0, ..., n_{K-1}], P[value] is the probability that after sampling self.total_count draws from this Dirichlet-Multinomial distribution, the number of draws falling in class j is n_j. Since this definition is ; different sequences have the same counts so the probability includes a combinatorial coefficient.")]),e._v(" "),a("h4",{attrs:{id:"args-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("value")]),e._v(": "),a("code",[e._v("float")]),e._v(" or "),a("code",[e._v("double")]),e._v(" "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-19","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("prob")]),e._v(": a "),a("code",[e._v("Tensor")]),e._v(" of shape sample_shape(x) + self.batch_shape with values of type "),a("code",[e._v("self.dtype")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"quantile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quantile","aria-hidden":"true"}},[e._v("#")]),e._v(" quantile")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1006-L1023",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" quantile(\n    value,\n    name='quantile'\n)\n")])])]),a("p",[e._v('Quantile function. Aka "inverse cdf" or "percent point function".')]),e._v(" "),a("p",[e._v("Given random variable X and p in [0, 1], the quantile is:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" quantile(p) := x such that P[X <= x] == p\n")])])]),a("h4",{attrs:{id:"args-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-17","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("value")]),e._v(": "),a("code",[e._v("float")]),e._v(" or "),a("code",[e._v("double")]),e._v(" "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-20","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("quantile")]),e._v(": a "),a("code",[e._v("Tensor")]),e._v(" of shape sample_shape(x) + self.batch_shape with values of type "),a("code",[e._v("self.dtype")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"sample"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sample","aria-hidden":"true"}},[e._v("#")]),e._v(" sample")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L752-L766",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" sample(\n    sample_shape=(),\n    seed=None,\n    name='sample'\n)\n")])])]),a("p",[e._v("Generate samples of the specified shape.")]),e._v(" "),a("p",[e._v("Note that a call to sample() without arguments will generate a single sample.")]),e._v(" "),a("h4",{attrs:{id:"args-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-18","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("sample_shape")]),e._v(": 0D or 1D "),a("code",[e._v("int32")]),e._v(" "),a("code",[e._v("Tensor")]),e._v(". Shape of the generated samples.")]),e._v(" "),a("li",[a("code",[e._v("seed")]),e._v(": Python integer "),a("code",[e._v("seed")]),e._v(" for RNG")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": "),a("code",[e._v("name")]),e._v(" to give to the op.")])]),e._v(" "),a("h4",{attrs:{id:"returns-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-21","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("samples")]),e._v(": a "),a("code",[e._v("Tensor")]),e._v(" with prepended dimensions "),a("code",[e._v("sample_shape")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"stddev"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stddev","aria-hidden":"true"}},[e._v("#")]),e._v(" stddev")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1061-L1088",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" stddev(name='stddev')\n")])])]),a("p",[e._v("Standard deviation.")]),e._v(" "),a("p",[e._v("Standard deviation is defined as,")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" stddev = E[(X - E[X])**2]**0.5\n")])])]),a("p",[e._v("where X is the random variable associated with this distribution, E denotes expectation, and stddev.shape = batch_shape + event_shape.")]),e._v(" "),a("h4",{attrs:{id:"args-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-19","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-22"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-22","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("stddev")]),e._v(": Floating-point "),a("code",[e._v("Tensor")]),e._v(" with shape identical to batch_shape + event_shape, i.e., the same shape as "),a("code",[e._v("self.mean")]),e._v("().")])]),e._v(" "),a("h3",{attrs:{id:"survival-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#survival-function","aria-hidden":"true"}},[e._v("#")]),e._v(" survival_function")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L957-L976",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" survival_function(\n    value,\n    name='survival_function'\n)\n")])])]),a("p",[e._v("Survival function.")]),e._v(" "),a("p",[e._v("Given random variable X, the survival function is defined:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" survival_function(x) = P[X > x]\n                     = 1 - P[X <= x]\n                     = 1 - cdf(x).\n")])])]),a("h4",{attrs:{id:"args-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-20","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("value")]),e._v(": "),a("code",[e._v("float")]),e._v(" or "),a("code",[e._v("double")]),e._v(" "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-23"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-23","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("Tensor of shape sample_shape(x) + self.batch_shape with values of type self.dtype.")]),e._v(" "),a("h3",{attrs:{id:"variance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variance","aria-hidden":"true"}},[e._v("#")]),e._v(" variance")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/distributions/distribution.py#L1029-L1055",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" variance(name='variance')\n")])])]),a("p",[e._v("Variance.")]),e._v(" "),a("p",[e._v("Variance is defined as,")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" Var = E[(X - E[X])**2]\n")])])]),a("p",[e._v("where X is the random variable associated with this distribution, E denotes expectation, and Var.shape = batch_shape + event_shape.")]),e._v(" "),a("h4",{attrs:{id:"args-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-21","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": Python "),a("code",[e._v("str")]),e._v(" prepended to "),a("code",[e._v("name")]),e._v("s of ops created by this function.")])]),e._v(" "),a("h4",{attrs:{id:"returns-24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-24","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("variance")]),e._v(": Floating-point "),a("code",[e._v("Tensor")]),e._v(" with shape identical to batch_shape + event_shape, i.e., the same shape as "),a("code",[e._v("self.mean")]),e._v("().")])])])}),[],!1,null,null,null);t.default=r.exports}}]);