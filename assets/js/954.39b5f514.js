(window.webpackJsonp=window.webpackJsonp||[]).push([[954],{1141:function(e,t,a){"use strict";a.r(t);var o=a(0),r=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Creates a tensor with all elements set to zero.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.compat.v1.zeros_like(\n    tensor,\n    dtype=None,\n    name=None,\n    optimize=True\n)\n")])])]),a("p",[e._v("Given a single tensor (tensor), this operation returns a tensor of the same type and shape as tensor with all elements set to zero. Optionally, you can use dtype to specify a new type for the returned tensor.")]),e._v(" "),a("h4",{attrs:{id:"for-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tensor = tf.constant([[1, 2, 3], [4, 5, 6]])\ntf.zeros_like(tensor)  # [[0, 0, 0], [0, 0, 0]]\n")])])]),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tensor")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("dtype")]),e._v(": A type for the returned "),a("code",[e._v("Tensor")]),e._v(". Must be "),a("code",[e._v("float16")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int8")]),e._v(", "),a("code",[e._v("uint8")]),e._v(", "),a("code",[e._v("int16")]),e._v(", "),a("code",[e._v("uint16")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", "),a("code",[e._v("complex128")]),e._v(", "),a("code",[e._v("bool")]),e._v(" or "),a("code",[e._v("string")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")]),e._v(" "),a("li",[a("code",[e._v("optimize")]),e._v(": if true, attempt to statically determine the shape of '"),a("code",[e._v("tensor")]),e._v("' and encode it as a constant.")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A Tensor with all elements set to zero.")])])}),[],!1,null,null,null);t.default=r.exports}}]);