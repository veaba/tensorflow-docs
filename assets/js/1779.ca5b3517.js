(window.webpackJsonp=window.webpackJsonp||[]).push([[1779],{1971:function(a,t,s){"use strict";s.r(t);var e=s(0),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"class-maximum"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-maximum","aria-hidden":"true"}},[a._v("#")]),a._v(" Class Maximum")]),a._v(" "),s("p",[a._v("Layer that computes the maximum (element-wise) a list of inputs.")]),a._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),s("ul",[s("li",[a._v("Class "),s("code",[a._v("tf.compat.v1.keras.layers.Maximum")])]),a._v(" "),s("li",[a._v("Class "),s("code",[a._v("tf.compat.v2.keras.layers.Maximum")])])]),a._v(" "),s("p",[a._v("It takes as input a list of tensors, all of the same shape, and returns a single tensor (also of the same shape).")]),a._v(" "),s("h2",{attrs:{id:"init"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("strong",[a._v("init")])]),a._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/merge.py#L41-L43",target:"_blank",rel:"noopener noreferrer"}},[a._v("View source"),s("OutboundLink")],1)]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(" __init__(**kwargs)\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);