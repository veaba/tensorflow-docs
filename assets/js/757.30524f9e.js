(window.webpackJsonp=window.webpackJsonp||[]).push([[757],{945:function(e,t,s){"use strict";s.r(t);var o=s(0),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Convenience function to build a SavedModel suitable for serving. (deprecated)")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.compat.v1.saved_model.simple_save(\n    session,\n    export_dir,\n    inputs,\n    outputs,\n    legacy_init_op=None\n)\n")])])]),s("p",[e._v("In many common cases, saving models for serving will be as simple as:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(' simple_save(session,\n            export_dir,\n            inputs={"x": x, "y": y},\n            outputs={"z": z})\n')])])]),s("p",[s("a",{attrs:{href:"https://github.com/tensorflow/serving/blob/master/tensorflow_serving/apis/predict.proto",target:"_blank",rel:"noopener noreferrer"}},[e._v("Predict API"),s("OutboundLink")],1),e._v("Although in many cases it's not necessary to understand all of the many ways to configure a SavedModel, this method has a few practical implications: - It will be treated as a graph for inference / serving (i.e. uses the tag saved_model.SERVING) - The SavedModel will load in TensorFlow Serving and supports the . To use the Classify, Regress, or MultiInference APIs, please use either tf.Estimator or the lower level SavedModel APIs. - Some TensorFlow ops depend on information on disk or other information called \"assets\". These are generally handled automatically by adding the assets to the GraphKeys.ASSET_FILEPATHS collection. Only assets in that collection are exported; if you need more custom behavior, you'll need to use the SavedModelBuilder.")]),e._v(" "),s("p",[e._v("More information about SavedModel and signatures can be found here: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md.")]),e._v(" "),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("session")]),e._v(": The TensorFlow "),s("code",[e._v("session")]),e._v(" from which to save the meta graph and variables.")]),e._v(" "),s("li",[s("code",[e._v("export_dir")]),e._v(": The path to which the SavedModel will be stored.")]),e._v(" "),s("li",[s("code",[e._v("inputs")]),e._v(": dict mapping string input names to tensors. These are added to the SignatureDef as the "),s("code",[e._v("inputs")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("outputs")]),e._v(": dict mapping string output names to tensors. These are added to the SignatureDef as the "),s("code",[e._v("outputs")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("legacy_init_op")]),e._v(": Legacy support for op or group of ops to execute after the restore op upon a load.")])])])}),[],!1,null,null,null);t.default=a.exports}}]);