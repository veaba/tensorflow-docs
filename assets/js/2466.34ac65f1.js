(window.webpackJsonp=window.webpackJsonp||[]).push([[2466],{2654:function(t,e,r){"use strict";r.r(e);var a=r(0),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("Returns CheckpointReader for checkpoint found in ckpt_dir_or_file.")]),t._v(" "),r("h3",{attrs:{id:"aliases"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("tf.compat.v1.train.load_checkpoint")])]),t._v(" "),r("li",[r("code",[t._v("tf.compat.v2.train.load_checkpoint")])])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(" tf.train.load_checkpoint(ckpt_dir_or_file)\n")])])]),r("p",[t._v("If ckpt_dir_or_file resolves to a directory with multiple checkpoints, reader for the latest checkpoint is returned.")]),t._v(" "),r("h4",{attrs:{id:"args"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("ckpt_dir_or_file")]),t._v(": Directory with checkpoints file or path to checkpoint file.")])]),t._v(" "),r("h4",{attrs:{id:"returns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),r("p",[t._v("CheckpointReader object.")]),t._v(" "),r("h4",{attrs:{id:"raises"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[t._v("#")]),t._v(" Raises:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("ValueError")]),t._v(": If "),r("code",[t._v("ckpt_dir_or_file")]),t._v(" resolves to a directory with no checkpoints.")])])])}),[],!1,null,null,null);e.default=i.exports}}]);