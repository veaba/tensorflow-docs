(window.webpackJsonp=window.webpackJsonp||[]).push([[2512],{2703:function(e,v,_){"use strict";_.r(v);var o=_(0),t=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[e._v("Creates a constant tensor.")]),e._v(" "),_("h3",{attrs:{id:"aliases"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("tf.compat.v2.constant")])])]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" tf.constant(\n    value,\n    dtype=None,\n    shape=None,\n    name='Const'\n)\n")])])]),_("h3",{attrs:{id:"used-in-the-guide"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("B")]),e._v("e"),_("code",[e._v("t")]),e._v("t"),_("code",[e._v("e")]),e._v("r"),_("code"),e._v("p"),_("code",[e._v("e")]),e._v("r"),_("code",[e._v("f")]),e._v("o"),_("code",[e._v("r")]),e._v("m"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("c")]),e._v("e"),_("code"),e._v("w"),_("code",[e._v("i")]),e._v("t"),_("code",[e._v("h")]),e._v(" "),_("code",[e._v("t")]),e._v("f"),_("code",[e._v(".")]),e._v("f"),_("code",[e._v("u")]),e._v("n"),_("code",[e._v("c")]),e._v("t"),_("code",[e._v("i")]),e._v("o"),_("code",[e._v("n")]),e._v(" "),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("d")]),e._v(" "),_("code",[e._v("A")]),e._v("u"),_("code",[e._v("t")]),e._v("o"),_("code",[e._v("G")]),e._v("r"),_("code",[e._v("a")]),e._v("p"),_("code",[e._v("h")])]),e._v(" "),_("li",[_("code",[e._v("E")]),e._v("a"),_("code",[e._v("g")]),e._v("e"),_("code",[e._v("r")]),e._v(" "),_("code",[e._v("e")]),e._v("x"),_("code",[e._v("e")]),e._v("c"),_("code",[e._v("u")]),e._v("t"),_("code",[e._v("i")]),e._v("o"),_("code",[e._v("n")])]),e._v(" "),_("li",[_("code",[e._v("R")]),e._v("a"),_("code",[e._v("g")]),e._v("g"),_("code",[e._v("e")]),e._v("d"),_("code"),e._v("t"),_("code",[e._v("e")]),e._v("n"),_("code",[e._v("s")]),e._v("o"),_("code",[e._v("r")]),e._v("s``")]),e._v(" "),_("li",[_("code",[e._v("U")]),e._v("s"),_("code",[e._v("e")]),e._v(" "),_("code",[e._v("a")]),e._v(" "),_("code",[e._v("G")]),e._v("P"),_("code",[e._v("U")])]),e._v(" "),_("li",[_("code",[e._v("U")]),e._v("s"),_("code",[e._v("i")]),e._v("n"),_("code",[e._v("g")]),e._v(" "),_("code",[e._v("t")]),e._v("h"),_("code",[e._v("e")]),e._v(" "),_("code",[e._v("S")]),e._v("a"),_("code",[e._v("v")]),e._v("e"),_("code",[e._v("d")]),e._v("M"),_("code",[e._v("o")]),e._v("d"),_("code",[e._v("e")]),e._v("l"),_("code"),e._v("f"),_("code",[e._v("o")]),e._v("r"),_("code",[e._v("m")]),e._v("a"),_("code",[e._v("t")])])]),e._v(" "),_("h3",{attrs:{id:"used-in-the-tutorials"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("A")]),e._v("u"),_("code",[e._v("t")]),e._v("o"),_("code",[e._v("m")]),e._v("a"),_("code",[e._v("t")]),e._v("i"),_("code",[e._v("c")]),e._v(" "),_("code",[e._v("d")]),e._v("i"),_("code",[e._v("f")]),e._v("f"),_("code",[e._v("e")]),e._v("r"),_("code",[e._v("e")]),e._v("n"),_("code",[e._v("t")]),e._v("i"),_("code",[e._v("a")]),e._v("t"),_("code",[e._v("i")]),e._v("o"),_("code",[e._v("n")]),e._v(" "),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("d")]),e._v(" "),_("code",[e._v("g")]),e._v("r"),_("code",[e._v("a")]),e._v("d"),_("code",[e._v("i")]),e._v("e"),_("code",[e._v("n")]),e._v("t"),_("code"),e._v("t"),_("code",[e._v("a")]),e._v("p"),_("code",[e._v("e")])]),e._v(" "),_("li",[_("code",[e._v("B")]),e._v("e"),_("code",[e._v("t")]),e._v("t"),_("code",[e._v("e")]),e._v("r"),_("code"),e._v("p"),_("code",[e._v("e")]),e._v("r"),_("code",[e._v("f")]),e._v("o"),_("code",[e._v("r")]),e._v("m"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("c")]),e._v("e"),_("code"),e._v("w"),_("code",[e._v("i")]),e._v("t"),_("code",[e._v("h")]),e._v(" "),_("code",[e._v("t")]),e._v("f"),_("code",[e._v(".")]),e._v("f"),_("code",[e._v("u")]),e._v("n"),_("code",[e._v("c")]),e._v("t"),_("code",[e._v("i")]),e._v("o"),_("code",[e._v("n")])]),e._v(" "),_("li",[_("code",[e._v("D")]),e._v("e"),_("code",[e._v("e")]),e._v("p"),_("code",[e._v("D")]),e._v("r"),_("code",[e._v("e")]),e._v("a"),_("code",[e._v("m")])]),e._v(" "),_("li",[_("code",[e._v("L")]),e._v("o"),_("code",[e._v("a")]),e._v("d"),_("code"),e._v("a"),_("code"),e._v("p"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("d")]),e._v("a"),_("code",[e._v("s")]),e._v("."),_("code",[e._v("D")]),e._v("a"),_("code",[e._v("t")]),e._v("a"),_("code",[e._v("F")]),e._v("r"),_("code",[e._v("a")]),e._v("m"),_("code",[e._v("e")])]),e._v(" "),_("li",[_("code",[e._v("N")]),e._v("e"),_("code",[e._v("u")]),e._v("r"),_("code",[e._v("a")]),e._v("l"),_("code"),e._v("s"),_("code",[e._v("t")]),e._v("y"),_("code",[e._v("l")]),e._v("e"),_("code"),e._v("t"),_("code",[e._v("r")]),e._v("a"),_("code",[e._v("n")]),e._v("s"),_("code",[e._v("f")]),e._v("e"),_("code",[e._v("r")])]),e._v(" "),_("li",[_("code",[e._v("T")]),e._v("F"),_("code",[e._v("R")]),e._v("e"),_("code",[e._v("c")]),e._v("o"),_("code",[e._v("r")]),e._v("d"),_("code"),e._v("a"),_("code",[e._v("n")]),e._v("d"),_("code"),e._v("t"),_("code",[e._v("f")]),e._v("."),_("code",[e._v("E")]),e._v("x"),_("code",[e._v("a")]),e._v("m"),_("code",[e._v("p")]),e._v("l"),_("code",[e._v("e")])]),e._v(" "),_("li",[_("code",[e._v("T")]),e._v("r"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("s")]),e._v("f"),_("code",[e._v("o")]),e._v("r"),_("code",[e._v("m")]),e._v("e"),_("code",[e._v("r")]),e._v(" "),_("code",[e._v("m")]),e._v("o"),_("code",[e._v("d")]),e._v("e"),_("code",[e._v("l")]),e._v(" "),_("code",[e._v("f")]),e._v("o"),_("code",[e._v("r")]),e._v(" "),_("code",[e._v("l")]),e._v("a"),_("code",[e._v("n")]),e._v("g"),_("code",[e._v("u")]),e._v("a"),_("code",[e._v("g")]),e._v("e"),_("code"),e._v("u"),_("code",[e._v("n")]),e._v("d"),_("code",[e._v("e")]),e._v("r"),_("code",[e._v("s")]),e._v("t"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("d")]),e._v("i"),_("code",[e._v("n")]),e._v("g``")]),e._v(" "),_("li",[_("code",[e._v("U")]),e._v("n"),_("code",[e._v("i")]),e._v("c"),_("code",[e._v("o")]),e._v("d"),_("code",[e._v("e")]),e._v(" "),_("code",[e._v("s")]),e._v("t"),_("code",[e._v("r")]),e._v("i"),_("code",[e._v("n")]),e._v("g"),_("code",[e._v("s")])]),e._v(" "),_("li",[_("code",[e._v("W")]),e._v("o"),_("code",[e._v("r")]),e._v("d"),_("code"),e._v("e"),_("code",[e._v("m")]),e._v("b"),_("code",[e._v("e")]),e._v("d"),_("code",[e._v("d")]),e._v("i"),_("code",[e._v("n")]),e._v("g"),_("code",[e._v("s")]),e._v("\nThe resulting tensor is populated with "),_("code",[e._v("value")]),e._v("s of type "),_("code",[e._v("dtype")]),e._v(", as specified by arguments "),_("code",[e._v("value")]),e._v(" and (optionally) "),_("code",[e._v("shape")]),e._v(" (see examples below).\nThe argument "),_("code",[e._v("value")]),e._v(" can be a constant "),_("code",[e._v("value")]),e._v(", or a list of "),_("code",[e._v("value")]),e._v("s of type "),_("code",[e._v("dtype")]),e._v(". If "),_("code",[e._v("value")]),e._v(" is a list, then the length of the list must be less than or equal to the number of elements implied by the "),_("code",[e._v("shape")]),e._v(" argument (if specified). In the case where the list length is less than the number of elements specified by "),_("code",[e._v("shape")]),e._v(", the last element in the list will be used to fill the remaining entries.\nThe argument "),_("code",[e._v("shape")]),e._v(" is optional. If present, it specifies the dimensions of the resulting tensor. If not present, the "),_("code",[e._v("shape")]),e._v(" of "),_("code",[e._v("value")]),e._v(" is used.\nIf the argument "),_("code",[e._v("dtype")]),e._v(" is not specified, then the type is inferred from the type of "),_("code",[e._v("value")]),e._v(".")])]),e._v(" "),_("h4",{attrs:{id:"for-example"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" # Constant 1-D Tensor populated with value list.\ntensor = tf.constant([1, 2, 3, 4, 5, 6]) => [1 2 3 4 5 6]\n\n# Constant 1-D Tensor populated with value list.\ntensor = tf.constant([1, 2, 3, 4, 5, 6], shape=(2,3))\n     => [[1 2 3], [4 5 6]]\n\n# Constant 2-D tensor populated with scalar value -1.\ntensor = tf.constant(-1.0, shape=[2, 3]) => [[-1. -1. -1.]\n                                             [-1. -1. -1.]]\n")])])]),_("p",[_("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/constant",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.constant"),_("OutboundLink")],1),e._v(" differs from tf.fill in a few ways:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("tf.constant")]),e._v(" supports arbitrary constants, not just uniform scalar Tensors like "),_("code",[e._v("tf.fill")]),e._v(".")]),e._v(" "),_("li",[_("code",[e._v("tf.constant")]),e._v(" creates a "),_("code",[e._v("Const")]),e._v(" node in the computation graph with the exact value at graph construction time. On the other hand, "),_("code",[e._v("tf.fill")]),e._v(" creates an Op in the graph that is expanded at runtime.")]),e._v(" "),_("li",[e._v("Because "),_("code",[e._v("tf.constant")]),e._v(" only embeds constant values in the graph, it does not support dynamic shapes based on other runtime Tensors, whereas "),_("code",[e._v("tf.fill")]),e._v(" does.")])]),e._v(" "),_("h4",{attrs:{id:"args"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("value")]),e._v(": A constant "),_("code",[e._v("value")]),e._v(" (or list) of output type "),_("code",[e._v("dtype")]),e._v(".")]),e._v(" "),_("li",[_("code",[e._v("dtype")]),e._v(": The type of the elements of the resulting tensor.")]),e._v(" "),_("li",[_("code",[e._v("shape")]),e._v(": Optional dimensions of resulting tensor.")]),e._v(" "),_("li",[_("code",[e._v("name")]),e._v(": Optional "),_("code",[e._v("name")]),e._v(" for the tensor.")])]),e._v(" "),_("h4",{attrs:{id:"returns"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),_("p",[e._v("A Constant Tensor.")]),e._v(" "),_("h4",{attrs:{id:"raises"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("TypeError")]),e._v(": if shape is incorrectly specified or unsupported.")])])])}),[],!1,null,null,null);v.default=t.exports}}]);