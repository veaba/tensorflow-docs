(window.webpackJsonp=window.webpackJsonp||[]).push([[1315],{1504:function(e,_,o){"use strict";o.r(_);var v=o(0),c=Object(v.a)({},(function(){var e=this,_=e.$createElement,o=e._self._c||_;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("Represents multi-hot representation of given categorical column.")]),e._v(" "),o("h3",{attrs:{id:"aliases"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("tf.compat.v1.feature_column.indicator_column")])]),e._v(" "),o("li",[o("code",[e._v("tf.compat.v2.feature_column.indicator_column")])])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(" tf.feature_column.indicator_column(categorical_column)\n")])])]),o("h3",{attrs:{id:"used-in-the-tutorials"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("B")]),e._v("o"),o("code",[e._v("o")]),e._v("s"),o("code",[e._v("t")]),e._v("e"),o("code",[e._v("d")]),e._v(" "),o("code",[e._v("t")]),e._v("r"),o("code",[e._v("e")]),e._v("e"),o("code",[e._v("s")]),e._v(" "),o("code",[e._v("u")]),e._v("s"),o("code",[e._v("i")]),e._v("n"),o("code",[e._v("g")]),e._v(" "),o("code",[e._v("E")]),e._v("s"),o("code",[e._v("t")]),e._v("i"),o("code",[e._v("m")]),e._v("a"),o("code",[e._v("t")]),e._v("o"),o("code",[e._v("r")]),e._v("s``")]),e._v(" "),o("li",[o("code",[e._v("B")]),e._v("u"),o("code",[e._v("i")]),e._v("l"),o("code",[e._v("d")]),e._v(" "),o("code",[e._v("a")]),e._v(" "),o("code",[e._v("l")]),e._v("i"),o("code",[e._v("n")]),e._v("e"),o("code",[e._v("a")]),e._v("r"),o("code"),e._v("m"),o("code",[e._v("o")]),e._v("d"),o("code",[e._v("e")]),e._v("l"),o("code"),e._v("w"),o("code",[e._v("i")]),e._v("t"),o("code",[e._v("h")]),e._v(" "),o("code",[e._v("E")]),e._v("s"),o("code",[e._v("t")]),e._v("i"),o("code",[e._v("m")]),e._v("a"),o("code",[e._v("t")]),e._v("o"),o("code",[e._v("r")]),e._v("s``")]),e._v(" "),o("li",[o("code",[e._v("C")]),e._v("l"),o("code",[e._v("a")]),e._v("s"),o("code",[e._v("s")]),e._v("i"),o("code",[e._v("f")]),e._v("y"),o("code"),e._v("s"),o("code",[e._v("t")]),e._v("r"),o("code",[e._v("u")]),e._v("c"),o("code",[e._v("t")]),e._v("u"),o("code",[e._v("r")]),e._v("e"),o("code",[e._v("d")]),e._v(" "),o("code",[e._v("d")]),e._v("a"),o("code",[e._v("t")]),e._v("a"),o("code"),e._v("w"),o("code",[e._v("i")]),e._v("t"),o("code",[e._v("h")]),e._v(" "),o("code",[e._v("f")]),e._v("e"),o("code",[e._v("a")]),e._v("t"),o("code",[e._v("u")]),e._v("r"),o("code",[e._v("e")]),e._v(" "),o("code",[e._v("c")]),e._v("o"),o("code",[e._v("l")]),e._v("u"),o("code",[e._v("m")]),e._v("n"),o("code",[e._v("s")])]),e._v(" "),o("li",[o("code",[e._v("L")]),e._v("o"),o("code",[e._v("a")]),e._v("d"),o("code"),e._v("C"),o("code",[e._v("S")]),e._v("V"),o("code"),e._v("d"),o("code",[e._v("a")]),e._v("t"),o("code",[e._v("a")])]),e._v(" "),o("li",[e._v("For DNN model, "),o("code",[e._v("indicator_column")]),e._v(" can be used to wrap any "),o("code",[e._v("categorical_column_")]),e._v("* (e.g., to feed to DNN). Consider to Use "),o("code",[e._v("embedding_column")]),e._v(" if the number of buckets/unique(values) are large.")]),e._v(" "),o("li",[e._v("For Wide (aka linear) model, "),o("code",[e._v("indicator_column")]),e._v(" is the internal representation for categorical column when passing categorical column directly (as any element in feature_columns) to "),o("code",[e._v("linear_model")]),e._v(". See "),o("code",[e._v("linear_model")]),e._v(" for details.")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(' name = indicator_column(categorical_column_with_vocabulary_list(\n    \'name\', [\'bob\', \'george\', \'wanda\'])\ncolumns = [name, ...]\nfeatures = tf.io.parse_example(..., features=make_parse_example_spec(columns))\ndense_tensor = input_layer(features, columns)\n\ndense_tensor == [[1, 0, 0]]  # If "name" bytes_list is ["bob"]\ndense_tensor == [[1, 0, 1]]  # If "name" bytes_list is ["bob", "wanda"]\ndense_tensor == [[2, 0, 0]]  # If "name" bytes_list is ["bob", "bob"]\n')])])]),o("h4",{attrs:{id:"args"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("categorical_column")]),e._v(": A "),o("code",[e._v("CategoricalColumn")]),e._v(" which is created by "),o("code",[e._v("categorical_column")]),o("em",[e._v("with")]),e._v("* or "),o("code",[e._v("crossed_column")]),e._v(" functions.")])]),e._v(" "),o("h4",{attrs:{id:"returns"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),o("p",[e._v("An IndicatorColumn.")])])}),[],!1,null,null,null);_.default=c.exports}}]);