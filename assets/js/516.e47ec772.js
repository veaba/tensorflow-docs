(window.webpackJsonp=window.webpackJsonp||[]).push([[516],{704:function(e,a,s){"use strict";s.r(a);var t=s(0),n=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Normalizes along dimension axis using an L2 norm. (deprecated arguments)")]),e._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tf.compat.v1.math.l2_normalize")])]),e._v(" "),s("li",[s("code",[e._v("tf.compat.v1.nn.l2_normalize")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.compat.v1.linalg.l2_normalize(\n    x,\n    axis=None,\n    epsilon=1e-12,\n    name=None,\n    dim=None\n)\n")])])]),s("p",[e._v("For a 1-D tensor with axis = 0, computes")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" output = x / sqrt(max(sum(x**2), epsilon))\n")])])]),s("p",[e._v("For x with more dimensions, independently normalizes each 1-D slice along dimension axis.")]),e._v(" "),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("x")]),e._v(": A "),s("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("axis")]),e._v(": Dimension along which to normalize. A scalar or a vector of integers.")]),e._v(" "),s("li",[s("code",[e._v("epsilon")]),e._v(": A lower bound value for the norm. Will use sqrt("),s("code",[e._v("epsilon")]),e._v(") as the divisor if norm < sqrt("),s("code",[e._v("epsilon")]),e._v(").")]),e._v(" "),s("li",[s("code",[e._v("name")]),e._v(": A "),s("code",[e._v("name")]),e._v(" for this operation (optional).")]),e._v(" "),s("li",[s("code",[e._v("dim")]),e._v(": Deprecated alias for "),s("code",[e._v("axis")]),e._v(".")])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("A Tensor with the same shape as x.")])])}),[],!1,null,null,null);a.default=n.exports}}]);