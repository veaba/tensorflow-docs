(window.webpackJsonp=window.webpackJsonp||[]).push([[1524],{1715:function(a,t,e){"use strict";e.r(t);var r=e(0),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("Cast a Numpy array to the default Keras float type.")]),a._v(" "),e("h3",{attrs:{id:"aliases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("tf.compat.v1.keras.backend.cast_to_floatx")])]),a._v(" "),e("li",[e("code",[a._v("tf.compat.v2.keras.backend.cast_to_floatx")])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(" tf.keras.backend.cast_to_floatx(x)\n")])])]),e("h4",{attrs:{id:"arguments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[a._v("#")]),a._v(" Arguments:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("x")]),a._v(": Numpy array or TensorFlow tensor.")])]),a._v(" "),e("h4",{attrs:{id:"returns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns:")]),a._v(" "),e("p",[a._v("The same array (Numpy array if x was a Numpy array, or TensorFlow tensor if x was a tensor), cast to its new type.")]),a._v(" "),e("h4",{attrs:{id:"example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example","aria-hidden":"true"}},[a._v("#")]),a._v(" Example:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("     >>> from tensorflow.keras import backend as K\n    >>> K.floatx()\n    'float32'\n    >>> arr = numpy.array([1.0, 2.0], dtype='float64')\n    >>> arr.dtype\n    dtype('float64')\n    >>> new_arr = K.cast_to_floatx(arr)\n    >>> new_arr\n    array([ 1.,  2.], dtype=float32)\n    >>> new_arr.dtype\n    dtype('float32')\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);