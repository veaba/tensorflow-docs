(window.webpackJsonp=window.webpackJsonp||[]).push([[2550],{2741:function(a,t,r){"use strict";r.r(t);var e=r(0),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("p",[a._v("Create a numpy ndarray from a tensor.")]),a._v(" "),r("h3",{attrs:{id:"aliases"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),r("ul",[r("li",[r("code",[a._v("tf.compat.v1.make_ndarray")])]),a._v(" "),r("li",[r("code",[a._v("tf.compat.v2.make_ndarray")])])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v(" tf.make_ndarray(tensor)\n")])])]),r("p",[a._v("Create a numpy ndarray with the same shape and data as the tensor.")]),a._v(" "),r("h4",{attrs:{id:"args"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[a._v("#")]),a._v(" Args:")]),a._v(" "),r("ul",[r("li",[r("code",[a._v("tensor")]),a._v(": A TensorProto.")])]),a._v(" "),r("h4",{attrs:{id:"returns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns:")]),a._v(" "),r("p",[a._v("A numpy array with the tensor contents.")]),a._v(" "),r("h4",{attrs:{id:"raises"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[a._v("#")]),a._v(" Raises:")]),a._v(" "),r("ul",[r("li",[r("code",[a._v("TypeError")]),a._v(": if tensor has unsupported type.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);