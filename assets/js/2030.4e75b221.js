(window.webpackJsonp=window.webpackJsonp||[]).push([[2030],{2221:function(e,t,a){"use strict";a.r(t);var n=a(0),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Defined in generated file: python/ops/gen_array_ops.py")]),e._v(" "),a("p",[e._v("Returns the diagonal part of the tensor.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v1.diag_part")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v1.linalg.tensor_diag_part")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v2.linalg.tensor_diag_part")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.linalg.tensor_diag_part(\n    input,\n    name=None\n)\n")])])]),a("p",[e._v("This operation returns a tensor with the diagonal part of the input. The diagonal part is computed as follows:")]),e._v(" "),a("p",[e._v("Assume input has dimensions [D1,..., Dk, D1,..., Dk], then the output is a tensor of rank k with dimensions [D1,..., Dk] where:")]),e._v(" "),a("p",[e._v("diagonal[i1,..., ik] = input[i1, ..., ik, i1,..., ik].")]),e._v(" "),a("h4",{attrs:{id:"for-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" # 'input' is [[1, 0, 0, 0]\n              [0, 2, 0, 0]\n              [0, 0, 3, 0]\n              [0, 0, 0, 4]]\n\ntf.diag_part(input) ==> [1, 2, 3, 4]\n")])])]),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("input")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("bfloat16")]),e._v(", "),a("code",[e._v("half")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", "),a("code",[e._v("complex128")]),e._v(". Rank k tensor where k is even and not zero.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A Tensor. Has the same type as input.")])])}),[],!1,null,null,null);t.default=s.exports}}]);