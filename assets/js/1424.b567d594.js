(window.webpackJsonp=window.webpackJsonp||[]).push([[1424],{1615:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Parses a single Example proto.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v2.io.parse_single_example")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.io.parse_single_example(\n    serialized,\n    features,\n    example_names=None,\n    name=None\n)\n")])])]),t("h3",{attrs:{id:"used-in-the-tutorials"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("T")]),e._v("F"),t("code",[e._v("R")]),e._v("e"),t("code",[e._v("c")]),e._v("o"),t("code",[e._v("r")]),e._v("d"),t("code"),e._v("a"),t("code",[e._v("n")]),e._v("d"),t("code"),e._v("t"),t("code",[e._v("f")]),e._v("."),t("code",[e._v("E")]),e._v("x"),t("code",[e._v("a")]),e._v("m"),t("code",[e._v("p")]),e._v("l"),t("code",[e._v("e")])])]),e._v(" "),t("p",[e._v("Similar to parse_example, except:")]),e._v(" "),t("p",[e._v("For dense tensors, the returned Tensor is identical to the output of parse_example, except there is no batch dimension, the output shape is the same as the shape given in dense_shape.")]),e._v(" "),t("p",[e._v("For SparseTensors, the first (batch) column of the indices matrix is removed (the indices matrix is a column vector), the values vector is unchanged, and the first (batch_size) entry of the shape vector is removed (it is now a single element vector).")]),e._v(" "),t("p",[e._v("One might see performance advantages by batching Example protos with parse_example instead of using this function directly.")]),e._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("serialized")]),e._v(": A scalar string Tensor, a single "),t("code",[e._v("serialized")]),e._v(" Example. See "),t("code",[e._v("_parse_single_example_raw")]),e._v(" documentation for more details.")]),e._v(" "),t("li",[t("code",[e._v("features")]),e._v(": A "),t("code",[e._v("dict")]),e._v(" mapping feature keys to "),t("code",[e._v("FixedLenFeature")]),e._v(" or "),t("code",[e._v("VarLenFeature")]),e._v(" values.")]),e._v(" "),t("li",[t("code",[e._v("example_names")]),e._v(": (Optional) A scalar string Tensor, the associated name. See "),t("code",[e._v("_parse_single_example_raw")]),e._v(" documentation for more details.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for this operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A dict mapping feature keys to Tensor and SparseTensor values.")]),e._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ValueError")]),e._v(": if any feature is invalid.")])])])}),[],!1,null,null,null);a.default=r.exports}}]);