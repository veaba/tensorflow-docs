(window.webpackJsonp=window.webpackJsonp||[]).push([[1308],{1497:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Represents discretized dense input.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.feature_column.bucketized_column")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.feature_column.bucketized_column")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.feature_column.bucketized_column(\n    source_column,\n    boundaries\n)\n")])])]),t("h3",{attrs:{id:"used-in-the-tutorials"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("C")]),e._v("l"),t("code",[e._v("a")]),e._v("s"),t("code",[e._v("s")]),e._v("i"),t("code",[e._v("f")]),e._v("y"),t("code"),e._v("s"),t("code",[e._v("t")]),e._v("r"),t("code",[e._v("u")]),e._v("c"),t("code",[e._v("t")]),e._v("u"),t("code",[e._v("r")]),e._v("e"),t("code",[e._v("d")]),e._v(" "),t("code",[e._v("d")]),e._v("a"),t("code",[e._v("t")]),e._v("a"),t("code"),e._v("w"),t("code",[e._v("i")]),e._v("t"),t("code",[e._v("h")]),e._v(" "),t("code",[e._v("f")]),e._v("e"),t("code",[e._v("a")]),e._v("t"),t("code",[e._v("u")]),e._v("r"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("c")]),e._v("o"),t("code",[e._v("l")]),e._v("u"),t("code",[e._v("m")]),e._v("n"),t("code",[e._v("s")])])]),e._v(" "),t("p",[e._v("Buckets include the left boundary, and exclude the right boundary. Namely, boundaries=[0., 1., 2.] generates buckets (-inf, 0.), [0., 1.), [1., 2.), and [2., +inf).")]),e._v(" "),t("p",[e._v("For example, if the inputs are")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" boundaries = [0, 10, 100]\ninput tensor = [[-5, 10000]\n                [150,   10]\n                [5,    100]]\n")])])]),t("p",[e._v("then the output will be")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" output = [[0, 3]\n          [3, 2]\n          [1, 3]]\n")])])]),t("h4",{attrs:{id:"example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example","aria-hidden":"true"}},[e._v("#")]),e._v(" Example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" price = numeric_column('price')\nbucketized_price = bucketized_column(price, boundaries=[...])\ncolumns = [bucketized_price, ...]\nfeatures = tf.io.parse_example(..., features=make_parse_example_spec(columns))\nlinear_prediction = linear_model(features, columns)\n\n# or\ncolumns = [bucketized_price, ...]\nfeatures = tf.io.parse_example(..., features=make_parse_example_spec(columns))\ndense_tensor = input_layer(features, columns)\n")])])]),t("p",[e._v("bucketized_column can also be crossed with another categorical column using crossed_column:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" price = numeric_column('price')\n# bucketized_column converts numerical feature to a categorical one.\nbucketized_price = bucketized_column(price, boundaries=[...])\n# 'keywords' is a string feature.\nprice_x_keywords = crossed_column([bucketized_price, 'keywords'], 50K)\ncolumns = [price_x_keywords, ...]\nfeatures = tf.io.parse_example(..., features=make_parse_example_spec(columns))\nlinear_prediction = linear_model(features, columns)\n")])])]),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("source_column")]),e._v(": A one-dimensional dense column which is generated with "),t("code",[e._v("numeric_column")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("boundaries")]),e._v(": A sorted list or tuple of floats specifying the "),t("code",[e._v("boundaries")]),e._v(".")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A BucketizedColumn.")]),e._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ValueError")]),e._v(": If "),t("code",[e._v("source_column")]),e._v(" is not a numeric column, or if it is not one-dimensional.")]),e._v(" "),t("li",[t("code",[e._v("ValueError")]),e._v(": If "),t("code",[e._v("boundaries")]),e._v(" is not a sorted list or tuple.")])])])}),[],!1,null,null,null);a.default=r.exports}}]);