(window.webpackJsonp=window.webpackJsonp||[]).push([[1888],{2080:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"class-lossscaleoptimizer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-lossscaleoptimizer","aria-hidden":"true"}},[e._v("#")]),e._v(" Class LossScaleOptimizer")]),e._v(" "),a("p",[e._v("An optimizer that applies loss scaling.\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/Optimizer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Optimizer"),a("OutboundLink")],1),e._v("Inherits From:")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[e._v("Class "),a("code",[e._v("tf.compat.v1.keras.mixed_precision.experimental.LossScaleOptimizer")])]),e._v(" "),a("li",[e._v("Class "),a("code",[e._v("tf.compat.v2.keras.mixed_precision.experimental.LossScaleOptimizer")])])]),e._v(" "),a("p",[e._v("Loss scaling is a process that multiplies the loss by a multiplier called the loss scale, and divides each gradient by the same multiplier. The pseudocode for this process is:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" loss = ...\nloss *= loss_scale\ngrads = gradients(loss, vars)\ngrads /= loss_scale\n")])])]),a("p",[e._v("Mathematically, loss scaling has no effect, but can help avoid numerical underflow in intermediate gradients when float16 tensors are used. By multiplying the loss, each intermediate gradient will have the same multiplier applied.")]),e._v(" "),a("p",[e._v("The loss scale can either be a fixed constant, chosen by the user, or be dynamically determined. Dynamically determining the loss scale is convenient as a loss scale does not have to be explicitly chosen. However it reduces performance.\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/train/experimental/LossScale#update",target:"_blank",rel:"noopener noreferrer"}},[e._v("LossScale.update()"),a("OutboundLink")],1),e._v("This optimizer wraps another optimizer and applies loss scaling to it via a LossScale. Loss scaling is applied whenever gradients are computed, either through minimize() or get_gradients(). The loss scale is updated via  whenever gradients are applied, either through minimize() or apply_gradients(). For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" opt = tf.keras.optimizers.SGD(0.1)\nopt = tf.keras.mixed_precision.experimental.LossScaleOptimizer(opt, \"dynamic\")\n# 'minimize' applies loss scaling to the loss and updates the loss sale.\nopt.minimize(loss_fn)\n")])])]),a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/GradientTape",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.GradientTape"),a("OutboundLink")],1),e._v("If a  is used to compute gradients instead of LossScaleOptimizer.minimize or LossScaleOptimizer.get_gradients, the loss and gradients must be scaled manually. This can be done by calling LossScaleOptimizer.get_scaled_loss before passing the loss to , and LossScaleOptimizer.get_unscaled_gradients after computing the gradients with . For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" opt = tf.keras.mixed_precision.experimental.LossScaleOptimizer(...)\nvars = ...\nwith tf.GradientTape() as tape:\n  loss = ...\n  scaled_loss = opt.get_scaled_loss(loss)\nscaled_grads = tape.gradient(scaled_loss, vars)\ngrads = opt.get_unscaled_gradients(scaled_grads)\nopt.apply_gradients(zip(grads, vars))  # Loss scale will be updated here\n")])])]),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("init")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/mixed_precision/experimental/loss_scale_optimizer.py#L104-L142",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __init__(\n    optimizer,\n    loss_scale\n)\n")])])]),a("p",[e._v("Initializes this loss scale optimizer.")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("optimizer")]),e._v(": The Optimizer instance to wrap.")]),e._v(" "),a("li",[a("code",[e._v("loss_scale")]),e._v(': The loss scale to scale the loss and gradients. This can either be an int/float to use a fixed loss scale, the string "dynamic" to use dynamic loss scaling, or an instance of a LossScale. The string "dynamic" equivalent to passing '),a("code",[e._v("DynamicLossScale")]),e._v("(), and passing an int/float is equivalent to passing a FixedLossScale with the given loss scale.")])]),e._v(" "),a("h2",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),a("h3",{attrs:{id:"iterations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iterations","aria-hidden":"true"}},[e._v("#")]),e._v(" iterations")]),e._v(" "),a("p",[e._v("Variable. The number of training steps this Optimizer has run.")]),e._v(" "),a("h3",{attrs:{id:"learning-rate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#learning-rate","aria-hidden":"true"}},[e._v("#")]),e._v(" learning_rate")]),e._v(" "),a("h3",{attrs:{id:"loss-scale"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loss-scale","aria-hidden":"true"}},[e._v("#")]),e._v(" loss_scale")]),e._v(" "),a("p",[e._v("The LossScale instance associated with this optimizer.")]),e._v(" "),a("h3",{attrs:{id:"lr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lr","aria-hidden":"true"}},[e._v("#")]),e._v(" lr")]),e._v(" "),a("h3",{attrs:{id:"weights"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weights","aria-hidden":"true"}},[e._v("#")]),e._v(" weights")]),e._v(" "),a("p",[e._v("Returns variables of this Optimizer based on the order created.")]),e._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),a("h3",{attrs:{id:"add-slot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-slot","aria-hidden":"true"}},[e._v("#")]),e._v(" add_slot")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/mixed_precision/experimental/loss_scale_optimizer.py#L324-L328",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" add_slot(\n    var,\n    slot_name,\n    initializer='zeros'\n)\n")])])]),a("p",[e._v("Add a new slot variable for var.")]),e._v(" "),a("h3",{attrs:{id:"add-weight"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-weight","aria-hidden":"true"}},[e._v("#")]),e._v(" add_weight")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/optimizer_v2/optimizer_v2.py#L768-L808",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" add_weight(\n    name,\n    shape,\n    dtype=None,\n    initializer='zeros',\n    trainable=None,\n    synchronization=tf.VariableSynchronization.AUTO,\n    aggregation=tf.compat.v1.VariableAggregation.NONE\n)\n")])])]),a("h3",{attrs:{id:"apply-gradients"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apply-gradients","aria-hidden":"true"}},[e._v("#")]),e._v(" apply_gradients")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/mixed_precision/experimental/loss_scale_optimizer.py#L214-L219",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" apply_gradients(\n    grads_and_vars,\n    name=None\n)\n")])])]),a("p",[e._v("Apply gradients to variables.")]),e._v(" "),a("p",[e._v("This is the second part of minimize(). It returns an Operation that applies gradients.")]),e._v(" "),a("h4",{attrs:{id:"args-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("grads_and_vars")]),e._v(": List of (gradient, variable) pairs.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Optional "),a("code",[e._v("name")]),e._v(" for the returned operation. Default to the "),a("code",[e._v("name")]),e._v(" passed to the "),a("code",[e._v("Optimizer")]),e._v(" constructor.")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("An Operation that applies the specified gradients. If global_step was not None, that operation also increments global_step.")]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("TypeError")]),e._v(": If "),a("code",[e._v("grads_and_vars")]),e._v(" is malformed.")]),e._v(" "),a("li",[a("code",[e._v("ValueError")]),e._v(": If none of the variables have gradients.")])]),e._v(" "),a("h3",{attrs:{id:"from-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from-config","aria-hidden":"true"}},[e._v("#")]),e._v(" from_config")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/mixed_precision/experimental/loss_scale_optimizer.py#L256-L263",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" @classmethod\nfrom_config(\n    cls,\n    config,\n    custom_objects=None\n)\n")])])]),a("p",[e._v("Creates an optimizer from its config.")]),e._v(" "),a("p",[e._v("This method is the reverse of get_config, capable of instantiating the same optimizer from the config dictionary.")]),e._v(" "),a("h4",{attrs:{id:"arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("config")]),e._v(": A Python dictionary, typically the output of get_"),a("code",[e._v("config")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("custom_objects")]),e._v(": A Python dictionary mapping names to additional Python objects used to create this optimizer, such as a function used for a hyperparameter.")])]),e._v(" "),a("h4",{attrs:{id:"returns-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("An optimizer instance.")]),e._v(" "),a("h3",{attrs:{id:"get-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-config","aria-hidden":"true"}},[e._v("#")]),e._v(" get_config")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/mixed_precision/experimental/loss_scale_optimizer.py#L248-L254",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_config()\n")])])]),a("p",[e._v("Returns the config of the optimimizer.")]),e._v(" "),a("p",[e._v("An optimizer config is a Python dictionary (serializable) containing the configuration of an optimizer. The same optimizer can be reinstantiated later (without any saved state) from this configuration.")]),e._v(" "),a("h4",{attrs:{id:"returns-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("Python dictionary.")]),e._v(" "),a("h3",{attrs:{id:"get-gradients"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-gradients","aria-hidden":"true"}},[e._v("#")]),e._v(" get_gradients")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/mixed_precision/experimental/loss_scale_optimizer.py#L209-L212",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_gradients(\n    loss,\n    params\n)\n")])])]),a("p",[e._v("Returns gradients of loss with respect to params.")]),e._v(" "),a("h4",{attrs:{id:"arguments-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("loss")]),e._v(": Loss tensor.")]),e._v(" "),a("li",[a("code",[e._v("params")]),e._v(": List of variables.")])]),e._v(" "),a("h4",{attrs:{id:"returns-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("List of gradient tensors.")]),e._v(" "),a("h4",{attrs:{id:"raises-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": In case any gradient cannot be computed (e.g. if gradient function not implemented).")])]),e._v(" "),a("h3",{attrs:{id:"get-scaled-loss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-scaled-loss","aria-hidden":"true"}},[e._v("#")]),e._v(" get_scaled_loss")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/mixed_precision/experimental/loss_scale_optimizer.py#L149-L173",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_scaled_loss(loss)\n")])])]),a("p",[e._v("Scales the loss by the loss scale.\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/GradientTape",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.GradientTape"),a("OutboundLink")],1),e._v("This method is only needed if you compute gradients manually, e.g. with . In that case, call this method to scale the loss before passing the loss to . If you use LossScaleOptimizer.minimize or LossScaleOptimizer.get_gradients, loss scaling is automatically applied and this method is unneeded.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/keras/mixed_precision/experimental/LossScaleOptimizer",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.keras.mixed_precision.experimental.LossScaleOptimizer"),a("OutboundLink")],1),e._v("If this method is called, get_unscaled_gradients should also be called. See the  doc for an example.")]),e._v(" "),a("h4",{attrs:{id:"args-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("loss")]),e._v(": The "),a("code",[e._v("loss")]),e._v(", which will be multiplied by the "),a("code",[e._v("loss")]),e._v(" scale. Can either be a tensor or a callable returning a tensor.")])]),e._v(" "),a("h4",{attrs:{id:"returns-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/keras/mixed_precision/experimental/LossScaleOptimizer#loss_scale",target:"_blank",rel:"noopener noreferrer"}},[e._v("LossScaleOptimizer.loss_scale()"),a("OutboundLink")],1),e._v("loss multiplied by .")]),e._v(" "),a("h3",{attrs:{id:"get-slot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-slot","aria-hidden":"true"}},[e._v("#")]),e._v(" get_slot")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/mixed_precision/experimental/loss_scale_optimizer.py#L313-L322",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_slot(\n    var,\n    slot_name\n)\n")])])]),a("h3",{attrs:{id:"get-slot-names"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-slot-names","aria-hidden":"true"}},[e._v("#")]),e._v(" get_slot_names")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/mixed_precision/experimental/loss_scale_optimizer.py#L276-L277",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_slot_names()\n")])])]),a("p",[e._v("A list of names for this optimizer's slots.")]),e._v(" "),a("h3",{attrs:{id:"get-unscaled-gradients"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-unscaled-gradients","aria-hidden":"true"}},[e._v("#")]),e._v(" get_unscaled_gradients")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/mixed_precision/experimental/loss_scale_optimizer.py#L175-L198",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_unscaled_gradients(grads)\n")])])]),a("p",[e._v("Unscales the gradients by the loss scale.\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/GradientTape",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.GradientTape"),a("OutboundLink")],1),e._v("This method is only needed if you compute gradients manually, e.g. with . In that case, call this method to unscale the gradients after computing them with . If you use LossScaleOptimizer.minimize or LossScaleOptimizer.get_gradients, loss scaling is automatically applied and this method is unneeded.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/keras/mixed_precision/experimental/LossScaleOptimizer",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.keras.mixed_precision.experimental.LossScaleOptimizer"),a("OutboundLink")],1),e._v("If this method is called, get_scaled_loss should also be called. See the  doc for an example.")]),e._v(" "),a("h4",{attrs:{id:"args-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("grads")]),e._v(": A list of tensors, each which will be divided by the loss scale. Can have None values, which are ignored.")])]),e._v(" "),a("h4",{attrs:{id:"returns-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/keras/mixed_precision/experimental/LossScaleOptimizer#loss_scale",target:"_blank",rel:"noopener noreferrer"}},[e._v("LossScaleOptimizer.loss_scale()"),a("OutboundLink")],1),e._v("A new list the same size as grads, where every non-None value in grads is divided by .")]),e._v(" "),a("h3",{attrs:{id:"get-updates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-updates","aria-hidden":"true"}},[e._v("#")]),e._v(" get_updates")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/optimizer_v2/optimizer_v2.py#L499-L506",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_updates(\n    loss,\n    params\n)\n")])])]),a("h3",{attrs:{id:"get-weights"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-weights","aria-hidden":"true"}},[e._v("#")]),e._v(" get_weights")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/mixed_precision/experimental/loss_scale_optimizer.py#L286-L287",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_weights()\n")])])]),a("h3",{attrs:{id:"minimize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minimize","aria-hidden":"true"}},[e._v("#")]),e._v(" minimize")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/optimizer_v2/optimizer_v2.py#L290-L319",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" minimize(\n    loss,\n    var_list,\n    grad_loss=None,\n    name=None\n)\n")])])]),a("p",[e._v("Minimize loss by updating var_list.\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/GradientTape",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.GradientTape"),a("OutboundLink")],1),e._v("This method simply computes gradient using  and calls apply_gradients(). If you want to process the gradient before applying then call  and apply_gradients() explicitly instead of using this function.")]),e._v(" "),a("h4",{attrs:{id:"args-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("loss")]),e._v(": A callable taking no arguments which returns the value to minimize.")]),e._v(" "),a("li",[a("code",[e._v("var_list")]),e._v(": list or tuple of "),a("code",[e._v("Variable")]),e._v(" objects to update to "),a("code",[e._v("minimize")]),e._v(" "),a("code",[e._v("loss")]),e._v(", or a callable returning the list or tuple of "),a("code",[e._v("Variable")]),e._v(" objects. Use callable when the variable list would otherwise be incomplete before "),a("code",[e._v("minimize")]),e._v(" since the variables are created at the first time "),a("code",[e._v("loss")]),e._v(" is called.")]),e._v(" "),a("li",[a("code",[e._v("grad_loss")]),e._v(": Optional. A "),a("code",[e._v("Tensor")]),e._v(" holding the gradient computed for "),a("code",[e._v("loss")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Optional "),a("code",[e._v("name")]),e._v(" for the returned operation.")])]),e._v(" "),a("h4",{attrs:{id:"returns-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("An Operation that updates the variables in var_list. If global_step was not None, that operation also increments global_step.")]),e._v(" "),a("h4",{attrs:{id:"raises-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If some of the variables are not "),a("code",[e._v("Variable")]),e._v(" objects.")])]),e._v(" "),a("h3",{attrs:{id:"set-weights"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-weights","aria-hidden":"true"}},[e._v("#")]),e._v(" set_weights")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/mixed_precision/experimental/loss_scale_optimizer.py#L289-L290",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" set_weights(weights)\n")])])]),a("h3",{attrs:{id:"variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables","aria-hidden":"true"}},[e._v("#")]),e._v(" variables")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/mixed_precision/experimental/loss_scale_optimizer.py#L279-L280",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" variables()\n")])])]),a("p",[e._v("Returns variables of this Optimizer based on the order created.")])])}),[],!1,null,null,null);t.default=r.exports}}]);