(window.webpackJsonp=window.webpackJsonp||[]).push([[1763],{1954:function(e,a,t){"use strict";t.r(a);var _=t(0),s=Object(_.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"class-globalmaxpool2d"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-globalmaxpool2d","aria-hidden":"true"}},[e._v("#")]),e._v(" Class GlobalMaxPool2D")]),e._v(" "),t("p",[e._v("Global max pooling operation for spatial data.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[e._v("Class "),t("code",[e._v("tf.compat.v1.keras.layers.GlobalMaxPool2D")])]),e._v(" "),t("li",[e._v("Class "),t("code",[e._v("tf.compat.v1.keras.layers.GlobalMaxPooling2D")])]),e._v(" "),t("li",[e._v("Class "),t("code",[e._v("tf.compat.v2.keras.layers.GlobalMaxPool2D")])]),e._v(" "),t("li",[e._v("Class "),t("code",[e._v("tf.compat.v2.keras.layers.GlobalMaxPooling2D")])]),e._v(" "),t("li",[e._v("Class "),t("code",[e._v("tf.keras.layers.GlobalMaxPooling2D")])])]),e._v(" "),t("h3",{attrs:{id:"used-in-the-guide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("T")]),e._v("h"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("K")]),e._v("e"),t("code",[e._v("r")]),e._v("a"),t("code",[e._v("s")]),e._v(" "),t("code",[e._v("f")]),e._v("u"),t("code",[e._v("n")]),e._v("c"),t("code",[e._v("t")]),e._v("i"),t("code",[e._v("o")]),e._v("n"),t("code",[e._v("a")]),e._v("l"),t("code"),e._v("A"),t("code",[e._v("P")]),e._v("I"),t("code"),e._v("i"),t("code",[e._v("n")]),e._v(" "),t("code",[e._v("T")]),e._v("e"),t("code",[e._v("n")]),e._v("s"),t("code",[e._v("o")]),e._v("r"),t("code",[e._v("F")]),e._v("l"),t("code",[e._v("o")]),e._v("w``")]),e._v(" "),t("li",[t("code",[e._v("T")]),e._v("r"),t("code",[e._v("a")]),e._v("i"),t("code",[e._v("n")]),e._v(" "),t("code",[e._v("a")]),e._v("n"),t("code",[e._v("d")]),e._v(" "),t("code",[e._v("e")]),e._v("v"),t("code",[e._v("a")]),e._v("l"),t("code",[e._v("u")]),e._v("a"),t("code",[e._v("t")]),e._v("e"),t("code"),e._v("w"),t("code",[e._v("i")]),e._v("t"),t("code",[e._v("h")]),e._v(" "),t("code",[e._v("K")]),e._v("e"),t("code",[e._v("r")]),e._v("a"),t("code",[e._v("s")])])]),e._v(" "),t("h4",{attrs:{id:"arguments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("data_format")]),e._v(": A string, one of "),t("code",[e._v("channels_last")]),e._v(" (default) or "),t("code",[e._v("channels_first")]),e._v(". The ordering of the dimensions in the inputs. "),t("code",[e._v("channels_last")]),e._v(" corresponds to inputs with shape ("),t("code",[e._v("batch, height, width, channels")]),e._v(") while "),t("code",[e._v("channels_first")]),e._v(" corresponds to inputs with shape ("),t("code",[e._v("batch, channels, height, width")]),e._v("). It defaults to the "),t("code",[e._v("image_data_format")]),e._v(" value found in your Keras config file at "),t("code",[e._v("~/.keras/keras.json")]),e._v('. If you never set it, then it will be "'),t("code",[e._v("channels_last")]),e._v('".')])]),e._v(" "),t("h4",{attrs:{id:"input-shape"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#input-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" Input shape:")]),e._v(" "),t("ul",[t("li",[e._v("If "),t("code",[e._v("data_format='channels_last'")]),e._v(": 4D tensor with shape ("),t("code",[e._v("batch_size, rows, cols, channels")]),e._v(").")]),e._v(" "),t("li",[e._v("If "),t("code",[e._v("data_format='channels_first'")]),e._v(": 4D tensor with shape ("),t("code",[e._v("batch_size, channels, rows, cols")]),e._v(").")])]),e._v(" "),t("h4",{attrs:{id:"output-shape"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#output-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" Output shape:")]),e._v(" "),t("p",[e._v("2D tensor with shape (batch_size, channels).")]),e._v(" "),t("h2",{attrs:{id:"init"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("init")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/pooling.py#L688-L691",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __init__(\n    data_format=None,\n    **kwargs\n)\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);