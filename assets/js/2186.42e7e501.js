(window.webpackJsonp=window.webpackJsonp||[]).push([[2186],{2374:function(e,t,o){"use strict";o.r(t);var a=o(0),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("Performs the avg pooling on the input.")]),e._v(" "),o("h3",{attrs:{id:"aliases"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("tf.compat.v1.nn.avg_pool_v2")])]),e._v(" "),o("li",[o("code",[e._v("tf.compat.v2.nn.avg_pool")])])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(" tf.nn.avg_pool(\n    input,\n    ksize,\n    strides,\n    padding,\n    data_format=None,\n    name=None\n)\n")])])]),o("p",[e._v("Each entry in output is the mean of the corresponding size ksize window in value.")]),e._v(" "),o("h4",{attrs:{id:"args"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("input")]),e._v(": Tensor of rank N+2, of shape [batch_size] + "),o("code",[e._v("input")]),e._v("_spatial_shape + [num_channels] if "),o("code",[e._v("data_format")]),e._v(' does not start with "NC" (default), or [batch_size, num_channels] + '),o("code",[e._v("input")]),e._v("_spatial_shape if "),o("code",[e._v("data_format")]),e._v(' starts with "NC". Pooling happens over the spatial dimensions only.')]),e._v(" "),o("li",[o("code",[e._v("ksize")]),e._v(": An int or list of "),o("code",[e._v("ints")]),e._v(" that has length "),o("code",[e._v("1")]),e._v(", "),o("code",[e._v("N")]),e._v(" or "),o("code",[e._v("N")]),e._v("+2. The size of the window for each dimension of the "),o("code",[e._v("input")]),e._v(" tensor.")]),e._v(" "),o("li",[o("code",[e._v("strides")]),e._v(": An int or list of "),o("code",[e._v("ints")]),e._v(" that has length "),o("code",[e._v("1")]),e._v(", "),o("code",[e._v("N")]),e._v(" or "),o("code",[e._v("N")]),e._v("+2. The stride of the sliding window for each dimension of the "),o("code",[e._v("input")]),e._v(" tensor.")]),e._v(" "),o("li",[o("code",[e._v("padding")]),e._v(": A string, either "),o("code",[e._v("'VALID'")]),e._v(" or "),o("code",[e._v("'SAME'")]),e._v(". The "),o("code",[e._v("padding")]),e._v(' algorithm. See the "returns" section of '),o("code",[e._v("tf.nn.convolution")]),e._v(" for details.")]),e._v(" "),o("li",[o("code",[e._v("data_format")]),e._v(": A string. Specifies the channel dimension. For "),o("code",[e._v("N")]),e._v("="),o("code",[e._v("1")]),e._v(' it can be either "'),o("code",[e._v("N")]),e._v('WC" (default) or "'),o("code",[e._v("N")]),e._v('CW", for '),o("code",[e._v("N")]),e._v('=2 it can be either "'),o("code",[e._v("N")]),e._v('HWC" (default) or "'),o("code",[e._v("N")]),e._v('CHW" and for '),o("code",[e._v("N")]),e._v('=3 either "'),o("code",[e._v("N")]),e._v('DHWC" (default) or "'),o("code",[e._v("N")]),e._v('CDHW".')]),e._v(" "),o("li",[o("code",[e._v("name")]),e._v(": Optional "),o("code",[e._v("name")]),e._v(" for the operation.")])]),e._v(" "),o("h4",{attrs:{id:"returns"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),o("p",[e._v("A Tensor of format specified by data_format. The average pooled output tensor.")])])}),[],!1,null,null,null);t.default=n.exports}}]);