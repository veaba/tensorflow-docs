(window.webpackJsonp=window.webpackJsonp||[]).push([[2096],{2284:function(e,a,t){"use strict";t.r(a);var o=t(0),v=Object(o.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Defined in generated file: python/ops/gen_math_ops.py")]),e._v(" "),t("p",[e._v("Compute the lower regularized incomplete Gamma function P(a, x).")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.igamma")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v1.math.igamma")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.math.igamma")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.math.igamma(\n    a,\n    x,\n    name=None\n)\n")])])]),t("p",[e._v("The lower regularized incomplete Gamma function is defined as:")]),e._v(" "),t("p",[e._v("where")]),e._v(" "),t("p",[e._v("is the lower incomplete Gamma function.")]),e._v(" "),t("p",[e._v("Note, above Q(a, x) (Igammac) is the upper regularized complete Gamma function.")]),e._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("a")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must h"),t("code",[e._v("a")]),e._v("ve the s"),t("code",[e._v("a")]),e._v("me type "),t("code",[e._v("a")]),e._v("s "),t("code",[e._v("a")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the oper"),t("code",[e._v("a")]),e._v("tion (option"),t("code",[e._v("a")]),e._v("l).")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor. Has the same type as a.")])])}),[],!1,null,null,null);a.default=v.exports}}]);