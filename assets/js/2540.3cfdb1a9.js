(window.webpackJsonp=window.webpackJsonp||[]).push([[2540],{2731:function(e,s,t){"use strict";t.r(s);var a=t(0),o=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Constructs the Hessian of sum of "),t("code",[e._v("ys")]),e._v(" with respect to "),t("code",[e._v("x")]),e._v(" in "),t("code",[e._v("x")]),e._v("s.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v2.hessians")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.hessians(\n    ys,\n    xs,\n    gate_gradients=False,\n    aggregation_method=None,\n    name='hessians'\n)\n")])])]),t("p",[t("code",[e._v("hessians")]),e._v("() adds ops to the graph to output the Hessian matrix of "),t("code",[e._v("ys")]),e._v(" with respect to "),t("code",[e._v("xs")]),e._v(". It returns a list of "),t("code",[e._v("Tensor")]),e._v(" of length len("),t("code",[e._v("xs")]),e._v(") where each tensor is the Hessian of sum("),t("code",[e._v("ys")]),e._v(").\nThe Hessian is a matrix of second-order partial derivatives of a scalar tensor (see https://en.wikipedia.org/wiki/Hessian_matrix for more details).")]),e._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ys")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" or list of tensors to be differentiated.")]),e._v(" "),t("li",[t("code",[e._v("xs")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" or list of tensors to be used for differentiation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": Optional "),t("code",[e._v("name")]),e._v(" to use for grouping all the gradient ops together. defaults to 'hessians'.")]),e._v(" "),t("li",[t("code",[e._v("colocate_gradients_with_ops")]),e._v(": See "),t("code",[e._v("gradients")]),e._v("() documentation for details.")]),e._v(" "),t("li",[t("code",[e._v("gate_gradients")]),e._v(": See "),t("code",[e._v("gradients")]),e._v("() documentation for details.")]),e._v(" "),t("li",[e._v("``: See "),t("code",[e._v("gradients")]),e._v("() documentation for details.")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A list of Hessian matrices of sum(ys) for each "),t("code",[e._v("x")]),e._v(" in "),t("code",[e._v("x")]),e._v("s.")]),e._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("LookupError")]),e._v(": if one of the operations between "),t("code",[e._v("xs")]),e._v(" and "),t("code",[e._v("ys")]),e._v(" does not have a registered gradient function.")])])])}),[],!1,null,null,null);s.default=o.exports}}]);