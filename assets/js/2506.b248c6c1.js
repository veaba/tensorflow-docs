(window.webpackJsonp=window.webpackJsonp||[]).push([[2506],{2697:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Create a case operation.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v2.case")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.case(\n    pred_fn_pairs,\n    default=None,\n    exclusive=False,\n    strict=False,\n    name='case'\n)\n")])])]),t("p",[t("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/switch_case",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.switch_case"),t("OutboundLink")],1),e._v("See also .")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("pred_fn_pairs")]),e._v(" parameter is a list of pairs of size N. Each pair contains a boolean scalar tensor and a python callable that creates the tensors to be returned if the boolean evaluates to True. "),t("code",[e._v("default")]),e._v(" is a callable generating a list of tensors. All the callables in "),t("code",[e._v("pred_fn_pairs")]),e._v(" as well as "),t("code",[e._v("default")]),e._v(" (if provided) should return the same number and types of tensors.\nIf "),t("code",[e._v("exclusive==True")]),e._v(", all predicates are evaluated, and an exception is thrown if more than one of the predicates evaluates to "),t("code",[e._v("True")]),e._v(". If "),t("code",[e._v("exclusive==False")]),e._v(", execution stops at the first predicate which evaluates to "),t("code",[e._v("True")]),e._v(", and the tensors generated by the corresponding function are returned immediately. If none of the predicates evaluate to "),t("code",[e._v("True")]),e._v(", this operation returns the tensors generated by "),t("code",[e._v("default")]),e._v(".\n"),t("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/case",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.case"),t("OutboundLink")],1),e._v(" supports nested structures as implemented in tf.contrib.framework.nest. All of the callables must return the same (possibly nested) value structure of lists, tuples, and/or named tuples. Singleton lists and tuples form the only exceptions to this: when returned by a callable, they are implicitly unpacked to single values. This behavior is disabled by passing strict=True.")]),e._v(" "),t("p",[e._v("Example 1:")]),e._v(" "),t("h4",{attrs:{id:"pseudocode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pseudocode","aria-hidden":"true"}},[e._v("#")]),e._v(" Pseudocode:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" if (x < y) return 17;\nelse return 23;\n")])])]),t("h4",{attrs:{id:"expressions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expressions","aria-hidden":"true"}},[e._v("#")]),e._v(" Expressions:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" f1 = lambda: tf.constant(17)\nf2 = lambda: tf.constant(23)\nr = tf.case([(tf.less(x, y), f1)], default=f2)\n")])])]),t("p",[e._v("Example 2:")]),e._v(" "),t("h4",{attrs:{id:"pseudocode-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pseudocode-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Pseudocode:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' if (x < y && x > z) raise OpError("Only one predicate may evaluate to True");\nif (x < y) return 17;\nelse if (x > z) return 23;\nelse return -1;\n')])])]),t("h4",{attrs:{id:"expressions-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expressions-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Expressions:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" def f1(): return tf.constant(17)\ndef f2(): return tf.constant(23)\ndef f3(): return tf.constant(-1)\nr = tf.case([(tf.less(x, y), f1), (tf.greater(x, z), f2)],\n         default=f3, exclusive=True)\n")])])]),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("pred_fn_pairs")]),e._v(": List of pairs of a boolean scalar tensor and a callable which returns a list of tensors.")]),e._v(" "),t("li",[t("code",[e._v("default")]),e._v(": Optional callable that returns a list of tensors.")]),e._v(" "),t("li",[t("code",[e._v("exclusive")]),e._v(": "),t("code",[e._v("True")]),e._v(" iff at most one predicate is allowed to evaluate to "),t("code",[e._v("True")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("strict")]),e._v(": A boolean that enables/disables '"),t("code",[e._v("strict")]),e._v("' mode; see above.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for this operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("The tensors returned by the first pair whose predicate evaluated to True, or those returned by "),t("code",[e._v("default")]),e._v(" if none does.")]),e._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": If "),t("code",[e._v("pred_fn_pairs")]),e._v(" is not a list/tuple.")]),e._v(" "),t("li",[t("code",[e._v("TypeError")]),e._v(": If "),t("code",[e._v("pred_fn_pairs")]),e._v(" is a list but does not contain 2-tuples.")]),e._v(" "),t("li",[t("code",[e._v("TypeError")]),e._v(": If "),t("code",[e._v("fns[i]")]),e._v(" is not callable for any i, or "),t("code",[e._v("default")]),e._v(" is not callable.")])]),e._v(" "),t("h4",{attrs:{id:"v2-compatibility"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v2-compatibility","aria-hidden":"true"}},[e._v("#")]),e._v(" V2 Compatibility")]),e._v(" "),t("p",[t("code",[e._v("pred_fn_pairs")]),e._v(" could be a dictionary in v1. However, tf.Tensor and tf.Variable are no longer hashable in v2, so cannot be used as a key for a dictionary. Please use a list or a tuple instead.")])])}),[],!1,null,null,null);a.default=r.exports}}]);