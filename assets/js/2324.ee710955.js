(window.webpackJsonp=window.webpackJsonp||[]).push([[2324],{2512:function(e,t,n){"use strict";n.r(t);var a=n(0),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("Generates a window function that can be used in inverse_stft.")]),e._v(" "),n("h3",{attrs:{id:"aliases"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("tf.compat.v1.signal.inverse_stft_window_fn")])]),e._v(" "),n("li",[n("code",[e._v("tf.compat.v2.signal.inverse_stft_window_fn")])])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(" tf.signal.inverse_stft_window_fn(\n    frame_step,\n    forward_window_fn=tf.signal.hann_window,\n    name=None\n)\n")])])]),n("p",[e._v("Constructs a window that is equal to the forward window with a further pointwise amplitude correction. inverse_stft_window_fn is equivalent to forward_window_fn in the case where it would produce an exact inverse.")]),e._v(" "),n("p",[e._v("See examples in inverse_stft documentation for usage.")]),e._v(" "),n("h4",{attrs:{id:"args"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("frame_step")]),e._v(": An integer scalar "),n("code",[e._v("Tensor")]),e._v(". The number of samples to step.")]),e._v(" "),n("li",[n("code",[e._v("forward_window_fn")]),e._v(": window_fn used in the forward transform, "),n("code",[e._v("stft")]),e._v(".")]),e._v(" "),n("li",[n("code",[e._v("name")]),e._v(": An optional "),n("code",[e._v("name")]),e._v(" for the operation.")])]),e._v(" "),n("h4",{attrs:{id:"returns"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),n("p",[e._v("A callable that takes a window length and a dtype keyword argument and returns a [window_length] Tensor of samples in the provided datatype. The returned window is suitable for reconstructing original waveform in inverse_stft.")])])}),[],!1,null,null,null);t.default=r.exports}}]);