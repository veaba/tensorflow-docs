(window.webpackJsonp=window.webpackJsonp||[]).push([[1741],{1932:function(e,t,i){"use strict";i.r(t);var a=i(0),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h2",{attrs:{id:"class-conv3d"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#class-conv3d","aria-hidden":"true"}},[e._v("#")]),e._v(" Class Conv3D")]),e._v(" "),i("p",[e._v("3D convolution layer (e.g. spatial convolution over volumes).")]),e._v(" "),i("h3",{attrs:{id:"aliases"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),i("ul",[i("li",[e._v("Class "),i("code",[e._v("tf.compat.v1.keras.layers.Conv3D")])]),e._v(" "),i("li",[e._v("Class "),i("code",[e._v("tf.compat.v1.keras.layers.Convolution3D")])]),e._v(" "),i("li",[e._v("Class "),i("code",[e._v("tf.compat.v2.keras.layers.Conv3D")])]),e._v(" "),i("li",[e._v("Class "),i("code",[e._v("tf.compat.v2.keras.layers.Convolution3D")])]),e._v(" "),i("li",[e._v("Class "),i("code",[e._v("tf.keras.layers.Convolution3D")])])]),e._v(" "),i("p",[e._v("This layer creates a convolution kernel that is convolved with the layer input to produce a tensor of outputs. If use_bias is True, a bias vector is created and added to the outputs. Finally, if activation is not None, it is applied to the outputs as well.")]),e._v(" "),i("p",[e._v('When using this layer as the first layer in a model, provide the keyword argument input_shape (tuple of integers, does not include the sample axis), e.g. input_shape=(128, 128, 128, 1) for 128x128x128 volumes with a single channel, in data_format="channels_last".')]),e._v(" "),i("h4",{attrs:{id:"arguments"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),i("ul",[i("li",[i("code",[e._v("filters")]),e._v(": Integer, the dimensionality of the output space (i.e. the number of output "),i("code",[e._v("filters")]),e._v(" in the convolution).")]),e._v(" "),i("li",[i("code",[e._v("kernel_size")]),e._v(": An integer or tuple/list of 3 integers, specifying the depth, height and width of the 3D convolution window. Can be a single integer to specify the same value for all spatial dimensions.")]),e._v(" "),i("li",[i("code",[e._v("strides")]),e._v(": An integer or tuple/list of 3 integers, specifying the "),i("code",[e._v("strides")]),e._v(" of the convolution along each spatial dimension. Can be a single integer to specify the same value for all spatial dimensions. Specifying any stride value != 1 is incompatible with specifying any "),i("code",[e._v("dilation_rate")]),e._v(" value != 1.")]),e._v(" "),i("li",[i("code",[e._v("padding")]),e._v(": one of "),i("code",[e._v('"valid"')]),e._v(" or "),i("code",[e._v('"same"')]),e._v(" (case-insensitive).")]),e._v(" "),i("li",[i("code",[e._v("data_format")]),e._v(": A string, one of "),i("code",[e._v("channels_last")]),e._v(" (default) or "),i("code",[e._v("channels_first")]),e._v(". The ordering of the dimensions in the inputs. "),i("code",[e._v("channels_last")]),e._v(" corresponds to inputs with shape ("),i("code",[e._v("batch, spatial_dim1, spatial_dim2, spatial_dim3, channels")]),e._v(") while "),i("code",[e._v("channels_first")]),e._v(" corresponds to inputs with shape ("),i("code",[e._v("batch, channels, spatial_dim1, spatial_dim2, spatial_dim3")]),e._v("). It defaults to the "),i("code",[e._v("image_data_format")]),e._v(" value found in your Keras config file at "),i("code",[e._v("~/.keras/keras.json")]),e._v('. If you never set it, then it will be "'),i("code",[e._v("channels_last")]),e._v('".')]),e._v(" "),i("li",[i("code",[e._v("dilation_rate")]),e._v(": an integer or tuple/list of 3 integers, specifying the dilation rate to use for dilated convolution. Can be a single integer to specify the same value for all spatial dimensions. Currently, specifying any "),i("code",[e._v("dilation_rate")]),e._v(" value != 1 is incompatible with specifying any stride value != 1.")]),e._v(" "),i("li",[i("code",[e._v("activation")]),e._v(": Activation function to use. If you don't specify anything, no "),i("code",[e._v("activation")]),e._v(' is applied (ie. "linear" '),i("code",[e._v("activation")]),e._v(": a(x) = x).")]),e._v(" "),i("li",[i("code",[e._v("use_bias")]),e._v(": Boolean, whether the layer uses a bias vector.")]),e._v(" "),i("li",[i("code",[e._v("kernel_initializer")]),e._v(": Initializer for the "),i("code",[e._v("kernel")]),e._v(" weights matrix.")]),e._v(" "),i("li",[i("code",[e._v("bias_initializer")]),e._v(": Initializer for the bias vector.")]),e._v(" "),i("li",[i("code",[e._v("kernel")]),e._v("_regularizer: Regularizer function applied to the "),i("code",[e._v("kernel")]),e._v(" weights matrix.")]),e._v(" "),i("li",[i("code",[e._v("bias_regularizer")]),e._v(": Regularizer function applied to the bias vector.")]),e._v(" "),i("li",[i("code",[e._v("activity_regularizer")]),e._v(': Regularizer function applied to the output of the layer (its "'),i("code",[e._v("activation")]),e._v('")..')]),e._v(" "),i("li",[i("code",[e._v("kernel")]),e._v("_constraint: Constraint function applied to the "),i("code",[e._v("kernel")]),e._v(" matrix.")]),e._v(" "),i("li",[i("code",[e._v("bias_constraint")]),e._v(": Constraint function applied to the bias vector.")])]),e._v(" "),i("h4",{attrs:{id:"input-shape"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#input-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" Input shape:")]),e._v(" "),i("p",[e._v("5D tensor with shape: (samples, channels, conv_dim1, conv_dim2, conv_dim3) if data_format='channels_first' or 5D tensor with shape: (samples, conv_dim1, conv_dim2, conv_dim3, channels) if data_format='channels_last'.")]),e._v(" "),i("h4",{attrs:{id:"output-shape"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#output-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" Output shape:")]),e._v(" "),i("p",[e._v("5D tensor with shape: (samples, filters, new_conv_dim1, new_conv_dim2, new_conv_dim3) if data_format='channels_first' or 5D tensor with shape: (samples, new_conv_dim1, new_conv_dim2, new_conv_dim3, filters) if data_format='channels_last'. new_conv_dim1, new_conv_dim2 and new_conv_dim3 values might have changed due to padding.")]),e._v(" "),i("h2",{attrs:{id:"init"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),i("strong",[e._v("init")])]),e._v(" "),i("p",[i("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/convolutional.py#L582-L616",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),i("OutboundLink")],1)]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v(" __init__(\n    filters,\n    kernel_size,\n    strides=(1, 1, 1),\n    padding='valid',\n    data_format=None,\n    dilation_rate=(1, 1, 1),\n    activation=None,\n    use_bias=True,\n    kernel_initializer='glorot_uniform',\n    bias_initializer='zeros',\n    kernel_regularizer=None,\n    bias_regularizer=None,\n    activity_regularizer=None,\n    kernel_constraint=None,\n    bias_constraint=None,\n    **kwargs\n)\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);