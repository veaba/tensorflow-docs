(window.webpackJsonp=window.webpackJsonp||[]).push([[2003],{2191:function(e,a,t){"use strict";t.r(a);var n=t(0),_=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Defined in generated file: python/ops/gen_array_ops.py")]),e._v(" "),t("p",[e._v("Copy a tensor setting everything outside a central band in each innermost matrix")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.linalg.band_part")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v1.matrix_band_part")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.linalg.band_part")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.linalg.band_part(\n    input,\n    num_lower,\n    num_upper,\n    name=None\n)\n")])])]),t("h3",{attrs:{id:"used-in-the-tutorials"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("T")]),e._v("r"),t("code",[e._v("a")]),e._v("n"),t("code",[e._v("s")]),e._v("f"),t("code",[e._v("o")]),e._v("r"),t("code",[e._v("m")]),e._v("e"),t("code",[e._v("r")]),e._v(" "),t("code",[e._v("m")]),e._v("o"),t("code",[e._v("d")]),e._v("e"),t("code",[e._v("l")]),e._v(" "),t("code",[e._v("f")]),e._v("o"),t("code",[e._v("r")]),e._v(" "),t("code",[e._v("l")]),e._v("a"),t("code",[e._v("n")]),e._v("g"),t("code",[e._v("u")]),e._v("a"),t("code",[e._v("g")]),e._v("e"),t("code"),e._v("u"),t("code",[e._v("n")]),e._v("d"),t("code",[e._v("e")]),e._v("r"),t("code",[e._v("s")]),e._v("t"),t("code",[e._v("a")]),e._v("n"),t("code",[e._v("d")]),e._v("i"),t("code",[e._v("n")]),e._v("g``")])]),e._v(" "),t("p",[e._v("to zero.")]),e._v(" "),t("p",[e._v("The band part is computed as follows: Assume input has k dimensions [I, J, K, ..., M, N], then the output is a tensor with the same shape where")]),e._v(" "),t("p",[e._v("band[i, j, k, ..., m, n] = in_band(m, n) * input[i, j, k, ..., m, n].")]),e._v(" "),t("p",[e._v("The indicator function")]),e._v(" "),t("p",[e._v("in_band(m, n) = (num_lower < 0 || (m-n) <= num_lower)) && (num_upper < 0 || (n-m) <= num_upper).")]),e._v(" "),t("h4",{attrs:{id:"for-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" # if 'input' is [[ 0,  1,  2, 3]\n                 [-1,  0,  1, 2]\n                 [-2, -1,  0, 1]\n                 [-3, -2, -1, 0]],\n\ntf.matrix_band_part(input, 1, -1) ==> [[ 0,  1,  2, 3]\n                                       [-1,  0,  1, 2]\n                                       [ 0, -1,  0, 1]\n                                       [ 0,  0, -1, 0]],\n\ntf.matrix_band_part(input, 2, 1) ==> [[ 0,  1,  0, 0]\n                                      [-1,  0,  1, 0]\n                                      [-2, -1,  0, 1]\n                                      [ 0, -2, -1, 0]]\n")])])]),t("h4",{attrs:{id:"useful-special-cases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#useful-special-cases","aria-hidden":"true"}},[e._v("#")]),e._v(" Useful special cases:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  tf.matrix_band_part(input, 0, -1) ==> Upper triangular part.\n tf.matrix_band_part(input, -1, 0) ==> Lower triangular part.\n tf.matrix_band_part(input, 0, 0) ==> Diagonal.\n")])])]),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("input")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Ran"),t("code",[e._v("k")]),e._v(" "),t("code",[e._v("k")]),e._v(" tensor.")]),e._v(" "),t("li",[t("code",[e._v("num_lower")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("int64")]),e._v(". 0-D tensor. Number of subdiagonals to "),t("code",[e._v("k")]),e._v("eep. If negative, "),t("code",[e._v("k")]),e._v("eep entire lower triangle.")]),e._v(" "),t("li",[t("code",[e._v("num_upper")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must have the same type as "),t("code",[e._v("num_lower")]),e._v(". 0-D tensor. Number of superdiagonals to "),t("code",[e._v("k")]),e._v("eep. If negative, "),t("code",[e._v("k")]),e._v("eep entire upper triangle.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor. Has the same type as input.")])])}),[],!1,null,null,null);a.default=_.exports}}]);