(window.webpackJsonp=window.webpackJsonp||[]).push([[1568],{1759:function(e,a,r){"use strict";r.r(a);var s=r(0),t=Object(s.a)({},(function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("Returns whether x is a Keras tensor.")]),e._v(" "),r("h3",{attrs:{id:"aliases"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("tf.compat.v1.keras.backend.is_keras_tensor")])]),e._v(" "),r("li",[r("code",[e._v("tf.compat.v2.keras.backend.is_keras_tensor")])])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" tf.keras.backend.is_keras_tensor(x)\n")])])]),r("p",[e._v('A "Keras tensor" is a tensor that was returned by a Keras layer, (Layer class) or by Input.')]),e._v(" "),r("h4",{attrs:{id:"arguments"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("x")]),e._v(": A candidate tensor.")])]),e._v(" "),r("h4",{attrs:{id:"returns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A boolean: Whether the argument is a Keras tensor.")]),e._v(" "),r("h4",{attrs:{id:"raises"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("ValueError")]),e._v(": In case "),r("code",[e._v("x")]),e._v(" is not a symbolic tensor.")])]),e._v(" "),r("h4",{attrs:{id:"examples"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("     >>> import tensorflow as tf\n    >>> import numpy\n    >>> from keras import backend as K\n    >>> from keras.layers import Input, Dense\n    >>> np_var = numpy.array([1, 2])\n    >>> K.is_keras_tensor(np_var) # A numpy array is not a symbolic tensor.\n    ValueError\n    >>> k_var = tf.compat.v1.placeholder('float32', shape=(1,1))\n    >>> K.is_keras_tensor(k_var) # A variable indirectly created outside of\n    keras is not a Keras tensor.\n    False\n    >>> keras_var = K.variable(np_var)\n    >>> K.is_keras_tensor(keras_var)  # A variable created with the keras\n    backend is not a Keras tensor.\n    False\n    >>> keras_placeholder = K.placeholder(shape=(2, 4, 5))\n    >>> K.is_keras_tensor(keras_placeholder)  # A placeholder is not a Keras\n    tensor.\n    False\n    >>> keras_input = Input([10])\n    >>> K.is_keras_tensor(keras_input) # An Input is a Keras tensor.\n    True\n    >>> keras_layer_output = Dense(10)(keras_input)\n    >>> K.is_keras_tensor(keras_layer_output) # Any Keras layer output is a\n    Keras tensor.\n    True\n")])])])])}),[],!1,null,null,null);a.default=t.exports}}]);