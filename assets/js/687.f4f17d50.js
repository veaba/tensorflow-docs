(window.webpackJsonp=window.webpackJsonp||[]).push([[687],{875:function(e,a,t){"use strict";t.r(a);var r=t(0),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Inserts a placeholder for a tensor that will be always fed.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.compat.v1.placeholder(\n    dtype,\n    shape=None,\n    name=None\n)\n")])])]),t("p",[e._v("Important: This tensor will produce an error if evaluated. Its value must be fed using the feed_dict optional argument to Session.run(), Tensor.eval(), or Operation.run().")]),e._v(" "),t("h4",{attrs:{id:"for-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" x = tf.compat.v1.placeholder(tf.float32, shape=(1024, 1024))\ny = tf.matmul(x, x)\n\nwith tf.compat.v1.Session() as sess:\n  print(sess.run(y))  # ERROR: will fail because x was not fed.\n\n  rand_array = np.random.rand(1024, 1024)\n  print(sess.run(y, feed_dict={x: rand_array}))  # Will succeed.\n")])])]),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("dtype")]),e._v(": The type of elements in the tensor to be fed.")]),e._v(" "),t("li",[t("code",[e._v("shape")]),e._v(": The "),t("code",[e._v("shape")]),e._v(" of the tensor to be fed (optional). If the "),t("code",[e._v("shape")]),e._v(" is not specified, you can feed a tensor of any "),t("code",[e._v("shape")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that may be used as a handle for feeding a value, but not evaluated directly.")]),e._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("RuntimeError")]),e._v(": if eager execution is enabled")])]),e._v(" "),t("h4",{attrs:{id:"eager-compatibility"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eager-compatibility","aria-hidden":"true"}},[e._v("#")]),e._v(" Eager Compatibility")]),e._v(" "),t("p",[e._v("Placeholders are not compatible with eager execution.")])])}),[],!1,null,null,null);a.default=s.exports}}]);