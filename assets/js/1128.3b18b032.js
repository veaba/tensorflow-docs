(window.webpackJsonp=window.webpackJsonp||[]).push([[1128],{1317:function(a,e,t){"use strict";t.r(e);var r=t(0),s=Object(r.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("Returns a SaveableObject for saving/restoring iterator state using Saver.")]),a._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("tf.compat.v1.data.experimental.make_saveable_from_iterator")])]),a._v(" "),t("li",[t("code",[a._v("tf.compat.v2.data.experimental.make_saveable_from_iterator")])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" tf.data.experimental.make_saveable_from_iterator(iterator)\n")])])]),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[a._v("#")]),a._v(" Args:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("iterator")]),a._v(": Iterator.")])]),a._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns:")]),a._v(" "),t("p",[a._v("A SaveableObject for saving/restoring iterator state using Saver.")]),a._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[a._v("#")]),a._v(" Raises:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("ValueError")]),a._v(": If iterator does not support checkpointing.")])]),a._v(" "),t("h4",{attrs:{id:"for-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[a._v("#")]),a._v(" For example:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" with tf.Graph().as_default():\n  ds = tf.data.Dataset.range(10)\n  iterator = ds.make_initializable_iterator()\n  # Build the iterator SaveableObject.\n  saveable_obj = tf.data.experimental.make_saveable_from_iterator(iterator)\n  # Add the SaveableObject to the SAVEABLE_OBJECTS collection so\n  # it can be automatically saved using Saver.\n  tf.compat.v1.add_to_collection(tf.GraphKeys.SAVEABLE_OBJECTS, saveable_obj)\n  saver = tf.compat.v1.train.Saver()\n\n  while continue_training:\n    ... Perform training ...\n    if should_save_checkpoint:\n      saver.save()\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);