(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{235:function(e,t,r){"use strict";r.r(t);var a=r(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"class-dimension"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#class-dimension","aria-hidden":"true"}},[e._v("#")]),e._v(" Class Dimension")]),e._v(" "),r("p",[e._v("Represents the value of one dimension in a TensorShape.")]),e._v(" "),r("h2",{attrs:{id:"init"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("init")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L184-L198",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __init__(value)\n")])])]),r("p",[e._v("Creates a new Dimension with the given value.")]),e._v(" "),r("h2",{attrs:{id:"properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),r("h3",{attrs:{id:"value"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#value","aria-hidden":"true"}},[e._v("#")]),e._v(" value")]),e._v(" "),r("p",[e._v("The value of this dimension, or None if it is unknown.")]),e._v(" "),r("h2",{attrs:{id:"methods"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),r("h3",{attrs:{id:"add"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#add","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("add")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L317-L346",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __add__(other)\n")])])]),r("p",[e._v("Returns the sum of self and other.")]),e._v(" "),r("p",[e._v("Dimensions are summed as follows:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" tf.compat.v1.Dimension(m)    + tf.compat.v1.Dimension(n)     ==\ntf.compat.v1.Dimension(m + n)\ntf.compat.v1.Dimension(m)    + tf.compat.v1.Dimension(None)  # equiv. to\ntf.compat.v1.Dimension(None)\ntf.compat.v1.Dimension(None) + tf.compat.v1.Dimension(n)     # equiv. to\ntf.compat.v1.Dimension(None)\ntf.compat.v1.Dimension(None) + tf.compat.v1.Dimension(None)  # equiv. to\ntf.compat.v1.Dimension(None)\n")])])]),r("h4",{attrs:{id:"args"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension, or a value accepted by "),r("code",[e._v("as_dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"returns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A Dimension whose value is the sum of self and other.")]),e._v(" "),r("h3",{attrs:{id:"div"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#div","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("div")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L494-L508",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __div__(other)\n")])])]),r("p",[e._v("DEPRECATED: Use "),r("strong",[e._v("floordiv")]),e._v(" via x // y instead.")]),e._v(" "),r("p",[e._v("This function exists only for backwards compatibility purposes; new code should use "),r("strong",[e._v("floordiv")]),e._v(" via the syntax x // y. Using x // y communicates clearly that the result rounds down, and is forward compatible to Python 3.")]),e._v(" "),r("h4",{attrs:{id:"args-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" "),r("code",[e._v("Dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"returns-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A Dimension whose value is the integer quotient of self and other.")]),e._v(" "),r("h3",{attrs:{id:"eq"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eq","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("eq")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L207-L215",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __eq__(other)\n")])])]),r("p",[e._v("Returns true if other has the same known value as this Dimension.")]),e._v(" "),r("h3",{attrs:{id:"floordiv"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#floordiv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("floordiv")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L448-L477",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __floordiv__(other)\n")])])]),r("p",[e._v("Returns the quotient of self and other rounded down.")]),e._v(" "),r("p",[e._v("Dimensions are divided as follows:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" tf.compat.v1.Dimension(m)    // tf.compat.v1.Dimension(n)     ==\ntf.compat.v1.Dimension(m // n)\ntf.compat.v1.Dimension(m)    // tf.compat.v1.Dimension(None)  # equiv. to\ntf.compat.v1.Dimension(None)\ntf.compat.v1.Dimension(None) // tf.compat.v1.Dimension(n)     # equiv. to\ntf.compat.v1.Dimension(None)\ntf.compat.v1.Dimension(None) // tf.compat.v1.Dimension(None)  # equiv. to\ntf.compat.v1.Dimension(None)\n")])])]),r("h4",{attrs:{id:"args-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension, or a value accepted by "),r("code",[e._v("as_dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"returns-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A Dimension whose value is the integer quotient of self and other.")]),e._v(" "),r("h3",{attrs:{id:"ge"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ge","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("ge")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L673-L696",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __ge__(other)\n")])])]),r("p",[e._v("Returns True if self is known to be greater than or equal to other.")]),e._v(" "),r("p",[e._v("Dimensions are compared as follows:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" (tf.compat.v1.Dimension(m)    >= tf.compat.v1.Dimension(n))    == (m >= n)\n(tf.compat.v1.Dimension(m)    >= tf.compat.v1.Dimension(None)) == None\n(tf.compat.v1.Dimension(None) >= tf.compat.v1.Dimension(n))    == None\n(tf.compat.v1.Dimension(None) >= tf.compat.v1.Dimension(None)) == None\n")])])]),r("h4",{attrs:{id:"args-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension.")])]),e._v(" "),r("h4",{attrs:{id:"returns-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("The value of self.value >= other.value if both are known, otherwise None.")]),e._v(" "),r("h3",{attrs:{id:"gt"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gt","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("gt")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L648-L671",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __gt__(other)\n")])])]),r("p",[e._v("Returns True if self is known to be greater than other.")]),e._v(" "),r("p",[e._v("Dimensions are compared as follows:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" (tf.compat.v1.Dimension(m)    > tf.compat.v1.Dimension(n))    == (m > n)\n(tf.compat.v1.Dimension(m)    > tf.compat.v1.Dimension(None)) == None\n(tf.compat.v1.Dimension(None) > tf.compat.v1.Dimension(n))    == None\n(tf.compat.v1.Dimension(None) > tf.compat.v1.Dimension(None)) == None\n")])])]),r("h4",{attrs:{id:"args-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension.")])]),e._v(" "),r("h4",{attrs:{id:"returns-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("The value of self.value > other.value if both are known, otherwise None.")]),e._v(" "),r("h3",{attrs:{id:"le"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#le","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("le")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L623-L646",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __le__(other)\n")])])]),r("p",[e._v("Returns True if self is known to be less than or equal to other.")]),e._v(" "),r("p",[e._v("Dimensions are compared as follows:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" (tf.compat.v1.Dimension(m)    <= tf.compat.v1.Dimension(n))    == (m <= n)\n(tf.compat.v1.Dimension(m)    <= tf.compat.v1.Dimension(None)) == None\n(tf.compat.v1.Dimension(None) <= tf.compat.v1.Dimension(n))    == None\n(tf.compat.v1.Dimension(None) <= tf.compat.v1.Dimension(None)) == None\n")])])]),r("h4",{attrs:{id:"args-6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension.")])]),e._v(" "),r("h4",{attrs:{id:"returns-6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("The value of self.value <= other.value if both are known, otherwise None.")]),e._v(" "),r("h3",{attrs:{id:"lt"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lt","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("lt")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L598-L621",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __lt__(other)\n")])])]),r("p",[e._v("Returns True if self is known to be less than other.")]),e._v(" "),r("p",[e._v("Dimensions are compared as follows:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" (tf.compat.v1.Dimension(m)    < tf.compat.v1.Dimension(n))    == (m < n)\n(tf.compat.v1.Dimension(m)    < tf.compat.v1.Dimension(None)) == None\n(tf.compat.v1.Dimension(None) < tf.compat.v1.Dimension(n))    == None\n(tf.compat.v1.Dimension(None) < tf.compat.v1.Dimension(None)) == None\n")])])]),r("h4",{attrs:{id:"args-7"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension.")])]),e._v(" "),r("h4",{attrs:{id:"returns-7"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("The value of self.value < other.value if both are known, otherwise None.")]),e._v(" "),r("h3",{attrs:{id:"mod"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mod","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("mod")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L558-L584",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __mod__(other)\n")])])]),r("p",[e._v("Returns self modulo other.")]),e._v(" "),r("p",[e._v("Dimension moduli are computed as follows:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" tf.compat.v1.Dimension(m)    % tf.compat.v1.Dimension(n)     ==\ntf.compat.v1.Dimension(m % n)\ntf.compat.v1.Dimension(m)    % tf.compat.v1.Dimension(None)  # equiv. to\ntf.compat.v1.Dimension(None)\ntf.compat.v1.Dimension(None) % tf.compat.v1.Dimension(n)     # equiv. to\ntf.compat.v1.Dimension(None)\ntf.compat.v1.Dimension(None) % tf.compat.v1.Dimension(None)  # equiv. to\ntf.compat.v1.Dimension(None)\n")])])]),r("h4",{attrs:{id:"args-8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension, or a value accepted by "),r("code",[e._v("as_dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"returns-8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A Dimension whose value is self modulo other.")]),e._v(" "),r("h3",{attrs:{id:"mul"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mul","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("mul")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L405-L435",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __mul__(other)\n")])])]),r("p",[e._v("Returns the product of self and other.")]),e._v(" "),r("p",[e._v("Dimensions are summed as follows:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" tf.compat.v1.Dimension(m)    * tf.compat.v1.Dimension(n)     ==\ntf.compat.v1.Dimension(m * n)\ntf.compat.v1.Dimension(m)    * tf.compat.v1.Dimension(None)  # equiv. to\ntf.compat.v1.Dimension(None)\ntf.compat.v1.Dimension(None) * tf.compat.v1.Dimension(n)     # equiv. to\ntf.compat.v1.Dimension(None)\ntf.compat.v1.Dimension(None) * tf.compat.v1.Dimension(None)  # equiv. to\ntf.compat.v1.Dimension(None)\n")])])]),r("h4",{attrs:{id:"args-9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension, or a value accepted by "),r("code",[e._v("as_dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"returns-9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A Dimension whose value is the product of self and other.")]),e._v(" "),r("h3",{attrs:{id:"ne"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ne","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("ne")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L217-L225",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __ne__(other)\n")])])]),r("p",[e._v("Returns true if other has a different known value from self.")]),e._v(" "),r("h3",{attrs:{id:"radd"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#radd","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("radd")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L348-L357",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __radd__(other)\n")])])]),r("p",[e._v("Returns the sum of other and self.")]),e._v(" "),r("h4",{attrs:{id:"args-10"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension, or a value accepted by "),r("code",[e._v("as_dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"returns-10"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A Dimension whose value is the sum of self and other.")]),e._v(" "),r("h3",{attrs:{id:"rdiv"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rdiv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("rdiv")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L510-L524",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __rdiv__(other)\n")])])]),r("p",[e._v("Use "),r("strong",[e._v("floordiv")]),e._v(" via x // y instead.")]),e._v(" "),r("p",[e._v("This function exists only to have a better error message. Instead of: TypeError: unsupported operand type(s) for /: 'int' and 'Dimension', this function will explicitly call for usage of // instead.")]),e._v(" "),r("h4",{attrs:{id:"args-11"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" "),r("code",[e._v("Dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"raises"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),r("p",[e._v("TypeError.")]),e._v(" "),r("h3",{attrs:{id:"rfloordiv"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rfloordiv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("rfloordiv")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L479-L492",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __rfloordiv__(other)\n")])])]),r("p",[e._v("Returns the quotient of other and self rounded down.")]),e._v(" "),r("h4",{attrs:{id:"args-12"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension, or a value accepted by "),r("code",[e._v("as_dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"returns-11"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A Dimension whose value is the integer quotient of self and other.")]),e._v(" "),r("h3",{attrs:{id:"rmod"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rmod","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("rmod")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L586-L596",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __rmod__(other)\n")])])]),r("p",[e._v("Returns other modulo self.")]),e._v(" "),r("h4",{attrs:{id:"args-13"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension, or a value accepted by "),r("code",[e._v("as_dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"returns-12"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A Dimension whose value is other modulo self.")]),e._v(" "),r("h3",{attrs:{id:"rmul"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rmul","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("rmul")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L437-L446",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __rmul__(other)\n")])])]),r("p",[e._v("Returns the product of self and other.")]),e._v(" "),r("h4",{attrs:{id:"args-14"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension, or a value accepted by "),r("code",[e._v("as_dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"returns-13"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A Dimension whose value is the product of self and other.")]),e._v(" "),r("h3",{attrs:{id:"rsub"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rsub","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("rsub")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L390-L403",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __rsub__(other)\n")])])]),r("p",[e._v("Returns the subtraction of self from other.")]),e._v(" "),r("h4",{attrs:{id:"args-15"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension, or a value accepted by "),r("code",[e._v("as_dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"returns-14"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A Dimension whose value is the subtraction of self from other.")]),e._v(" "),r("h3",{attrs:{id:"rtruediv"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rtruediv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("rtruediv")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L542-L556",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __rtruediv__(other)\n")])])]),r("p",[e._v("Use "),r("strong",[e._v("floordiv")]),e._v(" via x // y instead.")]),e._v(" "),r("p",[e._v("This function exists only to have a better error message. Instead of: TypeError: unsupported operand type(s) for /: 'int' and 'Dimension', this function will explicitly call for usage of // instead.")]),e._v(" "),r("h4",{attrs:{id:"args-16"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" "),r("code",[e._v("Dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"raises-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),r("p",[e._v("TypeError.")]),e._v(" "),r("h3",{attrs:{id:"sub"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sub","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("sub")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L359-L388",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __sub__(other)\n")])])]),r("p",[e._v("Returns the subtraction of other from self.")]),e._v(" "),r("p",[e._v("Dimensions are subtracted as follows:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" tf.compat.v1.Dimension(m)    - tf.compat.v1.Dimension(n)     ==\ntf.compat.v1.Dimension(m - n)\ntf.compat.v1.Dimension(m)    - tf.compat.v1.Dimension(None)  # equiv. to\ntf.compat.v1.Dimension(None)\ntf.compat.v1.Dimension(None) - tf.compat.v1.Dimension(n)     # equiv. to\ntf.compat.v1.Dimension(None)\ntf.compat.v1.Dimension(None) - tf.compat.v1.Dimension(None)  # equiv. to\ntf.compat.v1.Dimension(None)\n")])])]),r("h4",{attrs:{id:"args-17"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-17","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension, or a value accepted by "),r("code",[e._v("as_dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"returns-15"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A Dimension whose value is the subtraction of other from self.")]),e._v(" "),r("h3",{attrs:{id:"truediv"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#truediv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("truediv")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L526-L540",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __truediv__(other)\n")])])]),r("p",[e._v("Use "),r("strong",[e._v("floordiv")]),e._v(" via x // y instead.")]),e._v(" "),r("p",[e._v("This function exists only to have a better error message. Instead of: TypeError: unsupported operand type(s) for /: 'Dimension' and 'int', this function will explicitly call for usage of // instead.")]),e._v(" "),r("h4",{attrs:{id:"args-18"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-18","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" "),r("code",[e._v("Dimension")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"raises-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),r("p",[e._v("TypeError.")]),e._v(" "),r("h3",{attrs:{id:"assert-is-compatible-with"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#assert-is-compatible-with","aria-hidden":"true"}},[e._v("#")]),e._v(" assert_is_compatible_with")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L263-L275",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" assert_is_compatible_with(other)\n")])])]),r("p",[e._v("Raises an exception if other is not compatible with this Dimension.")]),e._v(" "),r("h4",{attrs:{id:"args-19"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-19","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension.")])]),e._v(" "),r("h4",{attrs:{id:"raises-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("ValueError")]),e._v(": If "),r("code",[e._v("self")]),e._v(" and "),r("code",[e._v("other")]),e._v(" are not compatible (see is_compatible_with).")])]),e._v(" "),r("h3",{attrs:{id:"is-compatible-with"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#is-compatible-with","aria-hidden":"true"}},[e._v("#")]),e._v(" is_compatible_with")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L244-L261",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" is_compatible_with(other)\n")])])]),r("p",[e._v("Returns true if other is compatible with this Dimension.")]),e._v(" "),r("p",[e._v("Two known Dimensions are compatible if they have the same value. An unknown Dimension is compatible with all other Dimensions.")]),e._v(" "),r("h4",{attrs:{id:"args-20"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-20","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension.")])]),e._v(" "),r("h4",{attrs:{id:"returns-16"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("True if this Dimension and other are compatible.")]),e._v(" "),r("h3",{attrs:{id:"merge-with"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#merge-with","aria-hidden":"true"}},[e._v("#")]),e._v(" merge_with")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/tensor_shape.py#L277-L315",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" merge_with(other)\n")])])]),r("p",[e._v("Returns a Dimension that combines the information in self and other.")]),e._v(" "),r("p",[e._v("Dimensions are combined as follows:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" tf.compat.v1.Dimension(n)   .merge_with(tf.compat.v1.Dimension(n))     ==\ntf.compat.v1.Dimension(n)\ntf.compat.v1.Dimension(n)   .merge_with(tf.compat.v1.Dimension(None))  ==\ntf.compat.v1.Dimension(n)\ntf.compat.v1.Dimension(None).merge_with(tf.compat.v1.Dimension(n))     ==\ntf.compat.v1.Dimension(n)\n# equivalent to tf.compat.v1.Dimension(None)\ntf.compat.v1.Dimension(None).merge_with(tf.compat.v1.Dimension(None))\n\n# raises ValueError for n != m\ntf.compat.v1.Dimension(n)   .merge_with(tf.compat.v1.Dimension(m))\n")])])]),r("h4",{attrs:{id:"args-21"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-21","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("other")]),e._v(": An"),r("code",[e._v("other")]),e._v(" Dimension.")])]),e._v(" "),r("h4",{attrs:{id:"returns-17"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-17","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A Dimension containing the combined information of self and other.")]),e._v(" "),r("h4",{attrs:{id:"raises-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("ValueError")]),e._v(": If "),r("code",[e._v("self")]),e._v(" and "),r("code",[e._v("other")]),e._v(" are not compatible (see is_compatible_with).")])])])}),[],!1,null,null,null);t.default=s.exports}}]);