(window.webpackJsonp=window.webpackJsonp||[]).push([[2477],{2668:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"class-graph"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-graph","aria-hidden":"true"}},[e._v("#")]),e._v(" Class Graph")]),e._v(" "),a("p",[e._v("A TensorFlow computation, represented as a dataflow graph.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[e._v("Class "),a("code",[e._v("tf.compat.v1.Graph")])]),e._v(" "),a("li",[e._v("Class "),a("code",[e._v("tf.compat.v2.Graph")]),e._v(" "),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/Operation",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.Operation"),a("OutboundLink")],1),e._v("A Graph contains a set of  objects, which represent units of computation; and tf.Tensor objects, which represent the units of data that flow between operations.")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/get_default_graph",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.get_default_graph"),a("OutboundLink")],1),e._v("A default Graph is always registered, and accessible by calling . To add an operation to the default graph, simply call one of the functions that defines a new Operation:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" c = tf.constant(4.0)\nassert c.graph is tf.compat.v1.get_default_graph()\n")])])]),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/Graph#as_default",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.Graph.as_default"),a("OutboundLink")],1),e._v("Another typical usage involves the  context manager, which overrides the current default graph for the lifetime of the context:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" g = tf.Graph()\nwith g.as_default():\n  # Define operations and tensors in `g`.\n  c = tf.constant(30.0)\n  assert c.graph is g\n")])])]),a("p",[e._v("Important note: This class is not thread-safe for graph construction. All operations should be created from a single thread, or external synchronization must be provided. Unless otherwise specified, all methods are not thread-safe.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/Variable",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.Variable"),a("OutboundLink")],1),e._v('A Graph instance supports an arbitrary number of "collections" that are identified by name. For convenience when building a large graph, collections can store groups of related objects: for example, the  uses a collection (named tf.GraphKeys.GLOBAL_VARIABLES) for all variables that are created during the construction of a graph. The caller may define additional collections by specifying a new name.')]),e._v(" "),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("init")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L2814-L2926",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __init__()\n")])])]),a("p",[e._v("Creates a new, empty Graph.")]),e._v(" "),a("h2",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),a("h3",{attrs:{id:"building-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#building-function","aria-hidden":"true"}},[e._v("#")]),e._v(" building_function")]),e._v(" "),a("p",[e._v("Returns True iff this graph represents a function.")]),e._v(" "),a("h3",{attrs:{id:"collections"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#collections","aria-hidden":"true"}},[e._v("#")]),e._v(" collections")]),e._v(" "),a("p",[e._v("Returns the names of the collections known to this graph.")]),e._v(" "),a("h3",{attrs:{id:"finalized"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#finalized","aria-hidden":"true"}},[e._v("#")]),e._v(" finalized")]),e._v(" "),a("p",[e._v("True if this graph has been finalized.")]),e._v(" "),a("h3",{attrs:{id:"graph-def-versions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#graph-def-versions","aria-hidden":"true"}},[e._v("#")]),e._v(" graph_def_versions")]),e._v(" "),a("p",[e._v("The GraphDef version information of this graph.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/code/tensorflow/core/framework/graph.proto",target:"_blank",rel:"noopener noreferrer"}},[e._v("GraphDef"),a("OutboundLink")],1),e._v("For details on the meaning of each version, see .")]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("VersionDef")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"seed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seed","aria-hidden":"true"}},[e._v("#")]),e._v(" seed")]),e._v(" "),a("p",[e._v("The graph-level random seed of this graph.")]),e._v(" "),a("h3",{attrs:{id:"version"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#version","aria-hidden":"true"}},[e._v("#")]),e._v(" version")]),e._v(" "),a("p",[e._v("Returns a version number that increases as ops are added to the graph.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/Graph#graph_def_versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.Graph.graph_def_versions"),a("OutboundLink")],1),e._v("Note that this is unrelated to the .")]),e._v(" "),a("h4",{attrs:{id:"returns-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("An integer version that increases as ops are added to the graph.")]),e._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),a("h3",{attrs:{id:"add-to-collection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-to-collection","aria-hidden":"true"}},[e._v("#")]),e._v(" add_to_collection")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3879-L3895",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" add_to_collection(\n    name,\n    value\n)\n")])])]),a("p",[e._v("Stores "),a("code",[e._v("value")]),e._v(" in the collection with the given "),a("code",[e._v("name")]),e._v(".\nNote that collections are not sets, so it is possible to add a value to a collection several times.")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": The key for the collection. The "),a("code",[e._v("GraphKeys")]),e._v(" class contains many standard "),a("code",[e._v("name")]),e._v("s for collections.")]),e._v(" "),a("li",[a("code",[e._v("value")]),e._v(": The "),a("code",[e._v("value")]),e._v(" to add to the collection.")])]),e._v(" "),a("h3",{attrs:{id:"add-to-collections"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-to-collections","aria-hidden":"true"}},[e._v("#")]),e._v(" add_to_collections")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3897-L3916",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" add_to_collections(\n    names,\n    value\n)\n")])])]),a("p",[e._v("Stores "),a("code",[e._v("value")]),e._v(" in the collections given by "),a("code",[e._v("names")]),e._v(".\nNote that collections are not sets, so it is possible to add a "),a("code",[e._v("value")]),e._v(" to a collection several times. This function makes sure that duplicates in "),a("code",[e._v("names")]),e._v(" are ignored, but it will not check for pre-existing membership of "),a("code",[e._v("value")]),e._v(" in any of the collections in "),a("code",[e._v("names")]),e._v(".\n"),a("code",[e._v("names")]),e._v(" can be any iterable, but if "),a("code",[e._v("names")]),e._v(" is a string, it is treated as a single collection name.")]),e._v(" "),a("h4",{attrs:{id:"args-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("names")]),e._v(": The keys for the collections to add to. The "),a("code",[e._v("GraphKeys")]),e._v(" class contains many standard "),a("code",[e._v("names")]),e._v(" for collections.")]),e._v(" "),a("li",[a("code",[e._v("value")]),e._v(": The "),a("code",[e._v("value")]),e._v(" to add to the collections.")])]),e._v(" "),a("h3",{attrs:{id:"as-default"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#as-default","aria-hidden":"true"}},[e._v("#")]),e._v(" as_default")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3832-L3872",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" as_default()\n")])])]),a("p",[e._v("Returns a context manager that makes this "),a("code",[e._v("Graph")]),e._v(" the default graph.\nThis method should be used if you want to create multiple graphs in the same process. For convenience, a global default graph is provided, and all ops will be added to this graph if you do not create a new graph explicitly.\nUse this method "),a("code",[e._v("with")]),e._v(" the "),a("code",[e._v("with")]),e._v(" keyword to specify that ops created "),a("code",[e._v("with")]),e._v("in the scope of a block should be added to this graph. In this case, once the scope of the "),a("code",[e._v("with")]),e._v(" is exited, the previous default graph is set again as default. There is a stack, so it's ok to have multiple nested levels of "),a("code",[e._v("as_default")]),e._v(" calls.\nThe default graph is a property of the current thread. If you create a new thread, and wish to use the default graph in that thread, you must explicitly add a with g.as_default(): in that thread's function.\nThe following code examples are equivalent:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" # 1. Using Graph.as_default():\ng = tf.Graph()\nwith g.as_default():\n  c = tf.constant(5.0)\n  assert c.graph is g\n\n# 2. Constructing and making default:\nwith tf.Graph().as_default() as g:\n  c = tf.constant(5.0)\n  assert c.graph is g\n")])])]),a("p",[e._v("If eager execution is enabled ops created under this context manager will be added to the graph instead of executed eagerly.")]),e._v(" "),a("h4",{attrs:{id:"returns-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A context manager for using this graph as the default graph.")]),e._v(" "),a("h3",{attrs:{id:"as-graph-def"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#as-graph-def","aria-hidden":"true"}},[e._v("#")]),e._v(" as_graph_def")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3215-L3242",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" as_graph_def(\n    from_version=None,\n    add_shapes=False\n)\n")])])]),a("p",[e._v("Returns a serialized "),a("code",[e._v("GraphDef")]),e._v(" representation of this graph.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/graph_util/import_graph_def",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.import_graph_def"),a("OutboundLink")],1),e._v("The serialized GraphDef can be imported into another Graph (using ) or used with the C++ Session API.")]),e._v(" "),a("p",[e._v("This method is thread-safe.")]),e._v(" "),a("h4",{attrs:{id:"args-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("from_version")]),e._v(": Optional. If this is set, returns a "),a("code",[e._v("GraphDef")]),e._v(" containing only the nodes that were added to this graph since its "),a("code",[e._v("version")]),e._v(" property had the given value.")]),e._v(" "),a("li",[a("code",[e._v("add_shapes")]),e._v(': If true, adds an "_output_shapes" list attr to each node with the inferred shapes of each of its outputs.')])]),e._v(" "),a("h4",{attrs:{id:"returns-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/code/tensorflow/core/framework/graph.proto",target:"_blank",rel:"noopener noreferrer"}},[e._v("GraphDef"),a("OutboundLink")],1),e._v("A  protocol buffer.")]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If the "),a("code",[e._v("graph_def")]),e._v(" would be too large.")])]),e._v(" "),a("h3",{attrs:{id:"as-graph-element"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#as-graph-element","aria-hidden":"true"}},[e._v("#")]),e._v(" as_graph_element")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3576-L3610",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" as_graph_element(\n    obj,\n    allow_tensor=True,\n    allow_operation=True\n)\n")])])]),a("p",[e._v("Returns the "),a("code",[e._v("obj")]),e._v("ect referred to by "),a("code",[e._v("obj")]),e._v(", as an "),a("code",[e._v("Operation")]),e._v(" or "),a("code",[e._v("Tensor")]),e._v(".\nThis function validates that "),a("code",[e._v("obj")]),e._v(" represents an element of this graph, and gives an informative error message if it is not.\nThis function is the canonical way to get/validate an object of one of the allowed types from an external argument reference in the Session API.\nThis method may be called concurrently from multiple threads.")]),e._v(" "),a("h4",{attrs:{id:"args-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("obj")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(", an "),a("code",[e._v("Operation")]),e._v(", or the name of a tensor or operation. Can also be any "),a("code",[e._v("obj")]),e._v("ect with an "),a("code",[e._v("_as_graph_element")]),e._v("() method that returns a value of one of these types. Note: "),a("code",[e._v("_as_graph_element")]),e._v(" will be called inside the graph's lock and so may not modify the graph.")]),e._v(" "),a("li",[a("code",[e._v("allow_tensor")]),e._v(": If true, "),a("code",[e._v("obj")]),e._v(" may refer to a "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("allow_operation")]),e._v(": If true, "),a("code",[e._v("obj")]),e._v(" may refer to an "),a("code",[e._v("Operation")]),e._v(".")])]),e._v(" "),a("h4",{attrs:{id:"returns-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Tensor")]),e._v(" or "),a("code",[e._v("Operation")]),e._v(" in the Graph corresponding to "),a("code",[e._v("obj")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"raises-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("TypeError")]),e._v(": If "),a("code",[e._v("obj")]),e._v(" is not a type we support attempting to convert to types.")]),e._v(" "),a("li",[a("code",[e._v("ValueError")]),e._v(": If "),a("code",[e._v("obj")]),e._v(" is of an appropriate type but invalid. For example, an invalid string.")]),e._v(" "),a("li",[a("code",[e._v("KeyError")]),e._v(": If "),a("code",[e._v("obj")]),e._v(" is not an "),a("code",[e._v("obj")]),e._v("ect in the graph.")])]),e._v(" "),a("h3",{attrs:{id:"clear-collection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clear-collection","aria-hidden":"true"}},[e._v("#")]),e._v(" clear_collection")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3984-L3994",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" clear_collection(name)\n")])])]),a("p",[e._v("Clears all values in a collection.")]),e._v(" "),a("h4",{attrs:{id:"args-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": The key for the collection. The "),a("code",[e._v("GraphKeys")]),e._v(" class contains many standard "),a("code",[e._v("name")]),e._v("s for collections.")])]),e._v(" "),a("h3",{attrs:{id:"colocate-with"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#colocate-with","aria-hidden":"true"}},[e._v("#")]),e._v(" colocate_with")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L4230-L4301",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" colocate_with(\n    op,\n    ignore_existing=False\n)\n")])])]),a("p",[e._v("Returns a context manager that specifies an op to colocate with.")]),e._v(" "),a("h4",{attrs:{id:"for-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" a = tf.Variable([1.0])\nwith g.colocate_with(a):\n  b = tf.constant(1.0)\n  c = tf.add(a, b)\n")])])]),a("p",[a("code",[e._v("b")]),e._v(" "),a("code",[e._v("a")]),e._v("nd "),a("code",[e._v("c")]),e._v(" will "),a("code",[e._v("a")]),e._v("lw"),a("code",[e._v("a")]),e._v("ys "),a("code",[e._v("b")]),e._v("e "),a("code",[e._v("c")]),e._v("olo"),a("code",[e._v("c``a")]),e._v("ted with "),a("code",[e._v("a")]),e._v(", no m"),a("code",[e._v("a")]),e._v("tter where "),a("code",[e._v("a")]),e._v(" is eventu"),a("code",[e._v("a")]),e._v("lly pl"),a("code",[e._v("a``c")]),e._v("ed.\nNOTE Using a colocation scope resets any existing device constraints.\nIf "),a("code",[e._v("op")]),e._v(" is "),a("code",[e._v("None")]),e._v(" then "),a("code",[e._v("ignore_existing")]),e._v(" must be "),a("code",[e._v("True")]),e._v(" and the new sc"),a("code",[e._v("op")]),e._v("e resets all colocation and device constraints.")]),e._v(" "),a("h4",{attrs:{id:"args-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("op")]),e._v(": The "),a("code",[e._v("op")]),e._v(" to colocate all created "),a("code",[e._v("op")]),e._v("s with, or "),a("code",[e._v("None")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("ignore_existing")]),e._v(": If true, only applies colocation of this "),a("code",[e._v("op")]),e._v(" within the context, rather than applying all colocation pr"),a("code",[e._v("op")]),e._v("erties on the stack. If "),a("code",[e._v("op")]),e._v(" is "),a("code",[e._v("None")]),e._v(", this value must be "),a("code",[e._v("True")]),e._v(".")])]),e._v(" "),a("h4",{attrs:{id:"raises-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": if op is None but ignore_existing is False.")])]),e._v(" "),a("h4",{attrs:{id:"yields"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yields","aria-hidden":"true"}},[e._v("#")]),e._v(" Yields:")]),e._v(" "),a("p",[e._v("A context manager that specifies the op with which to colocate newly created ops.")]),e._v(" "),a("h3",{attrs:{id:"container"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#container","aria-hidden":"true"}},[e._v("#")]),e._v(" container")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L4407-L4457",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" container(container_name)\n")])])]),a("p",[e._v("Returns a context manager that specifies the resource container to use.\nStateful operations, such as variables and queues, can maintain their states on devices so that they can be shared by multiple processes. A resource container is a string name under which these stateful operations are tracked. These resources can be released or cleared with "),a("code",[e._v("tf.Session.reset")]),e._v("().")]),e._v(" "),a("h4",{attrs:{id:"for-example-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-example-2","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' with g.container(\'experiment0\'):\n  # All stateful Operations constructed in this context will be placed\n  # in resource container "experiment0".\n  v1 = tf.Variable([1.0])\n  v2 = tf.Variable([2.0])\n  with g.container("experiment1"):\n    # All stateful Operations constructed in this context will be\n    # placed in resource container "experiment1".\n    v3 = tf.Variable([3.0])\n    q1 = tf.queue.FIFOQueue(10, tf.float32)\n  # All stateful Operations constructed in this context will be\n  # be created in the "experiment0".\n  v4 = tf.Variable([4.0])\n  q1 = tf.queue.FIFOQueue(20, tf.float32)\n  with g.container(""):\n    # All stateful Operations constructed in this context will be\n    # be placed in the default resource container.\n    v5 = tf.Variable([5.0])\n    q3 = tf.queue.FIFOQueue(30, tf.float32)\n\n# Resets container "experiment0", after which the state of v1, v2, v4, q1\n# will become undefined (such as uninitialized).\ntf.Session.reset(target, ["experiment0"])\n')])])]),a("h4",{attrs:{id:"args-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("container_name")]),e._v(": container name string.")])]),e._v(" "),a("h4",{attrs:{id:"returns-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A context manager for defining resource containers for stateful ops, yields the container name.")]),e._v(" "),a("h3",{attrs:{id:"control-dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#control-dependencies","aria-hidden":"true"}},[e._v("#")]),e._v(" control_dependencies")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L4588-L4699",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" control_dependencies(control_inputs)\n")])])]),a("p",[e._v("Returns a context manager that specifies control dependencies.\nUse "),a("code",[e._v("with")]),e._v(" the "),a("code",[e._v("with")]),e._v(" keyword to specify that all operations constructed "),a("code",[e._v("with")]),e._v("in the context should have control dependencies on "),a("code",[e._v("control_inputs")]),e._v(". For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" with g.control_dependencies([a, b, c]):\n  # `d` and `e` will only run after `a`, `b`, and `c` have executed.\n  d = ...\n  e = ...\n")])])]),a("p",[e._v("Multiple calls to "),a("code",[e._v("control_dependencies")]),e._v("() can be nested, and in that case a new "),a("code",[e._v("Operation")]),e._v(" will have control dependencies on the union of `` from all active contexts.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" with g.control_dependencies([a, b]):\n  # Ops constructed here run after `a` and `b`.\n  with g.control_dependencies([c, d]):\n    # Ops constructed here run after `a`, `b`, `c`, and `d`.\n")])])]),a("p",[e._v("You can pass None to clear the control dependencies:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" with g.control_dependencies([a, b]):\n  # Ops constructed here run after `a` and `b`.\n  with g.control_dependencies(None):\n    # Ops constructed here run normally, not waiting for either `a` or `b`.\n    with g.control_dependencies([c, d]):\n      # Ops constructed here run after `c` and `d`, also not waiting\n      # for either `a` or `b`.\n")])])]),a("p",[e._v("N.B. The control dependencies context applies only to ops that are constructed within the context. Merely using an op or tensor in the context does not add a control dependency. The following example illustrates this point:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" # WRONG\ndef my_func(pred, tensor):\n  t = tf.matmul(tensor, tensor)\n  with tf.control_dependencies([pred]):\n    # The matmul op is created outside the context, so no control\n    # dependency will be added.\n    return t\n\n# RIGHT\ndef my_func(pred, tensor):\n  with tf.control_dependencies([pred]):\n    # The matmul op is created in the context, so a control dependency\n    # will be added.\n    return tf.matmul(tensor, tensor)\n")])])]),a("p",[e._v("Also note that though execution of ops created under this scope will trigger execution of the dependencies, the ops created under this scope might still be pruned from a normal tensorflow graph. For example, in the following snippet of code the dependencies are never executed:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("   loss = model.loss()\n  with tf.control_dependencies(dependencies):\n    loss = loss + tf.constant(1)  # note: dependencies ignored in the\n                                  # backward pass\n  return tf.gradients(loss, model.variables)\n")])])]),a("p",[e._v("This is because evaluating the gradient graph does not require evaluating the constant(1) op created in the forward pass.")]),e._v(" "),a("h4",{attrs:{id:"args-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("control_inputs")]),e._v(": A list of "),a("code",[e._v("Operation")]),e._v(" or "),a("code",[e._v("Tensor")]),e._v(" objects which must be executed or computed before running the operations defined in the context. Can also be "),a("code",[e._v("None")]),e._v(" to clear the control dependencies.")])]),e._v(" "),a("h4",{attrs:{id:"returns-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A context manager that specifies control dependencies for all operations constructed within the context.")]),e._v(" "),a("h4",{attrs:{id:"raises-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("TypeError")]),e._v(": If "),a("code",[e._v("control_inputs")]),e._v(" is not a list of "),a("code",[e._v("Operation")]),e._v(" or "),a("code",[e._v("Tensor")]),e._v(" objects.")])]),e._v(" "),a("h3",{attrs:{id:"create-op"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-op","aria-hidden":"true"}},[e._v("#")]),e._v(" create_op")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3304-L3360",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" create_op(\n    op_type,\n    inputs,\n    dtypes=None,\n    input_types=None,\n    name=None,\n    attrs=None,\n    op_def=None,\n    compute_shapes=True,\n    compute_device=True\n)\n")])])]),a("p",[e._v("Creates an "),a("code",[e._v("Operation")]),e._v(" in this graph. (deprecated arguments)\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/constant",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.constant()"),a("OutboundLink")],1),e._v("This is a low-level interface for creating an Operation. Most programs will not call this method directly, and instead use the Python op constructors, such as , which add ops to the default graph.")]),e._v(" "),a("h4",{attrs:{id:"args-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("op_type")]),e._v(": The "),a("code",[e._v("Operation")]),e._v(" type to create. This corresponds to the "),a("code",[e._v("OpDef.name")]),e._v(" field for the proto that defines the operation.")]),e._v(" "),a("li",[a("code",[e._v("inputs")]),e._v(": A list of "),a("code",[e._v("Tensor")]),e._v(" objects that will be "),a("code",[e._v("inputs")]),e._v(" to the "),a("code",[e._v("Operation")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("dtypes")]),e._v(": (Optional) A list of "),a("code",[e._v("DType")]),e._v(" objects that will be the types of the tensors that the operation produces.")]),e._v(" "),a("li",[a("code",[e._v("input_types")]),e._v(": (Optional.) A list of "),a("code",[e._v("DType")]),e._v("s that will be the types of the tensors that the operation consumes. By default, uses the base "),a("code",[e._v("DType")]),e._v(" of each input in "),a("code",[e._v("inputs")]),e._v(". "),a("code",[e._v("Operation")]),e._v("s that expect reference-typed "),a("code",[e._v("inputs")]),e._v(" must specify "),a("code",[e._v("input_types")]),e._v(" explicitly.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": (Optional.) A string "),a("code",[e._v("name")]),e._v(" for the operation. If not specified, a "),a("code",[e._v("name")]),e._v(" is generated based on "),a("code",[e._v("op_type")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("attrs")]),e._v(": (Optional.) A dictionary where the key is the "),a("code",[e._v("attr")]),e._v("ibute "),a("code",[e._v("name")]),e._v(" (a string) and the value is the respective "),a("code",[e._v("attr")]),e._v(" "),a("code",[e._v("attr")]),e._v("ibute of the "),a("code",[e._v("NodeDef")]),e._v(" proto that will represent the operation (an "),a("code",[e._v("AttrValue")]),e._v(" proto).")]),e._v(" "),a("li",[a("code",[e._v("op_def")]),e._v(": (Optional.) The "),a("code",[e._v("OpDef")]),e._v(" proto that describes the "),a("code",[e._v("op_type")]),e._v(" that the operation will have.")]),e._v(" "),a("li",[a("code",[e._v("compute_shapes")]),e._v(": (Optional.) Deprecated. Has no effect (shapes are always computed).")]),e._v(" "),a("li",[a("code",[e._v("compute_device")]),e._v(": (Optional.) If True, device functions will be executed to compute the device property of the "),a("code",[e._v("Operation")]),e._v(".")])]),e._v(" "),a("h4",{attrs:{id:"raises-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("TypeError")]),e._v(": if any of the inputs is not a "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("ValueError")]),e._v(": if colocation conflicts with existing device assignment.")])]),e._v(" "),a("h4",{attrs:{id:"returns-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("An "),a("code",[e._v("Operation")]),e._v(" object.")]),e._v(" "),a("h3",{attrs:{id:"device"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#device","aria-hidden":"true"}},[e._v("#")]),e._v(" device")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L4310-L4379",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" device(device_name_or_function)\n")])])]),a("p",[e._v("Returns a context manager that specifies the default device to use.\nThe "),a("code",[e._v("device_name_or_function")]),e._v(" argument may either be a device name string, a device function, or None:")]),e._v(" "),a("ul",[a("li",[e._v("If it is a "),a("code",[e._v("device")]),e._v(" name string, all operations constructed in this context will be assigned to the "),a("code",[e._v("device")]),e._v(" with that name, unless overridden by a nested "),a("code",[e._v("device")]),e._v("() context.")]),e._v(" "),a("li",[e._v("If it is a function, it will be treated as a function from Operation objects to "),a("code",[e._v("device")]),e._v(" name strings, and invoked each time a new Operation is created. The Operation will be assigned to the "),a("code",[e._v("device")]),e._v(" with the returned name.")]),e._v(" "),a("li",[e._v("If it is None, all "),a("code",[e._v("device")]),e._v("() invocations from the enclosing context will be ignored.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/code/tensorflow/core/util/device_name_utils.h",target:"_blank",rel:"noopener noreferrer"}},[e._v("DeviceNameUtils"),a("OutboundLink")],1),e._v("For information about the valid syntax of device name strings, see the documentation in .")])]),e._v(" "),a("h4",{attrs:{id:"for-example-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-example-3","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' with g.device(\'/device:GPU:0\'):\n  # All operations constructed in this context will be placed\n  # on GPU 0.\n  with g.device(None):\n    # All operations constructed in this context will have no\n    # assigned device.\n\n# Defines a function from `Operation` to device string.\ndef matmul_on_gpu(n):\n  if n.type == "MatMul":\n    return "/device:GPU:0"\n  else:\n    return "/cpu:0"\n\nwith g.device(matmul_on_gpu):\n  # All operations of type "MatMul" constructed in this context\n  # will be placed on GPU 0; all other operations will be placed\n  # on CPU 0.\n')])])]),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/Variable",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.Variable"),a("OutboundLink")],1),e._v("N.B. The device scope may be overridden by op wrappers or other library code. For example, a variable assignment op v.assign() must be colocated with the  v, and incompatible device scopes will be ignored.")]),e._v(" "),a("h4",{attrs:{id:"args-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("device_name_or_function")]),e._v(": The device name or function to use in the context.")])]),e._v(" "),a("h4",{attrs:{id:"yields-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yields-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Yields:")]),e._v(" "),a("p",[e._v("A context manager that specifies the default device to use for newly created ops.")]),e._v(" "),a("h4",{attrs:{id:"raises-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("RuntimeError")]),e._v(": If device scopes are not properly nested.")])]),e._v(" "),a("h3",{attrs:{id:"finalize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#finalize","aria-hidden":"true"}},[e._v("#")]),e._v(" finalize")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3084-L3092",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" finalize()\n")])])]),a("p",[e._v("Finalizes this graph, making it read-only.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/train/QueueRunner",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.train.QueueRunner"),a("OutboundLink")],1),e._v("After calling g.finalize(), no new operations can be added to g. This method is used to ensure that no operations are added to a graph when it is shared between multiple threads, for example when using a .")]),e._v(" "),a("h3",{attrs:{id:"get-all-collection-keys"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-all-collection-keys","aria-hidden":"true"}},[e._v("#")]),e._v(" get_all_collection_keys")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3979-L3982",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_all_collection_keys()\n")])])]),a("p",[e._v("Returns a list of collections used in this graph.")]),e._v(" "),a("h3",{attrs:{id:"get-collection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-collection","aria-hidden":"true"}},[e._v("#")]),e._v(" get_collection")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3943-L3977",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_collection(\n    name,\n    scope=None\n)\n")])])]),a("p",[e._v("Returns a list of values in the collection with the given "),a("code",[e._v("name")]),e._v(".\nThis is different from "),a("code",[e._v("get_collection_ref")]),e._v("() which always returns the actual collection list if it exists in that it returns a new list each time it is called.")]),e._v(" "),a("h4",{attrs:{id:"args-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": The key for the collection. For example, the "),a("code",[e._v("GraphKeys")]),e._v(" class contains many standard "),a("code",[e._v("name")]),e._v("s for collections.")]),e._v(" "),a("li",[a("code",[e._v("scope")]),e._v(": (Optional.) A string. If supplied, the resulting list is filtered to include only items whose "),a("code",[e._v("name")]),e._v(" attribute matches "),a("code",[e._v("scope")]),e._v(" using "),a("code",[e._v("re.match")]),e._v(". Items without a "),a("code",[e._v("name")]),e._v(" attribute are never returned if a "),a("code",[e._v("scope")]),e._v(" is supplied. The choice of "),a("code",[e._v("re.match")]),e._v(" means that a "),a("code",[e._v("scope")]),e._v(" without special tokens filters by prefix.")])]),e._v(" "),a("h4",{attrs:{id:"returns-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("The list of values in the collection with the given "),a("code",[e._v("name")]),e._v(", or an empty list if no value has been added to that collection. The list contains the values in the order under which they were collected.")]),e._v(" "),a("h3",{attrs:{id:"get-collection-ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-collection-ref","aria-hidden":"true"}},[e._v("#")]),e._v(" get_collection_ref")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3918-L3941",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_collection_ref(name)\n")])])]),a("p",[e._v("Returns a list of values in the collection with the given "),a("code",[e._v("name")]),e._v(".\nIf the collection exists, this returns the list itself, which can be modified in place to change the collection. If the collection does not exist, it is created as an empty list and the list is returned.\nThis is different from "),a("code",[e._v("get_collection")]),e._v("() which always returns a copy of the collection list if it exists and never creates an empty collection.")]),e._v(" "),a("h4",{attrs:{id:"args-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": The key for the collection. For example, the "),a("code",[e._v("GraphKeys")]),e._v(" class contains many standard "),a("code",[e._v("name")]),e._v("s for collections.")])]),e._v(" "),a("h4",{attrs:{id:"returns-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("The list of values in the collection with the given "),a("code",[e._v("name")]),e._v(", or an empty list if no value has been added to that collection.")]),e._v(" "),a("h3",{attrs:{id:"get-name-scope"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-name-scope","aria-hidden":"true"}},[e._v("#")]),e._v(" get_name_scope")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L4200-L4215",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_name_scope()\n")])])]),a("p",[e._v("Returns the current name scope.")]),e._v(" "),a("h4",{attrs:{id:"for-example-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-example-4","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" with tf.name_scope('scope1'):\n  with tf.name_scope('scope2'):\n    print(tf.compat.v1.get_default_graph().get_name_scope())\n")])])]),a("p",[e._v("would print the string "),a("code",[e._v("scope1/scope2")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"returns-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A string representing the current name scope.")]),e._v(" "),a("h3",{attrs:{id:"get-operation-by-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-operation-by-name","aria-hidden":"true"}},[e._v("#")]),e._v(" get_operation_by_name")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3719-L3738",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_operation_by_name(name)\n")])])]),a("p",[e._v("Returns the "),a("code",[e._v("Operation")]),e._v(" with the given "),a("code",[e._v("name")]),e._v(".\nThis method may be called concurrently from multiple threads.")]),e._v(" "),a("h4",{attrs:{id:"args-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": The "),a("code",[e._v("name")]),e._v(" of the "),a("code",[e._v("Operation")]),e._v(" to return.")])]),e._v(" "),a("h4",{attrs:{id:"returns-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Operation")]),e._v(" with the given "),a("code",[e._v("name")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"raises-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("TypeError")]),e._v(": If "),a("code",[e._v("name")]),e._v(" is not a string.")]),e._v(" "),a("li",[a("code",[e._v("KeyError")]),e._v(": If "),a("code",[e._v("name")]),e._v(" does not correspond to an operation in this graph.")])]),e._v(" "),a("h3",{attrs:{id:"get-operations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-operations","aria-hidden":"true"}},[e._v("#")]),e._v(" get_operations")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3701-L3717",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_operations()\n")])])]),a("p",[e._v("Return the list of operations in the graph.\nYou can modify the operations in place, but modifications to the list such as inserts/delete have no effect on the list of operations known to the graph.\nThis method may be called concurrently from multiple threads.")]),e._v(" "),a("h4",{attrs:{id:"returns-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A list of Operations.")]),e._v(" "),a("h3",{attrs:{id:"get-tensor-by-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-tensor-by-name","aria-hidden":"true"}},[e._v("#")]),e._v(" get_tensor_by_name")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L3767-L3786",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_tensor_by_name(name)\n")])])]),a("p",[e._v("Returns the "),a("code",[e._v("Tensor")]),e._v(" with the given "),a("code",[e._v("name")]),e._v(".\nThis method may be called concurrently from multiple threads.")]),e._v(" "),a("h4",{attrs:{id:"args-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": The "),a("code",[e._v("name")]),e._v(" of the "),a("code",[e._v("Tensor")]),e._v(" to return.")])]),e._v(" "),a("h4",{attrs:{id:"returns-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Tensor")]),e._v(" with the given "),a("code",[e._v("name")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"raises-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("TypeError")]),e._v(": If "),a("code",[e._v("name")]),e._v(" is not a string.")]),e._v(" "),a("li",[a("code",[e._v("KeyError")]),e._v(": If "),a("code",[e._v("name")]),e._v(" does not correspond to a tensor in this graph.")])]),e._v(" "),a("h3",{attrs:{id:"gradient-override-map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gradient-override-map","aria-hidden":"true"}},[e._v("#")]),e._v(" gradient_override_map")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L4831-L4890",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" gradient_override_map(op_type_map)\n")])])]),a("p",[e._v("EXPERIMENTAL: A context manager for overriding gradient functions.\nThis context manager can be used to override the gradient function that will be used for ops within the scope of the context.")]),e._v(" "),a("h4",{attrs:{id:"for-example-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-example-5","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' @tf.RegisterGradient("CustomSquare")\ndef _custom_square_grad(op, grad):\n  # ...\n\nwith tf.Graph().as_default() as g:\n  c = tf.constant(5.0)\n  s_1 = tf.square(c)  # Uses the default gradient for tf.square.\n  with g.gradient_override_map({"Square": "CustomSquare"}):\n    s_2 = tf.square(s_2)  # Uses _custom_square_grad to compute the\n                          # gradient of s_2.\n')])])]),a("h4",{attrs:{id:"args-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("op_type_map")]),e._v(": A dictionary mapping op type strings to alternative op type strings.")])]),e._v(" "),a("h4",{attrs:{id:"returns-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A context manager that sets the alternative op type to be used for one or more ops created in that context.")]),e._v(" "),a("h4",{attrs:{id:"raises-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("TypeError")]),e._v(": If "),a("code",[e._v("op_type_map")]),e._v(" is not a dictionary mapping strings to strings.")])]),e._v(" "),a("h3",{attrs:{id:"is-feedable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#is-feedable","aria-hidden":"true"}},[e._v("#")]),e._v(" is_feedable")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L4898-L4900",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" is_feedable(tensor)\n")])])]),a("p",[e._v("Returns "),a("code",[e._v("True")]),e._v(" if and only if "),a("code",[e._v("tensor")]),e._v(" is feedable.")]),e._v(" "),a("h3",{attrs:{id:"is-fetchable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#is-fetchable","aria-hidden":"true"}},[e._v("#")]),e._v(" is_fetchable")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L4906-L4911",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" is_fetchable(tensor_or_op)\n")])])]),a("p",[e._v("Returns "),a("code",[e._v("True")]),e._v(" if and only if "),a("code",[e._v("tensor_or_op")]),e._v(" is fetchable.")]),e._v(" "),a("h3",{attrs:{id:"name-scope"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#name-scope","aria-hidden":"true"}},[e._v("#")]),e._v(" name_scope")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L4033-L4144",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" name_scope(name)\n")])])]),a("p",[e._v("Returns a context manager that creates hierarchical names for operations.\nA graph maintains a stack of name scopes. A with name_scope(...): statement pushes a new name onto the stack for the lifetime of the context.\nThe "),a("code",[e._v("name")]),e._v(" argument will be interpreted as follows:")]),e._v(" "),a("ul",[a("li",[e._v("A string (not ending with '/') will create a new "),a("code",[e._v("name")]),e._v(" scope, in which "),a("code",[e._v("name")]),e._v(" is appended to the prefix of all operations created in the context. If "),a("code",[e._v("name")]),e._v(" has been used before, it will be made unique by calling self.unique_"),a("code",[e._v("name")]),e._v("("),a("code",[e._v("name")]),e._v(").")]),e._v(" "),a("li",[e._v("A scope previously captured from a with g."),a("code",[e._v("name")]),e._v('_scope(...) as scope: statement will be treated as an "absolute" '),a("code",[e._v("name")]),e._v(" scope, which makes it possible to re-enter existing scopes.")]),e._v(" "),a("li",[e._v("A value of `` or the empty string will reset the current "),a("code",[e._v("name")]),e._v(" scope to the top-level (empty) "),a("code",[e._v("name")]),e._v(" scope.")])]),e._v(" "),a("h4",{attrs:{id:"for-example-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-example-6","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' with tf.Graph().as_default() as g:\n  c = tf.constant(5.0, name="c")\n  assert c.op.name == "c"\n  c_1 = tf.constant(6.0, name="c")\n  assert c_1.op.name == "c_1"\n\n  # Creates a scope called "nested"\n  with g.name_scope("nested") as scope:\n    nested_c = tf.constant(10.0, name="c")\n    assert nested_c.op.name == "nested/c"\n\n    # Creates a nested scope called "inner".\n    with g.name_scope("inner"):\n      nested_inner_c = tf.constant(20.0, name="c")\n      assert nested_inner_c.op.name == "nested/inner/c"\n\n    # Create a nested scope called "inner_1".\n    with g.name_scope("inner"):\n      nested_inner_1_c = tf.constant(30.0, name="c")\n      assert nested_inner_1_c.op.name == "nested/inner_1/c"\n\n      # Treats `scope` as an absolute name scope, and\n      # switches to the "nested/" scope.\n      with g.name_scope(scope):\n        nested_d = tf.constant(40.0, name="d")\n        assert nested_d.op.name == "nested/d"\n\n        with g.name_scope(""):\n          e = tf.constant(50.0, name="e")\n          assert e.op.name == "e"\n')])])]),a("p",[e._v("The name of the "),a("code",[e._v("itself can be captured by with g.name_")]),e._v("(...) as "),a("code",[e._v(":, which stores the name of the")]),e._v(" in the variable "),a("code",[e._v(". This value can be used to name an operation that represents the overall result of executing the ops in a")]),e._v(". For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' inputs = tf.constant(...)\nwith g.name_scope(\'my_layer\') as scope:\n  weights = tf.Variable(..., name="weights")\n  biases = tf.Variable(..., name="biases")\n  affine = tf.matmul(inputs, weights) + biases\n  output = tf.nn.relu(affine, name=scope)\n')])])]),a("p",[e._v("NOTE: This constructor validates the given "),a("code",[e._v("name")]),e._v(". Valid scope "),a("code",[e._v("name")]),e._v("s match one of the following regular expressions:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" [A-Za-z0-9.][A-Za-z0-9_.\\-/]* (for scopes at the root)\n[A-Za-z0-9_.\\-/]* (for other scopes)\n")])])]),a("h4",{attrs:{id:"args-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the scope.")])]),e._v(" "),a("h4",{attrs:{id:"returns-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A context manager that installs "),a("code",[e._v("name")]),e._v(" as a new "),a("code",[e._v("name")]),e._v(" scope.")]),e._v(" "),a("h4",{attrs:{id:"raises-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If "),a("code",[e._v("name")]),e._v(" is not a valid scope "),a("code",[e._v("name")]),e._v(", according to the rules above.")])]),e._v(" "),a("h3",{attrs:{id:"prevent-feeding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prevent-feeding","aria-hidden":"true"}},[e._v("#")]),e._v(" prevent_feeding")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L4894-L4896",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" prevent_feeding(tensor)\n")])])]),a("p",[e._v("Marks the given "),a("code",[e._v("tensor")]),e._v(" as unfeedable in this graph.")]),e._v(" "),a("h3",{attrs:{id:"prevent-fetching"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prevent-fetching","aria-hidden":"true"}},[e._v("#")]),e._v(" prevent_fetching")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L4902-L4904",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" prevent_fetching(op)\n")])])]),a("p",[e._v("Marks the given "),a("code",[e._v("op")]),e._v(" as unfetchable in this graph.")]),e._v(" "),a("h3",{attrs:{id:"switch-to-thread-local"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch-to-thread-local","aria-hidden":"true"}},[e._v("#")]),e._v(" switch_to_thread_local")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L4913-L4928",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" switch_to_thread_local()\n")])])]),a("p",[e._v("Make device, colocation and dependencies stacks thread-local.\nDevice, colocation and dependencies stacks are not thread-local be default. If multiple threads access them, then the state is shared. This means that one thread may affect the behavior of another thread.\nAfter this method is called, the stacks become thread-local. If multiple threads access them, then the state is not shared. Each thread uses its own value; a thread doesn't affect other threads by mutating such a stack.\nThe initial value for every thread's stack is set to the current value of the stack when "),a("code",[e._v("switch_to_thread_local")]),e._v("() was first called.")]),e._v(" "),a("h3",{attrs:{id:"unique-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unique-name","aria-hidden":"true"}},[e._v("#")]),e._v(" unique_name")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L4148-L4198",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" unique_name(\n    name,\n    mark_as_used=True\n)\n")])])]),a("p",[e._v("Return a unique operation "),a("code",[e._v("name")]),e._v(" for "),a("code",[e._v("name")]),e._v(".\n"),a("code",[e._v("unique_name")]),e._v(" is used to generate structured names, separated by "),a("code",[e._v('"/"')]),e._v(", to help identify operations when debugging a graph. Operation names are displayed in error messages reported by the TensorFlow runtime, and in various visualization tools such as TensorBoard.\nIf "),a("code",[e._v("mark_as_used")]),e._v(" is set to "),a("code",[e._v("True")]),e._v(", which is the default, a new unique name is created and marked as in use. If it's set to "),a("code",[e._v("False")]),e._v(", the unique name is returned without actually being marked as used. This is useful when the caller simply wants to know what the name to be created will be.")]),e._v(" "),a("h4",{attrs:{id:"args-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-17","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v(": The "),a("code",[e._v("name")]),e._v(" for an operation.")]),e._v(" "),a("li",[a("code",[e._v("mark_as_used")]),e._v(": Whether to mark this "),a("code",[e._v("name")]),e._v(" as being used.")])]),e._v(" "),a("h4",{attrs:{id:"returns-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-17","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A string to be passed to "),a("code",[e._v("create_op")]),e._v("() that will be used to name the operation being created.")])])}),[],!1,null,null,null);t.default=s.exports}}]);