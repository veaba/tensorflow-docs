(window.webpackJsonp=window.webpackJsonp||[]).push([[1235],{1424:function(e,t,s){"use strict";s.r(t);var a=s(0),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"class-checkpointsaverlistener"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-checkpointsaverlistener","aria-hidden":"true"}},[e._v("#")]),e._v(" Class CheckpointSaverListener")]),e._v(" "),s("p",[e._v("Interface for listeners that take action before or after checkpoint save.")]),e._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),s("ul",[s("li",[e._v("Class "),s("code",[e._v("tf.compat.v1.estimator.CheckpointSaverListener")])]),e._v(" "),s("li",[e._v("Class "),s("code",[e._v("tf.compat.v1.train.CheckpointSaverListener")])]),e._v(" "),s("li",[e._v("Class "),s("code",[e._v("tf.compat.v2.estimator.CheckpointSaverListener")])])]),e._v(" "),s("p",[e._v("CheckpointSaverListener triggers only in steps when CheckpointSaverHook is triggered, and provides callbacks at the following points: - before using the session - before each call to Saver.save() - after each call to Saver.save() - at the end of session")]),e._v(" "),s("p",[e._v("To use a listener, implement a class and pass the listener to a CheckpointSaverHook, as in this example:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" class ExampleCheckpointSaverListener(CheckpointSaverListener):\n  def begin(self):\n    # You can add ops to the graph here.\n    print('Starting the session.')\n    self.your_tensor = ...\n\n  def before_save(self, session, global_step_value):\n    print('About to write a checkpoint')\n\n  def after_save(self, session, global_step_value):\n    print('Done writing checkpoint.')\n    if decided_to_stop_training():\n      return True\n\n  def end(self, session, global_step_value):\n    print('Done with the session.')\n\n...\nlistener = ExampleCheckpointSaverListener()\nsaver_hook = tf.estimator.CheckpointSaverHook(\n    checkpoint_dir, listeners=[listener])\nwith\ntf.compat.v1.train.MonitoredTrainingSession(chief_only_hooks=[saver_hook]):\n  ...\n")])])]),s("p",[e._v("A CheckpointSaverListener may simply take some action after every checkpoint save. It is also possible for the listener to use its own schedule to act less frequently, e.g. based on global_step_value. In this case, implementors should implement the end() method to handle actions related to the last checkpoint save. But the listener should not act twice if after_save() already handled this last checkpoint save.")]),e._v(" "),s("p",[e._v("A CheckpointSaverListener can request training to be stopped, by returning True in after_save. Please note that, in replicated distributed training setting, only chief should use this behavior. Otherwise each worker will do their own evaluation, which may be wasteful of resources.")]),e._v(" "),s("h2",{attrs:{id:"methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),s("h3",{attrs:{id:"after-save"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#after-save","aria-hidden":"true"}},[e._v("#")]),e._v(" after_save")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/basic_session_run_hooks.py#L505-L506",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" after_save(\n    session,\n    global_step_value\n)\n")])])]),s("h3",{attrs:{id:"before-save"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#before-save","aria-hidden":"true"}},[e._v("#")]),e._v(" before_save")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/basic_session_run_hooks.py#L502-L503",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" before_save(\n    session,\n    global_step_value\n)\n")])])]),s("h3",{attrs:{id:"begin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#begin","aria-hidden":"true"}},[e._v("#")]),e._v(" begin")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/basic_session_run_hooks.py#L499-L500",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" begin()\n")])])]),s("h3",{attrs:{id:"end"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#end","aria-hidden":"true"}},[e._v("#")]),e._v(" end")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/basic_session_run_hooks.py#L508-L509",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" end(\n    session,\n    global_step_value\n)\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);