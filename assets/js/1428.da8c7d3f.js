(window.webpackJsonp=window.webpackJsonp||[]).push([[1428],{1619:function(e,s,a){"use strict";a.r(s);var r=a(0),t=Object(r.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Serialize N-minibatch SparseTensor into an [N, 3] Tensor.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v2.io.serialize_many_sparse")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.io.serialize_many_sparse(\n    sp_input,\n    out_type=tf.dtypes.string,\n    name=None\n)\n")])])]),a("p",[e._v("The SparseTensor must have rank R greater than 1, and the first dimension is treated as the minibatch dimension. Elements of the SparseTensor must be sorted in increasing order of this first dimension. The serialized SparseTensor objects going into each row of the output Tensor will have rank R-1.")]),e._v(" "),a("p",[e._v("The minibatch size N is extracted from sparse_shape[0].")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("sp_input")]),e._v(": The input rank "),a("code",[e._v("R")]),e._v(" "),a("code",[e._v("SparseTensor")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("out_type")]),e._v(": The "),a("code",[e._v("dtype")]),e._v(" to use for serialization.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" prefix for the returned tensors (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A matrix (2-D Tensor) with N rows and 3 columns. Each column represents serialized SparseTensor's indices, values, and shape (respectively).")]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("TypeError")]),e._v(": If "),a("code",[e._v("sp_input")]),e._v(" is not a "),a("code",[e._v("SparseTensor")]),e._v(".")])])])}),[],!1,null,null,null);s.default=t.exports}}]);