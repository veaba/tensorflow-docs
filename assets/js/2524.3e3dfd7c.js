(window.webpackJsonp=window.webpackJsonp||[]).push([[2524],{2715:function(e,_,v){"use strict";v.r(_);var d=v(0),o=Object(d.a)({},(function(){var e=this,_=e.$createElement,v=e._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("p",[e._v("Inserts a dimension of 1 into a tensor's shape.")]),e._v(" "),v("h3",{attrs:{id:"aliases"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("tf.compat.v2.expand_dims")])])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v(" tf.expand_dims(\n    input,\n    axis,\n    name=None\n)\n")])])]),v("h3",{attrs:{id:"used-in-the-guide"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("M")]),e._v("a"),v("code",[e._v("s")]),e._v("k"),v("code",[e._v("i")]),e._v("n"),v("code",[e._v("g")]),e._v(" "),v("code",[e._v("a")]),e._v("n"),v("code",[e._v("d")]),e._v(" "),v("code",[e._v("p")]),e._v("a"),v("code",[e._v("d")]),e._v("d"),v("code",[e._v("i")]),e._v("n"),v("code",[e._v("g")]),e._v(" "),v("code",[e._v("w")]),e._v("i"),v("code",[e._v("t")]),e._v("h"),v("code"),e._v("K"),v("code",[e._v("e")]),e._v("r"),v("code",[e._v("a")]),e._v("s``")]),e._v(" "),v("li",[v("code",[e._v("R")]),e._v("e"),v("code",[e._v("c")]),e._v("u"),v("code",[e._v("r")]),e._v("r"),v("code",[e._v("e")]),e._v("n"),v("code",[e._v("t")]),e._v(" "),v("code",[e._v("N")]),e._v("e"),v("code",[e._v("u")]),e._v("r"),v("code",[e._v("a")]),e._v("l"),v("code"),e._v("N"),v("code",[e._v("e")]),e._v("t"),v("code",[e._v("w")]),e._v("o"),v("code",[e._v("r")]),e._v("k"),v("code",[e._v("s")]),e._v(" "),v("code",[e._v("(")]),e._v("R"),v("code",[e._v("N")]),e._v("N"),v("code",[e._v(")")]),e._v(" "),v("code",[e._v("w")]),e._v("i"),v("code",[e._v("t")]),e._v("h"),v("code"),e._v("K"),v("code",[e._v("e")]),e._v("r"),v("code",[e._v("a")]),e._v("s``")])]),e._v(" "),v("h3",{attrs:{id:"used-in-the-tutorials"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("D")]),e._v("e"),v("code",[e._v("e")]),e._v("p"),v("code",[e._v("D")]),e._v("r"),v("code",[e._v("e")]),e._v("a"),v("code",[e._v("m")])]),e._v(" "),v("li",[v("code",[e._v("I")]),e._v("m"),v("code",[e._v("a")]),e._v("g"),v("code",[e._v("e")]),e._v(" "),v("code",[e._v("c")]),e._v("a"),v("code",[e._v("p")]),e._v("t"),v("code",[e._v("i")]),e._v("o"),v("code",[e._v("n")]),e._v("i"),v("code",[e._v("n")]),e._v("g"),v("code"),e._v("w"),v("code",[e._v("i")]),e._v("t"),v("code",[e._v("h")]),e._v(" "),v("code",[e._v("v")]),e._v("i"),v("code",[e._v("s")]),e._v("u"),v("code",[e._v("a")]),e._v("l"),v("code"),e._v("a"),v("code",[e._v("t")]),e._v("t"),v("code",[e._v("e")]),e._v("n"),v("code",[e._v("t")]),e._v("i"),v("code",[e._v("o")]),e._v("n``")]),e._v(" "),v("li",[v("code",[e._v("N")]),e._v("e"),v("code",[e._v("u")]),e._v("r"),v("code",[e._v("a")]),e._v("l"),v("code"),e._v("m"),v("code",[e._v("a")]),e._v("c"),v("code",[e._v("h")]),e._v("i"),v("code",[e._v("n")]),e._v("e"),v("code"),e._v("t"),v("code",[e._v("r")]),e._v("a"),v("code",[e._v("n")]),e._v("s"),v("code",[e._v("l")]),e._v("a"),v("code",[e._v("t")]),e._v("i"),v("code",[e._v("o")]),e._v("n"),v("code"),e._v("w"),v("code",[e._v("i")]),e._v("t"),v("code",[e._v("h")]),e._v(" "),v("code",[e._v("a")]),e._v("t"),v("code",[e._v("t")]),e._v("e"),v("code",[e._v("n")]),e._v("t"),v("code",[e._v("i")]),e._v("o"),v("code",[e._v("n")])]),e._v(" "),v("li",[v("code",[e._v("P")]),e._v("i"),v("code",[e._v("x")]),e._v("2"),v("code",[e._v("P")]),e._v("i"),v("code",[e._v("x")])]),e._v(" "),v("li",[v("code",[e._v("T")]),e._v("e"),v("code",[e._v("x")]),e._v("t"),v("code"),e._v("c"),v("code",[e._v("l")]),e._v("a"),v("code",[e._v("s")]),e._v("s"),v("code",[e._v("i")]),e._v("f"),v("code",[e._v("i")]),e._v("c"),v("code",[e._v("a")]),e._v("t"),v("code",[e._v("i")]),e._v("o"),v("code",[e._v("n")]),e._v(" "),v("code",[e._v("w")]),e._v("i"),v("code",[e._v("t")]),e._v("h"),v("code"),e._v("a"),v("code",[e._v("n")]),e._v(" "),v("code",[e._v("R")]),e._v("N"),v("code",[e._v("N")])]),e._v(" "),v("li",[v("code",[e._v("T")]),e._v("e"),v("code",[e._v("x")]),e._v("t"),v("code"),e._v("g"),v("code",[e._v("e")]),e._v("n"),v("code",[e._v("e")]),e._v("r"),v("code",[e._v("a")]),e._v("t"),v("code",[e._v("i")]),e._v("o"),v("code",[e._v("n")]),e._v(" "),v("code",[e._v("w")]),e._v("i"),v("code",[e._v("t")]),e._v("h"),v("code"),e._v("a"),v("code",[e._v("n")]),e._v(" "),v("code",[e._v("R")]),e._v("N"),v("code",[e._v("N")])]),e._v(" "),v("li",[v("code",[e._v("T")]),e._v("r"),v("code",[e._v("a")]),e._v("n"),v("code",[e._v("s")]),e._v("f"),v("code",[e._v("o")]),e._v("r"),v("code",[e._v("m")]),e._v("e"),v("code",[e._v("r")]),e._v(" "),v("code",[e._v("m")]),e._v("o"),v("code",[e._v("d")]),e._v("e"),v("code",[e._v("l")]),e._v(" "),v("code",[e._v("f")]),e._v("o"),v("code",[e._v("r")]),e._v(" "),v("code",[e._v("l")]),e._v("a"),v("code",[e._v("n")]),e._v("g"),v("code",[e._v("u")]),e._v("a"),v("code",[e._v("g")]),e._v("e"),v("code"),e._v("u"),v("code",[e._v("n")]),e._v("d"),v("code",[e._v("e")]),e._v("r"),v("code",[e._v("s")]),e._v("t"),v("code",[e._v("a")]),e._v("n"),v("code",[e._v("d")]),e._v("i"),v("code",[e._v("n")]),e._v("g"),v("code",[e._v("Given a tensor `input`, this operation inserts a dimension of 1 at the dimension index `axis` of `input`'s shape. The dimension index `axis` starts at zero; if you specify a negative number for `axis` it is counted backward from the end. This operation is useful if you want to add a batch dimension to a single element. For example, if you have a single image of shape `[height, width, channels]`, you can make it a batch of 1 image with expand_dims(image, 0), which will make the shape")]),e._v(".")])]),e._v(" "),v("h4",{attrs:{id:"other-examples"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#other-examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Other examples:")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v(" # 't' is a tensor of shape [2]\ntf.shape(tf.expand_dims(t, 0))  # [1, 2]\ntf.shape(tf.expand_dims(t, 1))  # [2, 1]\ntf.shape(tf.expand_dims(t, -1))  # [2, 1]\n\n# 't2' is a tensor of shape [2, 3, 5]\ntf.shape(tf.expand_dims(t2, 0))  # [1, 2, 3, 5]\ntf.shape(tf.expand_dims(t2, 2))  # [2, 3, 1, 5]\ntf.shape(tf.expand_dims(t2, 3))  # [2, 3, 5, 1]\n")])])]),v("p",[e._v("This operation requires that:\n-1-input.dims() <= dim <= input.dims()\nThis operation is related to "),v("code",[e._v("squeeze")]),e._v("(), which removes dimensions of size 1.")]),e._v(" "),v("h4",{attrs:{id:"args"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("input")]),e._v(": A "),v("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),v("li",[v("code",[e._v("axis")]),e._v(": 0-D (scalar). Specifies the dimension index at which to expand the shape of "),v("code",[e._v("input")]),e._v(". Must be in the range [-rank("),v("code",[e._v("input")]),e._v(") - 1, rank("),v("code",[e._v("input")]),e._v(")].")]),e._v(" "),v("li",[v("code",[e._v(": The")]),e._v(" of the output "),v("code",[e._v("Tensor")]),e._v(" (optional).")])]),e._v(" "),v("h4",{attrs:{id:"returns"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),v("p",[e._v("A "),v("code",[e._v("Tensor")]),e._v(" with the same data as "),v("code",[e._v("input")]),e._v(", but its shape has an additional dimension of size 1 added.")])])}),[],!1,null,null,null);_.default=o.exports}}]);