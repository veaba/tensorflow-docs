(window.webpackJsonp=window.webpackJsonp||[]).push([[2579],{2770:function(e,t,n){"use strict";n.r(t);var s=n(0),_=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("Reverses variable length slices.")]),e._v(" "),n("h3",{attrs:{id:"aliases"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("tf.compat.v2.reverse_sequence")])])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(" tf.reverse_sequence(\n    input,\n    seq_lengths,\n    seq_axis=None,\n    batch_axis=None,\n    name=None\n)\n")])])]),n("p",[e._v("Th"),n("code",[e._v("i")]),e._v("s op f"),n("code",[e._v("i")]),e._v("rst sl"),n("code",[e._v("i")]),e._v("ces "),n("code",[e._v("input")]),e._v(" along the d"),n("code",[e._v("i")]),e._v("mens"),n("code",[e._v("i")]),e._v("on "),n("code",[e._v("batch_axis")]),e._v(", and for each sl"),n("code",[e._v("i")]),e._v("ce "),n("code",[e._v("i")]),e._v(", reverses the f"),n("code",[e._v("i")]),e._v("rst "),n("code",[e._v("seq_lengths[i]")]),e._v(" elements along the d"),n("code",[e._v("i")]),e._v("mens"),n("code",[e._v("i")]),e._v("on "),n("code",[e._v("seq_axis")]),e._v(".\nThe elements of "),n("code",[e._v("seq_lengths")]),e._v(" must obey "),n("code",[e._v("seq_lengths")]),e._v("[i] <= input.dims[seq_dim], and "),n("code",[e._v("seq_lengths")]),e._v(" must be a vector of length "),n("code",[e._v("input.dims[batch_dim]")]),e._v(".\nThe output sl"),n("code",[e._v("i")]),e._v("ce "),n("code",[e._v("i")]),e._v(" along d"),n("code",[e._v("i")]),e._v("mens"),n("code",[e._v("i")]),e._v("on "),n("code",[e._v("batch_axis")]),e._v(" "),n("code",[e._v("i")]),e._v("s then g"),n("code",[e._v("i")]),e._v("ven by "),n("code",[e._v("i")]),e._v("nput sl"),n("code",[e._v("i")]),e._v("ce "),n("code",[e._v("i")]),e._v(", w"),n("code",[e._v("i")]),e._v("th the f"),n("code",[e._v("i")]),e._v("rst "),n("code",[e._v("seq_lengths[i]")]),e._v(" sl"),n("code",[e._v("i")]),e._v("ces along d"),n("code",[e._v("i")]),e._v("mens"),n("code",[e._v("i")]),e._v("on "),n("code",[e._v("seq_axis")]),e._v(" reversed.")]),e._v(" "),n("h4",{attrs:{id:"for-example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(" # Given this:\nbatch_dim = 0\nseq_dim = 1\ninput.dims = (4, 8, ...)\nseq_lengths = [7, 2, 3, 5]\n\n# then slices of input are reversed on seq_dim, but only up to seq_lengths:\noutput[0, 0:7, :, ...] = input[0, 7:0:-1, :, ...]\noutput[1, 0:2, :, ...] = input[1, 2:0:-1, :, ...]\noutput[2, 0:3, :, ...] = input[2, 3:0:-1, :, ...]\noutput[3, 0:5, :, ...] = input[3, 5:0:-1, :, ...]\n\n# while entries past seq_lens are copied through:\noutput[0, 7:, :, ...] = input[0, 7:, :, ...]\noutput[1, 2:, :, ...] = input[1, 2:, :, ...]\noutput[2, 3:, :, ...] = input[2, 3:, :, ...]\noutput[3, 2:, :, ...] = input[3, 2:, :, ...]\n")])])]),n("p",[e._v("In contrast, if:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(" # Given this:\nbatch_dim = 2\nseq_dim = 0\ninput.dims = (8, ?, 4, ...)\nseq_lengths = [7, 2, 3, 5]\n\n# then slices of input are reversed on seq_dim, but only up to seq_lengths:\noutput[0:7, :, 0, :, ...] = input[7:0:-1, :, 0, :, ...]\noutput[0:2, :, 1, :, ...] = input[2:0:-1, :, 1, :, ...]\noutput[0:3, :, 2, :, ...] = input[3:0:-1, :, 2, :, ...]\noutput[0:5, :, 3, :, ...] = input[5:0:-1, :, 3, :, ...]\n\n# while entries past seq_lens are copied through:\noutput[7:, :, 0, :, ...] = input[7:, :, 0, :, ...]\noutput[2:, :, 1, :, ...] = input[2:, :, 1, :, ...]\noutput[3:, :, 2, :, ...] = input[3:, :, 2, :, ...]\noutput[2:, :, 3, :, ...] = input[2:, :, 3, :, ...]\n")])])]),n("h4",{attrs:{id:"args"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("input")]),e._v(": A "),n("code",[e._v("Tensor")]),e._v(". The "),n("code",[e._v("input")]),e._v(" to reverse.")]),e._v(" "),n("li",[n("code",[e._v("seq_lengths")]),e._v(": A "),n("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),n("code",[e._v("int32")]),e._v(", "),n("code",[e._v("int64")]),e._v(". 1-D with length "),n("code",[e._v("input")]),e._v(".dims(batch_dim) and max("),n("code",[e._v("seq_lengths")]),e._v(") <= "),n("code",[e._v("input")]),e._v(".dims(seq_dim)")]),e._v(" "),n("li",[n("code",[e._v(": An")]),e._v(". The dimension which is partially reversed.")]),e._v(" "),n("li",[n("code",[e._v(": An optional `int`. Defaults to")]),e._v(". The dimension along which reversal is performed.")]),e._v(" "),n("li",[n("code",[e._v(": A")]),e._v(" for the operation (optional).")])]),e._v(" "),n("h4",{attrs:{id:"returns"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),n("p",[e._v("A "),n("code",[e._v("Tensor")]),e._v(". Has the same type as "),n("code",[e._v("input")]),e._v(".")])])}),[],!1,null,null,null);t.default=_.exports}}]);