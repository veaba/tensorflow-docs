(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{352:function(e,t,a){"use strict";a.r(t);var r=a(0),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Experimental API for building input pipelines.")]),e._v(" "),a("p",[e._v("This module contains experimental "),a("code",[e._v("Dataset")]),e._v(" sources and transformations that can be used in conjunction with the "),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/Dataset",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.data.Dataset"),a("OutboundLink")],1),e._v(" API. Note that the "),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.data.experimental"),a("OutboundLink")],1),e._v(" API is not subject to the same backwards compatibility guarantees as "),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.data"),a("OutboundLink")],1),e._v(", but we will provide deprecation advice in advance of removing existing functionality.")]),e._v(" "),a("p",[e._v("See "),a("a",{attrs:{href:"https://tensorflow.org/guide/datasets",target:"_blank",rel:"noopener noreferrer"}},[e._v("Importing Data"),a("OutboundLink")],1),e._v(" for an overview.")]),e._v(" "),a("h2",{attrs:{id:"classes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#classes","aria-hidden":"true"}},[e._v("#")]),e._v(" Classes")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/CheckpointInputPipelineHook",target:"_blank",rel:"noopener noreferrer"}},[e._v("class CheckpointInputPipelineHook"),a("OutboundLink")],1),e._v(": Checkpoints input pipeline state every N steps or seconds.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/CsvDataset",target:"_blank",rel:"noopener noreferrer"}},[e._v("class CsvDataset"),a("OutboundLink")],1),e._v(": A Dataset comprising lines from one or more CSV files.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/DatasetSpec",target:"_blank",rel:"noopener noreferrer"}},[e._v("class DatasetStructure"),a("OutboundLink")],1),e._v(": Type specification for "),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/Dataset",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.data.Dataset"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/DistributeOptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("class DistributeOptions"),a("OutboundLink")],1),e._v(": Represents options for distributed data processing.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/MapVectorizationOptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("class MapVectorizationOptions"),a("OutboundLink")],1),e._v(": Represents options for the MapVectorization optimization.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/OptimizationOptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("class OptimizationOptions"),a("OutboundLink")],1),e._v(": Represents options for dataset optimizations.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/Optional",target:"_blank",rel:"noopener noreferrer"}},[e._v("class Optional"),a("OutboundLink")],1),e._v(": Wraps a value that may/may not be present at runtime.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/OptionalSpec",target:"_blank",rel:"noopener noreferrer"}},[e._v("class OptionalStructure"),a("OutboundLink")],1),e._v(": Represents an optional potentially containing a structured value.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/RandomDataset",target:"_blank",rel:"noopener noreferrer"}},[e._v("class RandomDataset"),a("OutboundLink")],1),e._v(": A Dataset of pseudorandom values.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/Reducer",target:"_blank",rel:"noopener noreferrer"}},[e._v("class Reducer"),a("OutboundLink")],1),e._v(": A reducer is used for reducing a set of elements.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/SqlDataset",target:"_blank",rel:"noopener noreferrer"}},[e._v("class SqlDataset"),a("OutboundLink")],1),e._v(": A Dataset consisting of the results from a SQL query.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/StatsAggregator",target:"_blank",rel:"noopener noreferrer"}},[e._v("class StatsAggregator"),a("OutboundLink")],1),e._v(": A stateful resource that aggregates statistics from one or more iterators.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/StatsOptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("class StatsOptions"),a("OutboundLink")],1),e._v(": Represents options for collecting dataset stats using StatsAggregator.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/TypeSpec",target:"_blank",rel:"noopener noreferrer"}},[e._v("class Structure"),a("OutboundLink")],1),e._v(": Specifies a TensorFlow value type.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/TFRecordWriter",target:"_blank",rel:"noopener noreferrer"}},[e._v("class TFRecordWriter"),a("OutboundLink")],1),e._v(": Writes data to a TFRecord file.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/ThreadingOptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("class ThreadingOptions"),a("OutboundLink")],1),e._v(": Represents options for dataset threading.")]),e._v(" "),a("h2",{attrs:{id:"functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions","aria-hidden":"true"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/Counter",target:"_blank",rel:"noopener noreferrer"}},[e._v("Counter(...)"),a("OutboundLink")],1),e._v(": Creates a Dataset that counts from start in steps of size step.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/RaggedTensorStructure",target:"_blank",rel:"noopener noreferrer"}},[e._v("RaggedTensorStructure(...)"),a("OutboundLink")],1),e._v(": DEPRECATED FUNCTION")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/SparseTensorStructure",target:"_blank",rel:"noopener noreferrer"}},[e._v("SparseTensorStructure(...)"),a("OutboundLink")],1),e._v(": DEPRECATED FUNCTION")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/TensorArrayStructure",target:"_blank",rel:"noopener noreferrer"}},[e._v("TensorArrayStructure(...)"),a("OutboundLink")],1),e._v(": DEPRECATED FUNCTION")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/TensorStructure",target:"_blank",rel:"noopener noreferrer"}},[e._v("TensorStructure(...)"),a("OutboundLink")],1),e._v(": DEPRECATED FUNCTION")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/bucket_by_sequence_length",target:"_blank",rel:"noopener noreferrer"}},[e._v("bucket_by_sequence_length(...)"),a("OutboundLink")],1),e._v(": A transformation that buckets elements in a Dataset by length.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/bytes_produced_stats",target:"_blank",rel:"noopener noreferrer"}},[e._v("bytes_produced_stats(...)"),a("OutboundLink")],1),e._v(": Records the number of bytes produced by each element of the input dataset.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/cardinality",target:"_blank",rel:"noopener noreferrer"}},[e._v("cardinality(...)"),a("OutboundLink")],1),e._v(": Returns the cardinality of dataset, if known.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/choose_from_datasets",target:"_blank",rel:"noopener noreferrer"}},[e._v("choose_from_datasets(...)"),a("OutboundLink")],1),e._v(": Creates a dataset that deterministically chooses elements from datasets.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/copy_to_device",target:"_blank",rel:"noopener noreferrer"}},[e._v("copy_to_device(...)"),a("OutboundLink")],1),e._v(": A transformation that copies dataset elements to the given target_device.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/dense_to_sparse_batch",target:"_blank",rel:"noopener noreferrer"}},[e._v("dense_to_sparse_batch(...)"),a("OutboundLink")],1),e._v(": A transformation that batches ragged elements into tf.SparseTensors.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/enumerate_dataset",target:"_blank",rel:"noopener noreferrer"}},[e._v("enumerate_dataset(...)"),a("OutboundLink")],1),e._v(": A transformation that enumerates the elements of a dataset. (deprecated)")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/from_variant",target:"_blank",rel:"noopener noreferrer"}},[e._v("from_variant(...)"),a("OutboundLink")],1),e._v(": Constructs a dataset from the given variant and structure.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/get_next_as_optional",target:"_blank",rel:"noopener noreferrer"}},[e._v("get_next_as_optional(...)"),a("OutboundLink")],1),e._v(": Returns an Optional that contains the next value from the iterator.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/get_single_element",target:"_blank",rel:"noopener noreferrer"}},[e._v("get_single_element(...)"),a("OutboundLink")],1),e._v(": Returns the single element in dataset as a nested structure of tensors.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/get_structure",target:"_blank",rel:"noopener noreferrer"}},[e._v("get_structure(...)"),a("OutboundLink")],1),e._v(": Returns the type specification of an element of a Dataset or Iterator.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/group_by_reducer",target:"_blank",rel:"noopener noreferrer"}},[e._v("group_by_reducer(...)"),a("OutboundLink")],1),e._v(": A transformation that groups elements and performs a reduction.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/group_by_window",target:"_blank",rel:"noopener noreferrer"}},[e._v("group_by_window(...)"),a("OutboundLink")],1),e._v(": A transformation that groups windows of elements by key and reduces them.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/ignore_errors",target:"_blank",rel:"noopener noreferrer"}},[e._v("ignore_errors(...)"),a("OutboundLink")],1),e._v(": Creates a Dataset from another Dataset and silently ignores any errors.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/latency_stats",target:"_blank",rel:"noopener noreferrer"}},[e._v("latency_stats(...)"),a("OutboundLink")],1),e._v(": Records the latency of producing each element of the input dataset.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/make_batched_features_dataset",target:"_blank",rel:"noopener noreferrer"}},[e._v("make_batched_features_dataset(...)"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/make_csv_dataset",target:"_blank",rel:"noopener noreferrer"}},[e._v("make_csv_dataset(...)"),a("OutboundLink")],1),e._v(": Reads CSV files into a dataset.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/make_saveable_from_iterator",target:"_blank",rel:"noopener noreferrer"}},[e._v("make_saveable_from_iterator(...)"),a("OutboundLink")],1),e._v(": Returns a SaveableObject for saving/restoring iterator state using Saver.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/map_and_batch",target:"_blank",rel:"noopener noreferrer"}},[e._v("map_and_batch(...)"),a("OutboundLink")],1),e._v(": Fused implementation of map and batch. (deprecated)")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/map_and_batch_with_legacy_function",target:"_blank",rel:"noopener noreferrer"}},[e._v("map_and_batch_with_legacy_function(...)"),a("OutboundLink")],1),e._v(": Fused implementation of map and batch. (deprecated)")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/parallel_interleave",target:"_blank",rel:"noopener noreferrer"}},[e._v("parallel_interleave(...)"),a("OutboundLink")],1),e._v(": A parallel version of the Dataset.interleave() transformation. (deprecated)")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/parse_example_dataset",target:"_blank",rel:"noopener noreferrer"}},[e._v("parse_example_dataset(...)"),a("OutboundLink")],1),e._v(": A transformation that parses Example protos into a dict of tensors.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/prefetch_to_device",target:"_blank",rel:"noopener noreferrer"}},[e._v("prefetch_to_device(...)"),a("OutboundLink")],1),e._v(": A transformation that prefetches dataset values to the given device.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/rejection_resample",target:"_blank",rel:"noopener noreferrer"}},[e._v("rejection_resample(...)"),a("OutboundLink")],1),e._v(": A transformation that resamples a dataset to achieve a target distribution.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/sample_from_datasets",target:"_blank",rel:"noopener noreferrer"}},[e._v("sample_from_datasets(...)"),a("OutboundLink")],1),e._v(": Samples elements at random from the datasets in datasets.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/scan",target:"_blank",rel:"noopener noreferrer"}},[e._v("scan(...)"),a("OutboundLink")],1),e._v(": A transformation that scans a function across an input dataset.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/data/experimental/sample_from_datasets",target:"_blank",rel:"noopener noreferrer"}},[e._v("shuffle_and_repeat(...)"),a("OutboundLink")],1),e._v(": Shuffles and repeats a Dataset returning a new permutation for each epoch. (deprecated)")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/take_while",target:"_blank",rel:"noopener noreferrer"}},[e._v("take_while(...)"),a("OutboundLink")],1),e._v(": A transformation that stops dataset iteration based on a predicate.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/to_variant",target:"_blank",rel:"noopener noreferrer"}},[e._v("to_variant(...)"),a("OutboundLink")],1),e._v(": Returns a variant representing the given dataset.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/unbatch",target:"_blank",rel:"noopener noreferrer"}},[e._v("unbatch(...)"),a("OutboundLink")],1),e._v(": Splits elements of a dataset into multiple elements on the batch dimension. (deprecated)")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/data/experimental/unique",target:"_blank",rel:"noopener noreferrer"}},[e._v("unique(...)"),a("OutboundLink")],1),e._v(": Creates a Dataset from another Dataset, discarding duplicates.")]),e._v(" "),a("h2",{attrs:{id:"other-members"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#other-members","aria-hidden":"true"}},[e._v("#")]),e._v(" Other Members")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("AUTOTUNE = -1")])]),e._v(" "),a("li",[a("code",[e._v("INFINITE_CARDINALITY = -1")])]),e._v(" "),a("li",[a("code",[e._v("UNKNOWN_CARDINALITY = -2")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);