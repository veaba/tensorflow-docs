(window.webpackJsonp=window.webpackJsonp||[]).push([[655],{843:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"class-basiclstmcell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-basiclstmcell","aria-hidden":"true"}},[e._v("#")]),e._v(" Class BasicLSTMCell")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/rnn_cell/LSTMCell",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.nn.rnn_cell.LSTMCell"),a("OutboundLink")],1),e._v("DEPRECATED: Please use  instead.")]),e._v(" "),a("p",[e._v("Basic LSTM recurrent network cell.")]),e._v(" "),a("p",[e._v("The implementation is based on: http://arxiv.org/abs/1409.2329.")]),e._v(" "),a("p",[e._v("We add forget_bias (default: 1) to the biases of the forget gate in order to reduce the scale of forgetting in the beginning of the training.")]),e._v(" "),a("p",[e._v("It does not allow cell clipping, a projection layer, and does not use peep-hole connections: it is the basic baseline.\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/nn/rnn_cell/LSTMCell",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.nn.rnn_cell.LSTMCell"),a("OutboundLink")],1),e._v("For advanced models, please use the full  that follows.")]),e._v(" "),a("p",[e._v("Note that this cell is not optimized for performance. Please use tf.contrib.cudnn_rnn.CudnnLSTM for better performance on GPU, or tf.contrib.rnn.LSTMBlockCell and tf.contrib.rnn.LSTMBlockFusedCell for better performance on CPU.")]),e._v(" "),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("init")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/rnn_cell_impl.py#L658-L714",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __init__(\n    num_units,\n    forget_bias=1.0,\n    state_is_tuple=True,\n    activation=None,\n    reuse=None,\n    name=None,\n    dtype=None,\n    **kwargs\n)\n")])])]),a("p",[e._v("Initialize the basic LSTM cell. (deprecated)")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("num_units")]),e._v(": int, The number of units in the LSTM cell.")]),e._v(" "),a("li",[a("code",[e._v("forget_bias")]),e._v(": float, The bias added to forget gates (see above). Must set to "),a("code",[e._v("0.0")]),e._v(" manually when restoring from CudnnLSTM-trained checkpoints.")]),e._v(" "),a("li",[a("code",[e._v("state_is_tuple")]),e._v(": If True, accepted and returned states are 2-tuples of the "),a("code",[e._v("c_state")]),e._v(" and "),a("code",[e._v("m_state")]),e._v(". If False, they are concatenated along the column axis. The latter behavior will soon be deprecated.")]),e._v(" "),a("li",[a("code",[e._v("activation")]),e._v(": Activation function of the inner states. Default: "),a("code",[e._v("tanh")]),e._v(". It could also be string that is within Keras "),a("code",[e._v("activation")]),e._v(" function names.")]),e._v(" "),a("li",[a("code",[e._v("reuse")]),e._v(": (optional) Python boolean describing whether to "),a("code",[e._v("reuse")]),e._v(" variables in an existing scope. If not "),a("code",[e._v("True")]),e._v(", and the existing scope already has the given variables, an error is raised.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": String, the "),a("code",[e._v("name")]),e._v(" of the layer. Layers with the same "),a("code",[e._v("name")]),e._v(" will share weights, but to avoid mistakes we require "),a("code",[e._v("reuse")]),e._v("="),a("code",[e._v("True")]),e._v(" in such cases.")]),e._v(" "),a("li",[a("code",[e._v("dtype")]),e._v(": Default "),a("code",[e._v("dtype")]),e._v(" of the layer (default of "),a("code",[e._v("None")]),e._v(" means use the type of the first input). Required when "),a("code",[e._v("build")]),e._v(" is "),a("code",[e._v("call")]),e._v("ed before "),a("code",[e._v("call")]),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),a("h3",{attrs:{id:"graph"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#graph","aria-hidden":"true"}},[e._v("#")]),e._v(" graph")]),e._v(" "),a("p",[e._v("DEPRECATED FUNCTION")]),e._v(" "),a("h3",{attrs:{id:"output-size"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-size","aria-hidden":"true"}},[e._v("#")]),e._v(" output_size")]),e._v(" "),a("p",[e._v("Integer or TensorShape: size of outputs produced by this cell.")]),e._v(" "),a("h3",{attrs:{id:"scope-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scope-name","aria-hidden":"true"}},[e._v("#")]),e._v(" scope_name")]),e._v(" "),a("h3",{attrs:{id:"state-size"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state-size","aria-hidden":"true"}},[e._v("#")]),e._v(" state_size")]),e._v(" "),a("p",[e._v("size(s) of state(s) used by this cell.")]),e._v(" "),a("p",[e._v("It can be represented by an Integer, a TensorShape or a tuple of Integers or TensorShapes.")]),e._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),a("h3",{attrs:{id:"get-initial-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-initial-state","aria-hidden":"true"}},[e._v("#")]),e._v(" get_initial_state")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/rnn_cell_impl.py#L281-L309",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_initial_state(\n    inputs=None,\n    batch_size=None,\n    dtype=None\n)\n")])])]),a("h3",{attrs:{id:"zero-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zero-state","aria-hidden":"true"}},[e._v("#")]),e._v(" zero_state")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/rnn_cell_impl.py#L311-L340",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" zero_state(\n    batch_size,\n    dtype\n)\n")])])]),a("p",[e._v("Return zero-filled state tensor(s).")]),e._v(" "),a("h4",{attrs:{id:"args-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("batch_size")]),e._v(": int, float, or unit Tensor representing the batch size.")]),e._v(" "),a("li",[a("code",[e._v("dtype")]),e._v(": the data type to use for the state.")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("If state_size is an int or TensorShape, then the return value is a N-D tensor of shape [batch_size, state_size] filled with zeros.")]),e._v(" "),a("p",[e._v("If state_size is a nested list or tuple, then the return value is a nested list or tuple (of the same structure) of 2-D tensors with the shapes [batch_size, s] for each s in state_size.")])])}),[],!1,null,null,null);t.default=s.exports}}]);