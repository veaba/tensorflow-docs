(window.webpackJsonp=window.webpackJsonp||[]).push([[2578],{2769:function(e,s,v){"use strict";v.r(s);var n=v(0),t=Object(n.a)({},(function(){var e=this,s=e.$createElement,v=e._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("p",[e._v("Defined in generated file: "),v("code",[e._v("python/ops/gen_array_ops.py")]),e._v("\nReverses specific dimensions of a tensor.")]),e._v(" "),v("h3",{attrs:{id:"aliases"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("tf.compat.v1.manip.reverse")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v1.reverse")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v1.reverse")]),e._v("_v2")]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v2.reverse")])])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v(" tf.reverse(\n    tensor,\n    axis,\n    name=None\n)\n")])])]),v("p",[v("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/reverse",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.reverse"),v("OutboundLink")],1),e._v("NOTE  has now changed behavior in preparation for 1.0. _v2 is currently an alias that will be deprecated before TF 1.0.")]),e._v(" "),v("p",[e._v("G"),v("code",[e._v("i")]),e._v("ven a "),v("code",[e._v("tensor")]),e._v(", and a "),v("code",[e._v("int32")]),e._v(" "),v("code",[e._v("tensor")]),e._v(" "),v("code",[e._v("axis")]),e._v(" represent"),v("code",[e._v("i")]),e._v("ng the set of d"),v("code",[e._v("i")]),e._v("mens"),v("code",[e._v("i")]),e._v("ons of "),v("code",[e._v("tensor")]),e._v(" to reverse. Th"),v("code",[e._v("i")]),e._v("s operat"),v("code",[e._v("i")]),e._v("on reverses each d"),v("code",[e._v("i")]),e._v("mens"),v("code",[e._v("i")]),e._v("on "),v("code",[e._v("i")]),e._v(" for wh"),v("code",[e._v("i")]),e._v("ch there ex"),v("code",[e._v("i")]),e._v("sts "),v("code",[e._v("j")]),e._v(" s.t. "),v("code",[e._v("axis")]),e._v("["),v("code",[e._v("j")]),e._v("] == "),v("code",[e._v("i")]),e._v(".\n"),v("code",[e._v("tensor")]),e._v(" can have up to 8 dimensions. The number of dimensions specified in "),v("code",[e._v("axis")]),e._v(" may be 0 or more entries. If an index is specified more than once, a InvalidArgument error is raised.")]),e._v(" "),v("h4",{attrs:{id:"for-example"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v(" # tensor 't' is [[[[ 0,  1,  2,  3],\n#                  [ 4,  5,  6,  7],\n#                  [ 8,  9, 10, 11]],\n#                 [[12, 13, 14, 15],\n#                  [16, 17, 18, 19],\n#                  [20, 21, 22, 23]]]]\n# tensor 't' shape is [1, 2, 3, 4]\n\n# 'dims' is [3] or 'dims' is [-1]\nreverse(t, dims) ==> [[[[ 3,  2,  1,  0],\n                        [ 7,  6,  5,  4],\n                        [ 11, 10, 9, 8]],\n                       [[15, 14, 13, 12],\n                        [19, 18, 17, 16],\n                        [23, 22, 21, 20]]]]\n\n# 'dims' is '[1]' (or 'dims' is '[-3]')\nreverse(t, dims) ==> [[[[12, 13, 14, 15],\n                        [16, 17, 18, 19],\n                        [20, 21, 22, 23]\n                       [[ 0,  1,  2,  3],\n                        [ 4,  5,  6,  7],\n                        [ 8,  9, 10, 11]]]]\n\n# 'dims' is '[2]' (or 'dims' is '[-2]')\nreverse(t, dims) ==> [[[[8, 9, 10, 11],\n                        [4, 5, 6, 7],\n                        [0, 1, 2, 3]]\n                       [[20, 21, 22, 23],\n                        [16, 17, 18, 19],\n                        [12, 13, 14, 15]]]]\n")])])]),v("h4",{attrs:{id:"args"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("tensor")]),e._v(": A "),v("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),v("code",[e._v("uint8")]),e._v(", "),v("code",[e._v("int8")]),e._v(", "),v("code",[e._v("uint16")]),e._v(", "),v("code",[e._v("int16")]),e._v(", "),v("code",[e._v("int32")]),e._v(", "),v("code",[e._v("int64")]),e._v(", "),v("code",[e._v("bool")]),e._v(", "),v("code",[e._v("bfloat16")]),e._v(", "),v("code",[e._v("half")]),e._v(", "),v("code",[e._v("float32")]),e._v(", "),v("code",[e._v("float64")]),e._v(", "),v("code",[e._v("complex64")]),e._v(", "),v("code",[e._v("complex128")]),e._v(", "),v("code",[e._v("string")]),e._v(". Up to 8-D.")])]),e._v(" "),v("h4",{attrs:{id:"returns"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),v("p",[e._v("A "),v("code",[e._v("Tensor")]),e._v(". Has the same type as "),v("code",[e._v("tensor")]),e._v(".")])])}),[],!1,null,null,null);s.default=t.exports}}]);