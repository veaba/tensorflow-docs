(window.webpackJsonp=window.webpackJsonp||[]).push([[2436],{2624:function(e,t,a){"use strict";a.r(t);var o=a(0),r=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"class-checkpointmanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-checkpointmanager","aria-hidden":"true"}},[e._v("#")]),e._v(" Class CheckpointManager")]),e._v(" "),a("p",[e._v("Deletes old checkpoints.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[e._v("Class "),a("code",[e._v("tf.compat.v1.train.CheckpointManager")])]),e._v(" "),a("li",[e._v("Class "),a("code",[e._v("tf.compat.v2.train.CheckpointManager")])])]),e._v(" "),a("h3",{attrs:{id:"used-in-the-guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("T")]),e._v("r"),a("code",[e._v("a")]),e._v("i"),a("code",[e._v("n")]),e._v("i"),a("code",[e._v("n")]),e._v("g"),a("code"),e._v("c"),a("code",[e._v("h")]),e._v("e"),a("code",[e._v("c")]),e._v("k"),a("code",[e._v("p")]),e._v("o"),a("code",[e._v("i")]),e._v("n"),a("code",[e._v("t")]),e._v("s``")])]),e._v(" "),a("h3",{attrs:{id:"used-in-the-tutorials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("C")]),e._v("y"),a("code",[e._v("c")]),e._v("l"),a("code",[e._v("e")]),e._v("G"),a("code",[e._v("A")]),e._v("N``")]),e._v(" "),a("li",[a("code",[e._v("I")]),e._v("m"),a("code",[e._v("a")]),e._v("g"),a("code",[e._v("e")]),e._v(" "),a("code",[e._v("c")]),e._v("a"),a("code",[e._v("p")]),e._v("t"),a("code",[e._v("i")]),e._v("o"),a("code",[e._v("n")]),e._v("i"),a("code",[e._v("n")]),e._v("g"),a("code"),e._v("w"),a("code",[e._v("i")]),e._v("t"),a("code",[e._v("h")]),e._v(" "),a("code",[e._v("v")]),e._v("i"),a("code",[e._v("s")]),e._v("u"),a("code",[e._v("a")]),e._v("l"),a("code"),e._v("a"),a("code",[e._v("t")]),e._v("t"),a("code",[e._v("e")]),e._v("n"),a("code",[e._v("t")]),e._v("i"),a("code",[e._v("o")]),e._v("n``")]),e._v(" "),a("li",[a("code",[e._v("T")]),e._v("r"),a("code",[e._v("a")]),e._v("n"),a("code",[e._v("s")]),e._v("f"),a("code",[e._v("o")]),e._v("r"),a("code",[e._v("m")]),e._v("e"),a("code",[e._v("r")]),e._v(" "),a("code",[e._v("m")]),e._v("o"),a("code",[e._v("d")]),e._v("e"),a("code",[e._v("l")]),e._v(" "),a("code",[e._v("f")]),e._v("o"),a("code",[e._v("r")]),e._v(" "),a("code",[e._v("l")]),e._v("a"),a("code",[e._v("n")]),e._v("g"),a("code",[e._v("u")]),e._v("a"),a("code",[e._v("g")]),e._v("e"),a("code"),e._v("u"),a("code",[e._v("n")]),e._v("d"),a("code",[e._v("e")]),e._v("r"),a("code",[e._v("s")]),e._v("t"),a("code",[e._v("a")]),e._v("n"),a("code",[e._v("d")]),e._v("i"),a("code",[e._v("n")]),e._v("g``")])]),e._v(" "),a("h4",{attrs:{id:"example-usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-usage","aria-hidden":"true"}},[e._v("#")]),e._v(" Example usage:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' import tensorflow as tf\ncheckpoint = tf.train.Checkpoint(optimizer=optimizer, model=model)\nmanager = tf.contrib.checkpoint.CheckpointManager(\n    checkpoint, directory="/tmp/model", max_to_keep=5)\nstatus = checkpoint.restore(manager.latest_checkpoint)\nwhile True:\n  # train\n  manager.save()\n')])])]),a("p",[e._v("CheckpointManager preserves its own state across instantiations (see the "),a("strong",[e._v("init")]),e._v(" documentation for details). Only one should be active in a particular directory at a time.")]),e._v(" "),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("init")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/checkpoint_management.py#L517-L606",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __init__(\n    checkpoint,\n    directory,\n    max_to_keep,\n    keep_checkpoint_every_n_hours=None,\n    checkpoint_name='ckpt'\n)\n")])])]),a("p",[e._v("Configure a CheckpointManager for use in directory.")]),e._v(" "),a("p",[e._v("If a CheckpointManager was previously used in directory, its state will be restored. This includes the list of managed checkpoints and the timestamp bookkeeping necessary to support keep_checkpoint_every_n_hours. The behavior of the new CheckpointManager will be the same as the previous CheckpointManager, including cleaning up existing checkpoints if appropriate.")]),e._v(" "),a("p",[e._v('Checkpoints are only considered for deletion just after a new checkpoint has been added. At that point, max_to_keep checkpoints will remain in an "active set". Once a checkpoint is preserved by keep_checkpoint_every_n_hours it will not be deleted by this CheckpointManager or any future CheckpointManager instantiated in directory (regardless of the new setting of keep_checkpoint_every_n_hours). The max_to_keep checkpoints in the active set may be deleted by this CheckpointManager or a future CheckpointManager instantiated in directory (subject to its max_to_keep and keep_checkpoint_every_n_hours settings).')]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("checkpoint")]),e._v(": The "),a("code",[e._v("tf.train.Checkpoint")]),e._v(" instance to save and manage "),a("code",[e._v("checkpoint")]),e._v("s for.")]),e._v(" "),a("li",[a("code",[e._v("directory")]),e._v(": The path to a "),a("code",[e._v("directory")]),e._v(" in which to write "),a("code",[e._v("checkpoint")]),e._v('s. A special file named "'),a("code",[e._v("checkpoint")]),e._v('" is also written to this '),a("code",[e._v("directory")]),e._v(" (in a human-readable text format) which contains the state of the "),a("code",[e._v("CheckpointManager")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("max_to_keep")]),e._v(": An integer, the number of "),a("code",[e._v("checkpoint")]),e._v("s to keep. Unless preserved by "),a("code",[e._v("keep_checkpoint_every_n_hours")]),e._v(", "),a("code",[e._v("checkpoint")]),e._v("s will be deleted from the active set, oldest first, until only "),a("code",[e._v("max_to_keep")]),e._v(" "),a("code",[e._v("checkpoint")]),e._v("s remain. If "),a("code",[e._v("None")]),e._v(", no "),a("code",[e._v("checkpoint")]),e._v("s are deleted and everything stays in the active set. Note that "),a("code",[e._v("max_to_keep")]),e._v("="),a("code",[e._v("None")]),e._v(" will keep all "),a("code",[e._v("checkpoint")]),e._v(" paths in memory and in the "),a("code",[e._v("checkpoint")]),e._v(" state protocol buffer on disk.")]),e._v(" "),a("li",[a("code",[e._v("keep_checkpoint_every_n_hours")]),e._v(": Upon removal from the active set, a "),a("code",[e._v("checkpoint")]),e._v(" will be preserved if it has been at least "),a("code",[e._v("keep_checkpoint_every_n_hours")]),e._v(" since the last preserved "),a("code",[e._v("checkpoint")]),e._v(". The default setting of "),a("code",[e._v("None")]),e._v(" does not preserve any "),a("code",[e._v("checkpoint")]),e._v("s in this way.")]),e._v(" "),a("li",[a("code",[e._v("checkpoint")]),e._v("_name: Custom name for the "),a("code",[e._v("checkpoint")]),e._v(" file.")])]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If "),a("code",[e._v("max_to_keep")]),e._v(" is not a positive integer.")])]),e._v(" "),a("h2",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),a("h3",{attrs:{id:"checkpoints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#checkpoints","aria-hidden":"true"}},[e._v("#")]),e._v(" checkpoints")]),e._v(" "),a("p",[e._v("A list of managed checkpoints.")]),e._v(" "),a("p",[e._v("Note that checkpoints saved due to keep_checkpoint_every_n_hours will not show up in this list (to avoid ever-growing filename lists).")]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A list of filenames, sorted from oldest to newest.")]),e._v(" "),a("h3",{attrs:{id:"latest-checkpoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#latest-checkpoint","aria-hidden":"true"}},[e._v("#")]),e._v(" latest_checkpoint")]),e._v(" "),a("p",[e._v("The prefix of the most recent checkpoint in directory.\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/train/latest_checkpoint",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.train.latest_checkpoint(directory)"),a("OutboundLink")],1),e._v("Equivalent to  where directory is the constructor argument to CheckpointManager.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/train/Checkpoint#restore",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.train.Checkpoint.restore"),a("OutboundLink")],1),e._v("Suitable for passing to  to resume training.")]),e._v(" "),a("h4",{attrs:{id:"returns-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("The checkpoint prefix. If there are no checkpoints, returns None.")]),e._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),a("h3",{attrs:{id:"save"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#save","aria-hidden":"true"}},[e._v("#")]),e._v(" save")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/checkpoint_management.py#L679-L737",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" save(checkpoint_number=None)\n")])])]),a("p",[e._v("Creates a new checkpoint and manages it.")]),e._v(" "),a("h4",{attrs:{id:"args-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("checkpoint_number")]),e._v(": An optional integer, or an integer-dtype "),a("code",[e._v("Variable")]),e._v(" or "),a("code",[e._v("Tensor")]),e._v(", used to number the checkpoint. If "),a("code",[e._v("None")]),e._v(" (default), checkpoints are numbered using "),a("code",[e._v("checkpoint.save_counter")]),e._v(". Even if "),a("code",[e._v("checkpoint_number")]),e._v(" is provided, "),a("code",[e._v("save_counter")]),e._v(" is still incremented. A user-provided "),a("code",[e._v("checkpoint_number")]),e._v(" is not incremented even if it is a "),a("code",[e._v("Variable")]),e._v(".")])]),e._v(" "),a("h4",{attrs:{id:"returns-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("The path to the new checkpoint. It is also recorded in the checkpoints and latest_checkpoint properties.")])])}),[],!1,null,null,null);t.default=r.exports}}]);