(window.webpackJsonp=window.webpackJsonp||[]).push([[853],{1041:function(e,t,o){"use strict";o.r(t);var n=o(0),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("Rewrites computation for execution on a TPU system.")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(" tf.compat.v1.tpu.rewrite(\n    computation,\n    inputs=None,\n    infeed_queue=None,\n    device_assignment=None,\n    name=None\n)\n")])])]),o("h4",{attrs:{id:"args"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("computation")]),e._v(": A Python function that builds a "),o("code",[e._v("computation")]),e._v(" to apply to the input. If the function takes n inputs, 'inputs' should be a list of n tensors.\n"),o("code",[e._v("computation")]),e._v(" may return a list of operations and tensors. Tensors must come before operations in the returned list. The return value of "),o("code",[e._v("rewrite")]),e._v(" is a list of tensors corresponding to the tensors from the output of "),o("code",[e._v("computation")]),e._v(".\nAll "),o("code",[e._v("Operation")]),e._v("s constructed during "),o("code",[e._v("computation")]),e._v(" will be executed when evaluating any of the returned output tensors, not just the ones returned.")]),e._v(" "),o("li",[o("code",[e._v("inputs")]),e._v(": A list of input tensors or "),o("code",[e._v("None")]),e._v(" (equivalent to an empty list). Each input can be a nested structure containing values that are convertible to tensors. Note that passing an N-dimension list of compatible values will result in a N-dimention list of scalar tensors rather than a single Rank-N tensors. If you need different behavior, convert part of "),o("code",[e._v("inputs")]),e._v(" to tensors with "),o("code",[e._v("tf.convert_to_tensor")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("infeed_queue")]),e._v(": If not "),o("code",[e._v("None")]),e._v(", the "),o("code",[e._v("InfeedQueue")]),e._v(" from which to append a tuple of arguments as "),o("code",[e._v("inputs")]),e._v(" to "),o("code",[e._v("computation")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("device_assignment")]),e._v(": if not "),o("code",[e._v("None")]),e._v(", a "),o("code",[e._v("DeviceAssignment")]),e._v(" describing the mapping between logical cores in the "),o("code",[e._v("computation")]),e._v(" with physical cores in the TPU topology. May be omitted for a single-core "),o("code",[e._v("computation")]),e._v(", in which case the core attached to task 0, TPU device 0 is used.")]),e._v(" "),o("li",[o("code",[e._v("name")]),e._v(": (Deprecated) Does nothing.")])]),e._v(" "),o("h4",{attrs:{id:"returns"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),o("p",[e._v("Same data structure as if computation(*inputs) is called directly with some exceptions for correctness. Exceptions include: 1) None output: a NoOp would be returned which control-depends on computation. 2) Single value output: A tuple containing the value would be returned. 3) Operation-only outputs: a NoOp would be returned which control-depends on computation. TODO(b/121383831): Investigate into removing these special cases.")])])}),[],!1,null,null,null);t.default=s.exports}}]);