(window.webpackJsonp=window.webpackJsonp||[]).push([[2502],{2693:function(e,a,s){"use strict";s.r(a);var t=s(0),o=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Apply boolean mask to tensor.")]),e._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tf.compat.v2.boolean_mask")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.boolean_mask(\n    tensor,\n    mask,\n    axis=None,\n    name='boolean_mask'\n)\n")])])]),s("p",[e._v("Numpy equivalent is "),s("code",[e._v("tensor[mask]")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" # 1-D example\ntensor = [0, 1, 2, 3]\nmask = np.array([True, False, True, False])\nboolean_mask(tensor, mask)  # [0, 2]\n")])])]),s("p",[e._v("In general, 0 < dim("),s("code",[e._v("mask")]),e._v(") = K <= dim("),s("code",[e._v("tensor")]),e._v("), and "),s("code",[e._v("mask")]),e._v("'s shape must match the first K dimensions of "),s("code",[e._v("tensor")]),e._v("'s shape. We then have: boolean_"),s("code",[e._v("mask")]),e._v("("),s("code",[e._v("tensor")]),e._v(", "),s("code",[e._v("mask")]),e._v(")[i, j1,...,jd] = "),s("code",[e._v("tensor")]),e._v("["),s("code",[e._v("i1,...,iKi1,...,iK")]),e._v(",j1,...,jd] where ("),s("code",[e._v("i1,...,iKi1,...,iK")]),e._v(") is the ith "),s("code",[e._v("True")]),e._v(" entry of "),s("code",[e._v("mask")]),e._v(" (row-major order). The "),s("code",[e._v("axis")]),e._v(" could be used with "),s("code",[e._v("mask")]),e._v(" to indicate the "),s("code",[e._v("axis")]),e._v(" to "),s("code",[e._v("mask")]),e._v(" from. In that case, "),s("code",[e._v("axis")]),e._v(" + dim("),s("code",[e._v("mask")]),e._v(") <= dim("),s("code",[e._v("tensor")]),e._v(") and "),s("code",[e._v("mask")]),e._v("'s shape must match the first "),s("code",[e._v("axis")]),e._v(" + dim("),s("code",[e._v("mask")]),e._v(") dimensions of "),s("code",[e._v("tensor")]),e._v("'s shape.\n"),s("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/ragged/boolean_mask",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.ragged.boolean_mask"),s("OutboundLink")],1),e._v("See also: , which can be applied to both dense and ragged tensors, and can be used if you need to preserve the masked dimensions of tensor (rather than flattening them, as tf.boolean_mask does).")]),e._v(" "),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tensor")]),e._v(": N-D "),s("code",[e._v("tensor")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("mask")]),e._v(": K-D boolean "),s("code",[e._v("tensor")]),e._v(", K <= N and K must be known statically.")]),e._v(" "),s("li",[s("code",[e._v("axis")]),e._v(": A 0-D int Tensor representing the "),s("code",[e._v("axis")]),e._v(" in "),s("code",[e._v("tensor")]),e._v(" to "),s("code",[e._v("mask")]),e._v(" from. By default, "),s("code",[e._v("axis")]),e._v(" is 0 which will "),s("code",[e._v("mask")]),e._v(" from the first dimension. Otherwise K + "),s("code",[e._v("axis")]),e._v(" <= N.")]),e._v(" "),s("li",[s("code",[e._v("name")]),e._v(": A "),s("code",[e._v("name")]),e._v(" for this operation (optional).")])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("(N-K+1)-dimensional "),s("code",[e._v("tensor")]),e._v(" populated by entries in "),s("code",[e._v("tensor")]),e._v(" corresponding to "),s("code",[e._v("True")]),e._v(" values in "),s("code",[e._v("mask")]),e._v(".")]),e._v(" "),s("h4",{attrs:{id:"raises"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("ValueError")]),e._v(": If shapes do not conform.")])]),e._v(" "),s("h4",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" # 2-D example\ntensor = [[1, 2], [3, 4], [5, 6]]\nmask = np.array([True, False, True])\nboolean_mask(tensor, mask)  # [[1, 2], [5, 6]]\n")])])])])}),[],!1,null,null,null);a.default=o.exports}}]);