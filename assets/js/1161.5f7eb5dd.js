(window.webpackJsonp=window.webpackJsonp||[]).push([[1161],{1350:function(s,e,a){"use strict";a.r(e);var t=a(0),r=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("Asserts that the given tensor is a scalar.")]),s._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[s._v("#")]),s._v(" Aliases:")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("tf.compat.v2.debugging.assert_scalar")])])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(" tf.debugging.assert_scalar(\n    tensor,\n    message=None,\n    name=None\n)\n")])])]),a("p",[s._v("This function raises ValueError unless it can be certain that the given tensor is a scalar. ValueError is also raised if the shape of tensor is unknown.")]),s._v(" "),a("p",[s._v("This is always checked statically, so this method returns nothing.")]),s._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[s._v("#")]),s._v(" Args:")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("tensor")]),s._v(": A "),a("code",[s._v("Tensor")]),s._v(".")]),s._v(" "),a("li",[a("code",[s._v("message")]),s._v(": A string to prefix to the default "),a("code",[s._v("message")]),s._v(".")]),s._v(" "),a("li",[a("code",[s._v("name")]),s._v(": A "),a("code",[s._v("name")]),s._v(' for this operation. Defaults to "assert_scalar"')])]),s._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[s._v("#")]),s._v(" Raises:")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("ValueError")]),s._v(": If the tensor is not scalar (rank 0), or if its shape is unknown.")])])])}),[],!1,null,null,null);e.default=r.exports}}]);