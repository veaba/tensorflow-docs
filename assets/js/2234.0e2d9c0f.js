(window.webpackJsonp=window.webpackJsonp||[]).push([[2234],{2422:function(t,a,e){"use strict";e.r(a);var s=e(0),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Performs an N-D pooling operation.")]),t._v(" "),e("h3",{attrs:{id:"aliases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("tf.compat.v2.nn.pool")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" tf.nn.pool(\n    input,\n    window_shape,\n    pooling_type,\n    strides=None,\n    padding='VALID',\n    data_format=None,\n    dilations=None,\n    name=None\n)\n")])])]),e("p",[t._v('In the case that data_format does not start with "NC", computes for 0 <= b < batch_size, 0 <= x[i] < output_spatial_shape[i], 0 <= c < num_channels:')]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("   output[b, x[0], ..., x[N-1], c] =\n    REDUCE_{z[0], ..., z[N-1]}\n      input[b,\n            x[0] * strides[0] - pad_before[0] + dilation_rate[0]*z[0],\n            ...\n            x[N-1]*strides[N-1] - pad_before[N-1] + dilation_rate[N-1]*z[N-1],\n            c],\n")])])]),e("p",[e("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nn/convolution",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.nn.convolution"),e("OutboundLink")],1),t._v('where the reduction function REDUCE depends on the value of pooling_type, and pad_before is defined based on the value of padding as described in the "returns" section of  for details. The reduction never includes out-of-bounds positions.')]),t._v(" "),e("p",[t._v('In the case that data_format starts with "NC", the input and output are simply transposed as follows:')]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("   pool(input, data_format, **kwargs) =\n    tf.transpose(pool(tf.transpose(input, [0] + range(2,N+2) + [1]),\n                      **kwargs),\n                 [0, N+1] + range(1, N+1))\n")])])]),e("h4",{attrs:{id:"args"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("input")]),t._v(": Tensor of rank N+2, of shape [batch_size] + "),e("code",[t._v("input")]),t._v('_spatial_shape + [num_channels] if data_format does not start with "NC" (default), or [batch_size, num_channels] + '),e("code",[t._v("input")]),t._v('_spatial_shape if data_format starts with "NC". Pooling happens over the spatial dimensions only.')]),t._v(" "),e("li",[e("code",[t._v("window_shape")]),t._v(": Sequence of N ints >= 1.")]),t._v(" "),e("li",[e("code",[t._v("pooling_type")]),t._v(': Specifies pooling operation, must be "AVG" or "MAX".')]),t._v(" "),e("li",[e("code",[t._v("strides")]),t._v(": Optional. Sequence of N ints >= 1. Defaults to [1]*N. If any value of "),e("code",[t._v("strides")]),t._v(" is > 1, then all values of dilation_rate must be 1.")]),t._v(" "),e("li",[e("code",[t._v("padding")]),t._v(": The "),e("code",[t._v("padding")]),t._v(' algorithm, must be "SAME" or "VALID". Defaults to "SAME". See the "returns" section of '),e("code",[t._v("tf.nn.convolution")]),t._v(" for details.")]),t._v(" "),e("li",[e("code",[t._v("data_format")]),t._v(": A string or None. Specifies whether the channel dimension of the "),e("code",[t._v("input")]),t._v(" and output is the last dimension (default, or if "),e("code",[t._v("data_format")]),t._v(' does not start with "NC"), or the second dimension (if '),e("code",[t._v("data_format")]),t._v(' starts with "NC"). For N=1, the valid values are "NWC" (default) and "NCW". For N=2, the valid values are "NHWC" (default) and "NCHW". For N=3, the valid values are "NDHWC" (default) and "NCDHW".')]),t._v(" "),e("li",[e("code",[t._v("dilations")]),t._v(": Optional. Dilation rate. List of N ints >= 1. Defaults to [1]*N. If any value of dilation_rate is > 1, then all values of "),e("code",[t._v("strides")]),t._v(" must be 1.")]),t._v(" "),e("li",[e("code",[t._v("name")]),t._v(": Optional. Name of the op.")])]),t._v(" "),e("h4",{attrs:{id:"returns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),e("p",[t._v("Tensor of rank N+2, of shape [batch_size] + output_spatial_shape + [num_channels]")]),t._v(" "),e("p",[t._v('if data_format is None or does not start with "NC", or')]),t._v(" "),e("p",[t._v("[batch_size, num_channels] + output_spatial_shape")]),t._v(" "),e("p",[t._v('if data_format starts with "NC", where output_spatial_shape depends on the value of padding:')]),t._v(" "),e("p",[t._v('If padding = "SAME": output_spatial_shape[i] = ceil(input_spatial_shape[i] / strides[i])')]),t._v(" "),e("p",[t._v('If padding = "VALID": output_spatial_shape[i] = ceil((input_spatial_shape[i] - (window_shape[i] - 1) * dilation_rate[i]) / strides[i]).')]),t._v(" "),e("h4",{attrs:{id:"raises"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[t._v("#")]),t._v(" Raises:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("ValueError")]),t._v(": if arguments are invalid.")])])])}),[],!1,null,null,null);a.default=n.exports}}]);