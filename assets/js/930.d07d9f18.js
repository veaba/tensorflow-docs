(window.webpackJsonp=window.webpackJsonp||[]).push([[930],{1118:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Starts all queue runners collected in the graph. (deprecated)")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v1.train.queue_runner.start_queue_runners")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.compat.v1.train.start_queue_runners(\n    sess=None,\n    coord=None,\n    daemon=True,\n    start=True,\n    collection=tf.GraphKeys.QUEUE_RUNNERS\n)\n")])])]),a("p",[e._v("This is a companion method to add_queue_runner(). It just starts threads for all queue runners collected in the graph. It returns the list of all threads.")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("sess")]),e._v(": "),a("code",[e._v("Session")]),e._v(" used to run the queue ops. Defaults to the default "),a("code",[e._v("sess")]),e._v("ion.")]),e._v(" "),a("li",[a("code",[e._v("coord")]),e._v(": Optional "),a("code",[e._v("Coordinator")]),e._v(" for "),a("code",[e._v("coord")]),e._v("inating the started threads.")]),e._v(" "),a("li",[a("code",[e._v("daemon")]),e._v(": Whether the threads should be marked as "),a("code",[e._v("daemon")]),e._v("s, meaning they don't block program exit.")]),e._v(" "),a("li",[a("code",[e._v("start")]),e._v(": Set to "),a("code",[e._v("False")]),e._v(" to only create the threads, not "),a("code",[e._v("start")]),e._v(" them.")]),e._v(" "),a("li",[a("code",[e._v("collection")]),e._v(": A "),a("code",[e._v("GraphKey")]),e._v(" specifying the graph "),a("code",[e._v("collection")]),e._v(" to get the queue runners from. Defaults to "),a("code",[e._v("GraphKey")]),e._v("s.QUEUE_RUNNERS.")])]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": if "),a("code",[e._v("sess")]),e._v(" is None and there isn't any default "),a("code",[e._v("sess")]),e._v("ion.")]),e._v(" "),a("li",[a("code",[e._v("TypeError")]),e._v(": if "),a("code",[e._v("sess")]),e._v(" is not a "),a("code",[e._v("tf.compat.v1.Session")]),e._v(" object.")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A list of threads.")]),e._v(" "),a("h4",{attrs:{id:"raises-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("RuntimeError")]),e._v(": If called with eager execution enabled.")]),e._v(" "),a("li",[a("code",[e._v("ValueError")]),e._v(": If called without a default "),a("code",[e._v("tf.compat.v1.Session")]),e._v(" registered.")])]),e._v(" "),a("h4",{attrs:{id:"eager-compatibility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eager-compatibility","aria-hidden":"true"}},[e._v("#")]),e._v(" Eager Compatibility")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.data"),a("OutboundLink")],1),e._v("Not compatible with eager execution. To ingest data under eager execution, use the  API instead.")])])}),[],!1,null,null,null);t.default=s.exports}}]);