(window.webpackJsonp=window.webpackJsonp||[]).push([[2332],{2520:function(e,t,n){"use strict";n.r(t);var r=n(0),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("2D real-valued fast Fourier transform.")]),e._v(" "),n("h3",{attrs:{id:"aliases"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("tf.compat.v1.signal.rfft2d")])]),e._v(" "),n("li",[n("code",[e._v("tf.compat.v1.spectral.rfft2d")])]),e._v(" "),n("li",[n("code",[e._v("tf.compat.v2.signal.rfft2d")])])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(" tf.signal.rfft2d(\n    input_tensor,\n    fft_length=None,\n    name=None\n)\n")])])]),n("p",[e._v("Computes the 2-dimensional discrete Fourier transform of a real-valued signal over the inner-most 2 dimensions of input.")]),e._v(" "),n("p",[e._v("Since the DFT of a real signal is Hermitian-symmetric, RFFT2D only returns the fft_length / 2 + 1 unique components of the FFT for the inner-most dimension of output: the zero-frequency term, followed by the fft_length / 2 positive-frequency terms.")]),e._v(" "),n("p",[e._v("Along each axis RFFT2D is computed on, if fft_length is smaller than the corresponding dimension of input, the dimension is cropped. If it is larger, the dimension is padded with zeros.")]),e._v(" "),n("h4",{attrs:{id:"args"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("input")]),e._v(": A "),n("code",[e._v("Tensor")]),e._v(" of type "),n("code",[e._v("float32")]),e._v(". A "),n("code",[e._v("float32")]),e._v(" tensor.")]),e._v(" "),n("li",[n("code",[e._v("fft_length")]),e._v(": A "),n("code",[e._v("Tensor")]),e._v(" of type "),n("code",[e._v("int32")]),e._v(". An "),n("code",[e._v("int32")]),e._v(" tensor of shape [2]. The FFT length for each dimension.")]),e._v(" "),n("li",[n("code",[e._v("name")]),e._v(": A "),n("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),n("h4",{attrs:{id:"returns"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),n("p",[e._v("A Tensor of type complex64.")])])}),[],!1,null,null,null);t.default=s.exports}}]);