(window.webpackJsonp=window.webpackJsonp||[]).push([[1385],{1575:function(e,t,s){"use strict";s.r(t);var o=s(0),r=Object(o.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"class-tfrecordoptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-tfrecordoptions","aria-hidden":"true"}},[e._v("#")]),e._v(" Class TFRecordOptions")]),e._v(" "),s("p",[e._v("Options used for manipulating TFRecord files.")]),e._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),s("ul",[s("li",[e._v("Class "),s("code",[e._v("tf.compat.v1.io.TFRecordOptions")])]),e._v(" "),s("li",[e._v("Class "),s("code",[e._v("tf.compat.v1.python_io.TFRecordOptions")])]),e._v(" "),s("li",[e._v("Class "),s("code",[e._v("tf.compat.v2.io.TFRecordOptions")])])]),e._v(" "),s("h2",{attrs:{id:"init"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),s("strong",[e._v("init")])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/lib/io/tf_record.py#L52-L100",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" __init__(\n    compression_type=None,\n    flush_mode=None,\n    input_buffer_size=None,\n    output_buffer_size=None,\n    window_bits=None,\n    compression_level=None,\n    compression_method=None,\n    mem_level=None,\n    compression_strategy=None\n)\n")])])]),s("p",[e._v("Creates a TFRecordOptions instance.\n"),s("a",{attrs:{href:"https://www.tensorflow.org/code/tensorflow/core/lib/io/zlib_compression_options.h",target:"_blank",rel:"noopener noreferrer"}},[e._v("zlib_compression_options.h"),s("OutboundLink")],1),e._v("Options only effect TFRecordWriter when compression_type is not None. Documentation, details, and defaults can be found in  and in the zlib manual. Leaving an option as None allows C++ to set a reasonable default.")]),e._v(" "),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("compression_type")]),e._v(": "),s("code",[e._v('"GZIP"')]),e._v(", "),s("code",[e._v('"ZLIB"')]),e._v(", or "),s("code",[e._v('""')]),e._v(" (no compression).")]),e._v(" "),s("li",[s("code",[e._v("flush_mode")]),e._v(": flush mode or "),s("code",[e._v("None")]),e._v(", Default: Z_NO_FLUSH.")]),e._v(" "),s("li",[s("code",[e._v("input_buffer_size")]),e._v(": int or "),s("code",[e._v("None")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("output_buffer_size")]),e._v(": int or "),s("code",[e._v("None")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("window_bits")]),e._v(": int or "),s("code",[e._v("None")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("compression_level")]),e._v(": 0 to 9, or "),s("code",[e._v("None")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("compression_method")]),e._v(": compression method or "),s("code",[e._v("None")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("mem_level")]),e._v(": 1 to 9, or "),s("code",[e._v("None")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("compression_strategy")]),e._v(": strategy or "),s("code",[e._v("None")]),e._v(". Default: Z_DEFAULT_STRATEGY.")])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("A TFRecordOptions object.")]),e._v(" "),s("h4",{attrs:{id:"raises"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("ValueError")]),e._v(": If compression_type is invalid.")])]),e._v(" "),s("h2",{attrs:{id:"methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),s("h3",{attrs:{id:"get-compression-type-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-compression-type-string","aria-hidden":"true"}},[e._v("#")]),e._v(" get_compression_type_string")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/lib/io/tf_record.py#L102-L126",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" @classmethod\nget_compression_type_string(\n    cls,\n    options\n)\n")])])]),s("p",[e._v("Convert various option types to a unified string.")]),e._v(" "),s("h4",{attrs:{id:"args-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("options")]),e._v(": "),s("code",[e._v("TFRecordOption")]),e._v(", "),s("code",[e._v("TFRecordCompressionType")]),e._v(", or string.")])]),e._v(" "),s("h4",{attrs:{id:"returns-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("Compression type as string (e.g. 'ZLIB', 'GZIP', or '').")]),e._v(" "),s("h4",{attrs:{id:"raises-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#raises-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("ValueError")]),e._v(": If compression_type is invalid.")])]),e._v(" "),s("h2",{attrs:{id:"class-members"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-members","aria-hidden":"true"}},[e._v("#")]),e._v(" Class Members")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("compression_type_map")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);