(window.webpackJsonp=window.webpackJsonp||[]).push([[1894],{2085:function(e,t,a){"use strict";a.r(t);var o=a(0),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Clone any Model instance.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v1.keras.models.clone_model")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v2.keras.models.clone_model")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.keras.models.clone_model(\n    model,\n    input_tensors=None,\n    clone_function=None\n)\n")])])]),a("p",[e._v("Model cloning is similar to calling a model on new inputs, except that it creates new layers (and thus new weights) instead of sharing the weights of the existing layers.")]),e._v(" "),a("h4",{attrs:{id:"arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("model")]),e._v(": Instance of "),a("code",[e._v("Model")]),e._v(" (could be a functional "),a("code",[e._v("model")]),e._v(" or a Sequential "),a("code",[e._v("model")]),e._v(").")]),e._v(" "),a("li",[a("code",[e._v("input_tensors")]),e._v(": optional list of input tensors or InputLayer objects to build the "),a("code",[e._v("model")]),e._v(" upon. If not provided, placeholders will be created.")]),e._v(" "),a("li",[a("code",[e._v("clone_function")]),e._v(": Callable to be used to clone each layer in the target "),a("code",[e._v("model")]),e._v(" (except "),a("code",[e._v("InputLayer")]),e._v(" instances). It takes as argument the layer instance to be cloned, and returns the corresponding layer instance to be used in the "),a("code",[e._v("model")]),e._v(" copy. If unspecified, this callable defaults to the following serialization/deserialization function: lambda layer: layer."),a("strong",[e._v("class")]),e._v(".from_config(layer.get_config()). By passing a custom callable, you can customize your copy of the "),a("code",[e._v("model")]),e._v(", e.g. by wrapping certain layers of interest (you might want to replace all "),a("code",[e._v("LSTM")]),e._v(" instances with equivalent Bidirectional("),a("code",[e._v("LSTM")]),e._v("(...)) instances, for example).")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("An instance of Model reproducing the behavior of the original model, on top of new inputs tensors, using newly instantiated weights. The cloned model might behave differently from the original model if a custom clone_function modifies the layer.")]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": in case of invalid "),a("code",[e._v("model")]),e._v(" argument value.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);