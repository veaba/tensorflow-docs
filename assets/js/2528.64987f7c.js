(window.webpackJsonp=window.webpackJsonp||[]).push([[2528],{2719:function(e,t,a){"use strict";a.r(t);var n=a(0),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Generates fingerprint values.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v1.fingerprint")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v2.fingerprint")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.fingerprint(\n    data,\n    method='farmhash64',\n    name=None\n)\n")])])]),a("p",[e._v("Generates fingerprint values of "),a("code",[e._v("data")]),e._v(".\nF"),a("code",[e._v("i")]),e._v("ngerpr"),a("code",[e._v("i")]),e._v("nt op cons"),a("code",[e._v("i")]),e._v("ders the f"),a("code",[e._v("i")]),e._v("rst d"),a("code",[e._v("i")]),e._v("mens"),a("code",[e._v("i")]),e._v("on of "),a("code",[e._v("data")]),e._v(" as the batch d"),a("code",[e._v("i")]),e._v("mens"),a("code",[e._v("i")]),e._v("on, and "),a("code",[e._v("output[i]")]),e._v(" conta"),a("code",[e._v("i")]),e._v("ns the f"),a("code",[e._v("i")]),e._v("ngerpr"),a("code",[e._v("i")]),e._v("nt value generated from contents "),a("code",[e._v("i")]),e._v("n "),a("code",[e._v("data")]),e._v("["),a("code",[e._v("i")]),e._v(", ...] for all "),a("code",[e._v("i")]),e._v(".\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf#uint8",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.uint8"),a("OutboundLink")],1),e._v("Fingerprint op writes fingerprint values as byte arrays. For example, the default method farmhash64 generates a 64-bit fingerprint value at a time. This 8-byte value is written out as an  array of size 8, in little-endian order.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf#int32",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.int32"),a("OutboundLink")],1),e._v("For example, suppose that data has data type  and shape (2, 3, 4), and that the fingerprint method is farmhash64. In this case, the output shape is (2, 8), where 2 is the batch dimension size of data, and 8 is the size of each fingerprint value in bytes. output[0, :] is generated from 12 integers in data[0, :, :] and similarly output[1, :] is generated from other 12 integers in data[1, :, :].")]),e._v(" "),a("p",[e._v("Note that this op fingerprints the raw underlying buffer, and it does not fingerprint Tensor's metadata such as data type and/or shape. For example, the fingerprint values are invariant under reshapes and bitcasts as long as the batch dimension remain the same:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.fingerprint(data) == tf.fingerprint(tf.reshape(data, ...))\ntf.fingerprint(data) == tf.fingerprint(tf.bitcast(data, ...))\n")])])]),a("p",[e._v("For string data, one should expect tf.fingerprint(data) != tf.fingerprint(tf.string.reduce_join(data)) in general.")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("data")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must have rank 1 or higher.")]),e._v(" "),a("li",[a("code",[e._v("method")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("tf.string")]),e._v(". Fingerprint "),a("code",[e._v("method")]),e._v(" used by this op. Currently available "),a("code",[e._v("method")]),e._v(" is "),a("code",[e._v("farmhash64")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf#uint8",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.uint8"),a("OutboundLink")],1),e._v("A two-dimensional Tensor of type . The first dimension equals to data's first dimension, and the second dimension size depends on the fingerprint algorithm.")])])}),[],!1,null,null,null);t.default=r.exports}}]);