(window.webpackJsonp=window.webpackJsonp||[]).push([[2210],{2398:function(e,t,_){"use strict";_.r(t);var v=_(0),o=Object(v.a)({},(function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[e._v("Depthwise 2-D convolution.")]),e._v(" "),_("h3",{attrs:{id:"aliases"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("tf.compat.v2.nn.depthwise_conv2d")])])]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" tf.nn.depthwise_conv2d(\n    input,\n    filter,\n    strides,\n    padding,\n    data_format=None,\n    dilations=None,\n    name=None\n)\n")])])]),_("p",[e._v("Given a 4D input tensor ('NHWC' or 'NCHW' data formats) and a filter tensor of shape [filter_height, filter_width, in_channels, channel_multiplier] containing in_channels convolutional filters of depth 1, depthwise_conv2d applies a different filter to each input channel (expanding from 1 channel to channel_multiplier channels for each), then concatenates the results together. The output has in_channels * channel_multiplier channels.")]),e._v(" "),_("p",[e._v("In detail, with the default NHWC format,")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" output[b, i, j, k * channel_multiplier + q] = sum_{di, dj}\n     filter[di, dj, k, q] * input[b, strides[1] * i + rate[0] * di,\n                                     strides[2] * j + rate[1] * dj, k]\n")])])]),_("p",[e._v("Must have strides[0] = strides[3] = 1. For the most common case of the same horizontal and vertical strides, strides = [1, stride, stride, 1]. If any value in rate is greater than 1, we perform atrous depthwise convolution, in which case all values in the strides tensor must be equal to 1.")]),e._v(" "),_("h4",{attrs:{id:"args"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("input")]),e._v(": 4-D with shape according to "),_("code",[e._v("data_format")]),e._v(".")]),e._v(" "),_("li",[_("code",[e._v("filter")]),e._v(":"),_("code"),e._v("4-D"),_("code",[e._v("``w``i``t``h`` ``s``h``a``p``e``")]),e._v("["),_("code",[e._v("filter``_``h``e``i``g``h``t``,`` ``filter``_``w``i``d``t``h``,`` ``i``n``_``c``h``a``n``n``e``l``s``,`` ``c``h``a``n``n``e``l``_``m``u``l``t``i``p``l``i``e``r")]),e._v("].")]),e._v(" "),_("li",[_("code",[e._v("s``t``r``i``d``e``s")]),e._v(":"),_("code"),e._v("1-D"),_("code"),e._v("o"),_("code",[e._v("f`` ``s``i")]),e._v("z"),_("code",[e._v("e``")]),e._v("4."),_("code"),e._v("T"),_("code",[e._v("h``e`` ``s``t``r``i``d``e``")]),e._v("o"),_("code",[e._v("f`` ``t``h``e`` ``s``l``i``d``i``n``g`` ``w``i``n``d")]),e._v("o"),_("code",[e._v("w`` ``f")]),e._v("o"),_("code",[e._v("r`` ``e``a``c``h`` ``d``i``m``e``n``s``i")]),e._v("o"),_("code",[e._v("n``")]),e._v("o"),_("code",[e._v("f`` ``input")]),e._v(".")]),e._v(" "),_("li",[_("code",[e._v("p``a``d``d``i``n``g")]),e._v(":"),_("code"),e._v("A"),_("code",[e._v("``s``t``r``i``n``g``,`` ``e``i``t``h``e``r`` ``'VALID'``")]),e._v("o"),_("code",[e._v("r`` ``'SAME'")]),e._v("."),_("code"),e._v("T"),_("code",[e._v("h``e`` ``p``a``d``d``i``n``g`` ``a``l``g")]),e._v("o"),_("code",[e._v("r``i``t``h``m")]),e._v("."),_("code"),e._v("S"),_("code",[e._v("e``e`` ``t``h``e``")]),e._v('"'),_("code",[e._v("r``e``t``u``r``n``s")]),e._v('"'),_("code",[e._v("``s``e``c``t``i")]),e._v("o"),_("code",[e._v("n``")]),e._v("o"),_("code",[e._v("f`` ``t``f")]),e._v("."),_("code",[e._v("n``n")]),e._v("."),_("code",[e._v("c")]),e._v("o"),_("code",[e._v("n")]),e._v("vo"),_("code",[e._v("l``u``t``i")]),e._v("o"),_("code",[e._v("n`` ``f")]),e._v("o"),_("code",[e._v("r`` ``d``e``t``a``i``l``s")]),e._v(".")]),e._v(" "),_("li",[_("code",[e._v("data_format")]),e._v(":"),_("code"),e._v("T"),_("code",[e._v("h``e`` ``d``a``t``a`` ``f")]),e._v("o"),_("code",[e._v("r``m``a``t`` ``f")]),e._v("o"),_("code",[e._v("r`` ``input")]),e._v("."),_("code"),e._v("E"),_("code",[e._v("i``t``h``e``r``")]),e._v('"NHWC"'),_("code"),e._v("("),_("code",[e._v("d``e``f``a``u``l``t")]),e._v(")"),_("code"),e._v("o"),_("code",[e._v("r``")]),e._v('"NCHW".')]),e._v(" "),_("li",[_("code",[e._v("d``i``l``a``t``i")]),e._v("o"),_("code",[e._v("n``s")]),e._v(":"),_("code"),e._v("1-D"),_("code"),e._v("o"),_("code",[e._v("f`` ``s``i")]),e._v("z"),_("code",[e._v("e``")]),e._v("2."),_("code"),e._v("T"),_("code",[e._v("h``e`` ``d``i``l``a``t``i")]),e._v("o"),_("code",[e._v("n`` ``r``a``t``e`` ``i``n`` ``w``h``i``c``h`` ``w``e`` ``s``a``m``p``l``e`` ``input``")]),e._v("v"),_("code",[e._v("a``l``u``e``s`` ``a``c``r")]),e._v("o"),_("code",[e._v("s``s`` ``t``h``e`` ``h``e``i``g``h``t`` ``a``n``d`` ``w``i``d``t``h`` ``d``i``m``e``n``s``i")]),e._v("o"),_("code",[e._v("n``s`` ``i``n`` ``a``t``r")]),e._v("o"),_("code",[e._v("u``s`` ``c")]),e._v("o"),_("code",[e._v("n")]),e._v("vo"),_("code",[e._v("l``u``t``i")]),e._v("o"),_("code",[e._v("n")]),e._v("."),_("code"),e._v("I"),_("code",[e._v("f`` ``i``t`` ``i``s`` ``g``r``e``a``t``e``r`` ``t``h``a``n``")]),e._v("1"),_("code",[e._v(",`` ``t``h``e``n`` ``a``l``l``")]),e._v("v"),_("code",[e._v("a``l``u``e``s``")]),e._v("o"),_("code",[e._v("f`` ``s``t``r``i``d``e``s`` ``m``u``s``t``")]),e._v("b"),_("code",[e._v("e``")]),e._v("1.")]),e._v(" "),_("li",[_("code",[e._v("n``a``m``e")]),e._v(":"),_("code"),e._v("A"),_("code",[e._v("``n``a``m``e`` ``f")]),e._v("o"),_("code",[e._v("r`` ``t``h``i``s``")]),e._v("o"),_("code",[e._v("p``e``r``a``t``i")]),e._v("o"),_("code",[e._v("n``")]),e._v("(o"),_("code",[e._v("p``t``i")]),e._v("o"),_("code",[e._v("n``a``l")]),e._v(").")])]),e._v(" "),_("h4",{attrs:{id:"returns"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),_("p",[e._v('A 4-D Tensor with shape according to data_format. E.g., for "NHWC" format, shape is [batch, out_height, out_width, in_channels * channel_multiplier].')])])}),[],!1,null,null,null);t.default=o.exports}}]);