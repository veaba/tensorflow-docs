(window.webpackJsonp=window.webpackJsonp||[]).push([[2100],{2288:function(e,t,a){"use strict";a.r(t);var n=a(0),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Defined in generated file: python/ops/gen_array_ops.py")]),e._v(" "),a("p",[e._v("Computes the inverse permutation of a tensor.")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v1.invert_permutation")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v1.math.invert_permutation")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v2.math.invert_permutation")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.math.invert_permutation(\n    x,\n    name=None\n)\n")])])]),a("p",[e._v("This operation computes the inverse of an index permutation. It takes a 1-D integer tensor x, which represents the indices of a zero-based array, and swaps each value with its index position. In other words, for an output tensor y and an input tensor x, this operation computes the following:")]),e._v(" "),a("p",[e._v("y[x[i]] = i for i in [0, 1, ..., len(x) - 1]")]),e._v(" "),a("p",[e._v("The values must include 0. There can be no duplicate values or negative values.")]),e._v(" "),a("h4",{attrs:{id:"for-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" # tensor `x` is [3, 4, 0, 2, 1]\ninvert_permutation(x) ==> [2, 4, 3, 0, 1]\n")])])]),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(". 1-D.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A Tensor. Has the same type as x.")])])}),[],!1,null,null,null);t.default=r.exports}}]);