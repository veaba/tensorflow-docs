(window.webpackJsonp=window.webpackJsonp||[]).push([[929],{1117:function(e,t,s){"use strict";s.r(t);var r=s(0),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Produces a slice of each Tensor in tensor_list. (deprecated)")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.compat.v1.train.slice_input_producer(\n    tensor_list,\n    num_epochs=None,\n    shuffle=True,\n    seed=None,\n    capacity=32,\n    shared_name=None,\n    name=None\n)\n")])])]),s("p",[e._v("Implemented using a Queue -- a QueueRunner for the Queue is added to the current Graph's QUEUE_RUNNER collection.")]),e._v(" "),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tensor_list")]),e._v(": A list of "),s("code",[e._v("Tensor")]),e._v(" objects. Every "),s("code",[e._v("Tensor")]),e._v(" in "),s("code",[e._v("tensor_list")]),e._v(" must have the same size in the first dimension.")]),e._v(" "),s("li",[s("code",[e._v("num_epochs")]),e._v(": An integer (optional). If specified, "),s("code",[e._v("slice_input_producer")]),e._v(" produces each slice "),s("code",[e._v("num_epochs")]),e._v(" times before generating an "),s("code",[e._v("OutOfRange")]),e._v(" error. If not specified, "),s("code",[e._v("slice_input_producer")]),e._v(" can cycle through the slices an unlimited number of times.")]),e._v(" "),s("li",[s("code",[e._v("shuffle")]),e._v(": Boolean. If true, the integers are randomly "),s("code",[e._v("shuffle")]),e._v("d within each epoch.")]),e._v(" "),s("li",[s("code",[e._v("seed")]),e._v(": An integer (optional). Seed used if "),s("code",[e._v("shuffle")]),e._v(" == True.")]),e._v(" "),s("li",[s("code",[e._v("capacity")]),e._v(": An integer. Sets the queue "),s("code",[e._v("capacity")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("shared_name")]),e._v(": (optional). If set, this queue will be shared under the given name across multiple sessions.")]),e._v(" "),s("li",[s("code",[e._v("name")]),e._v(": A "),s("code",[e._v("name")]),e._v(" for the operations (optional).")])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("A list of tensors, one for each element of tensor_list. If the tensor in tensor_list has shape [N, a, b, .., z], then the corresponding output tensor will have shape [a, b, ..., z].")]),e._v(" "),s("h4",{attrs:{id:"raises"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("ValueError")]),e._v(": if "),s("code",[e._v("slice_input_producer")]),e._v(" produces nothing from "),s("code",[e._v("tensor_list")]),e._v(".")])]),e._v(" "),s("h4",{attrs:{id:"eager-compatibility"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eager-compatibility","aria-hidden":"true"}},[e._v("#")]),e._v(" Eager Compatibility")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.data"),s("OutboundLink")],1),e._v("Input pipelines based on Queues are not supported when eager execution is enabled. Please use the  API to ingest data under eager execution.")])])}),[],!1,null,null,null);t.default=a.exports}}]);