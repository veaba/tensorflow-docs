(window.webpackJsonp=window.webpackJsonp||[]).push([[1141],{1330:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Asserts that the given condition is true.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.Assert")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v1.Assert")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v1.debugging.Assert")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v2.Assert")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v2.debugging.Assert")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.debugging.Assert(\n    condition,\n    data,\n    summarize=None,\n    name=None\n)\n")])])]),a("p",[e._v("If condition evaluates to false, print the list of tensors in data. summarize determines how many entries of the tensors to print.")]),e._v(" "),a("p",[e._v("NOTE: In graph mode, to ensure that Assert executes, one usually attaches a dependency:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" # Ensure maximum element of x is smaller or equal to 1\nassert_op = tf.Assert(tf.less_equal(tf.reduce_max(x), 1.), [x])\nwith tf.control_dependencies([assert_op]):\n  ... code using x ...\n")])])]),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("condition")]),e._v(": The "),a("code",[e._v("condition")]),e._v(" to evaluate.")]),e._v(" "),a("li",[a("code",[e._v("data")]),e._v(": The tensors to print out when "),a("code",[e._v("condition")]),e._v(" is false.")]),e._v(" "),a("li",[a("code",[e._v("summarize")]),e._v(": Print this many entries of each tensor.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for this operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("assert_op")]),e._v(": An "),a("code",[e._v("Operation")]),e._v(" that, when executed, raises a "),a("code",[e._v("tf.errors.InvalidArgumentError")]),e._v(" if "),a("code",[e._v("condition")]),e._v(" is not true.")])]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("p",[e._v("NOTE The output of this function should be used. If it is not, a warning will be logged. To mark the output as used, call its .mark_used() method.")]),e._v(" "),a("h4",{attrs:{id:"eager-compatibility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eager-compatibility","aria-hidden":"true"}},[e._v("#")]),e._v(" Eager Compatibility")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/errors/InvalidArgumentError",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.errors.InvalidArgumentError"),a("OutboundLink")],1),e._v(" if condition is not true")])])}),[],!1,null,null,null);t.default=r.exports}}]);