(window.webpackJsonp=window.webpackJsonp||[]).push([[2151],{2339:function(e,t,v){"use strict";v.r(t);var a=v(0),_=Object(a.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("p",[e._v("Defined in generated file: python/ops/gen_math_ops.py")]),e._v(" "),v("p",[e._v("Returns an element-wise indication of the sign of a number.")]),e._v(" "),v("h3",{attrs:{id:"aliases"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("tf.compat.v1.math.sign")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v1.sign")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v2.math.sign")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v2.sign")])]),e._v(" "),v("li",[v("code",[e._v("tf.sign")])])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v(" tf.math.sign(\n    x,\n    name=None\n)\n")])])]),v("h3",{attrs:{id:"used-in-the-tutorials"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("A")]),e._v("d"),v("code",[e._v("v")]),e._v("e"),v("code",[e._v("r")]),e._v("s"),v("code",[e._v("a")]),e._v("r"),v("code",[e._v("i")]),e._v("a"),v("code",[e._v("l")]),e._v(" "),v("code",[e._v("e")]),e._v("x"),v("code",[e._v("a")]),e._v("m"),v("code",[e._v("p")]),e._v("l"),v("code",[e._v("e")]),e._v(" "),v("code",[e._v("u")]),e._v("s"),v("code",[e._v("i")]),e._v("n"),v("code",[e._v("g")]),e._v(" "),v("code",[e._v("F")]),e._v("G"),v("code",[e._v("S")]),e._v("M``")])]),e._v(" "),v("p",[e._v("y = sign(x) = -1 if x < 0; 0 if x == 0; 1 if x > 0.")]),e._v(" "),v("p",[e._v("For complex numbers, y = sign(x) = x / |x| if x != 0, otherwise y = 0.")]),e._v(" "),v("h4",{attrs:{id:"args"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("x")]),e._v(": A "),v("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),v("code",[e._v("bfloat16")]),e._v(", "),v("code",[e._v("half")]),e._v(", "),v("code",[e._v("float32")]),e._v(", "),v("code",[e._v("float64")]),e._v(", "),v("code",[e._v("int32")]),e._v(", "),v("code",[e._v("int64")]),e._v(", "),v("code",[e._v("complex64")]),e._v(", "),v("code",[e._v("complex128")]),e._v(".")]),e._v(" "),v("li",[v("code",[e._v("name")]),e._v(": A "),v("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),v("h4",{attrs:{id:"returns"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),v("p",[e._v("A Tensor. Has the same type as x.")]),e._v(" "),v("p",[e._v("If x is a SparseTensor, returns SparseTensor(x.indices, tf.math.sign(x.values, ...), x.dense_shape)")])])}),[],!1,null,null,null);t.default=_.exports}}]);