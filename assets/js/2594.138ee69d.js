(window.webpackJsonp=window.webpackJsonp||[]).push([[2594],{2785:function(e,v,_){"use strict";_.r(v);var t=_(0),a=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[e._v("Stacks a list of rank-"),_("code",[e._v("R")]),e._v(" tensors into one rank-("),_("code",[e._v("R")]),e._v("+1) tensor.")]),e._v(" "),_("h3",{attrs:{id:"aliases"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("tf.compat.v1.stack")])]),e._v(" "),_("li",[_("code",[e._v("tf.compat.v2.stack")])])]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" tf.stack(\n    values,\n    axis=0,\n    name='stack'\n)\n")])])]),_("h3",{attrs:{id:"used-in-the-guide"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("T")]),e._v("h"),_("code",[e._v("e")]),e._v(" "),_("code",[e._v("K")]),e._v("e"),_("code",[e._v("r")]),e._v("a"),_("code",[e._v("s")]),e._v(" "),_("code",[e._v("f")]),e._v("u"),_("code",[e._v("n")]),e._v("c"),_("code",[e._v("t")]),e._v("i"),_("code",[e._v("o")]),e._v("n"),_("code",[e._v("a")]),e._v("l"),_("code"),e._v("A"),_("code",[e._v("P")]),e._v("I"),_("code"),e._v("i"),_("code",[e._v("n")]),e._v(" "),_("code",[e._v("T")]),e._v("e"),_("code",[e._v("n")]),e._v("s"),_("code",[e._v("o")]),e._v("r"),_("code",[e._v("F")]),e._v("l"),_("code",[e._v("o")]),e._v("w``")]),e._v(" "),_("li",[_("code",[e._v("t")]),e._v("f"),_("code",[e._v(".")]),e._v("d"),_("code",[e._v("a")]),e._v("t"),_("code",[e._v("a")]),e._v(":"),_("code"),e._v("B"),_("code",[e._v("u")]),e._v("i"),_("code",[e._v("l")]),e._v("d"),_("code"),e._v("T"),_("code",[e._v("e")]),e._v("n"),_("code",[e._v("s")]),e._v("o"),_("code",[e._v("r")]),e._v("F"),_("code",[e._v("l")]),e._v("o"),_("code",[e._v("w")]),e._v(" "),_("code",[e._v("i")]),e._v("n"),_("code",[e._v("p")]),e._v("u"),_("code",[e._v("t")]),e._v(" "),_("code",[e._v("p")]),e._v("i"),_("code",[e._v("p")]),e._v("e"),_("code",[e._v("l")]),e._v("i"),_("code",[e._v("n")]),e._v("e"),_("code",[e._v("s")])])]),e._v(" "),_("h3",{attrs:{id:"used-in-the-tutorials"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("C")]),e._v("u"),_("code",[e._v("s")]),e._v("t"),_("code",[e._v("o")]),e._v("m"),_("code"),e._v("t"),_("code",[e._v("r")]),e._v("a"),_("code",[e._v("i")]),e._v("n"),_("code",[e._v("i")]),e._v("n"),_("code",[e._v("g")]),e._v(":"),_("code"),e._v("w"),_("code",[e._v("a")]),e._v("l"),_("code",[e._v("k")]),e._v("t"),_("code",[e._v("h")]),e._v("r"),_("code",[e._v("o")]),e._v("u"),_("code",[e._v("g")]),e._v("h``")]),e._v(" "),_("li",[_("code",[e._v("L")]),e._v("o"),_("code",[e._v("a")]),e._v("d"),_("code"),e._v("C"),_("code",[e._v("S")]),e._v("V"),_("code"),e._v("d"),_("code",[e._v("a")]),e._v("t"),_("code",[e._v("a")])]),e._v(" "),_("li",[_("code",[e._v("L")]),e._v("o"),_("code",[e._v("a")]),e._v("d"),_("code"),e._v("a"),_("code"),e._v("p"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("d")]),e._v("a"),_("code",[e._v("s")]),e._v("."),_("code",[e._v("D")]),e._v("a"),_("code",[e._v("t")]),e._v("a"),_("code",[e._v("F")]),e._v("r"),_("code",[e._v("a")]),e._v("m"),_("code",[e._v("e")])]),e._v(" "),_("li",[_("code",[e._v("P")]),e._v("i"),_("code",[e._v("x")]),e._v("2"),_("code",[e._v("P")]),e._v("i"),_("code",[e._v("x")]),e._v("\nPacks the list of tensors in "),_("code",[e._v("values")]),e._v(" into a tensor with rank one higher than each tensor in "),_("code",[e._v("values")]),e._v(", by packing them along the "),_("code",[e._v("axis")]),e._v(" dimension. Given a list of length "),_("code",[e._v("N")]),e._v(" of tensors of shape ("),_("code",[e._v("A, B, C")]),e._v(");\nif "),_("code",[e._v("axis == 0")]),e._v(" then the "),_("code",[e._v("output")]),e._v(" tensor will have the shape ("),_("code",[e._v("N, A, B, CN, A, B, C")]),e._v("). if "),_("code",[e._v("axis == 1")]),e._v(" then the "),_("code",[e._v("output")]),e._v(" tensor will have the shape (``). Etc.")])]),e._v(" "),_("h4",{attrs:{id:"for-example"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" x = tf.constant([1, 4])\ny = tf.constant([2, 5])\nz = tf.constant([3, 6])\ntf.stack([x, y, z])  # [[1, 4], [2, 5], [3, 6]] (Pack along first dim.)\ntf.stack([x, y, z], axis=1)  # [[1, 2, 3], [4, 5, 6]]\n")])])]),_("p",[e._v("This is the opposite of unstack. The numpy equivalent is")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" tf.stack([x, y, z]) = np.stack([x, y, z])\n")])])]),_("h4",{attrs:{id:"args"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("values")]),e._v(": A list of "),_("code",[e._v("Tensor")]),e._v(" objects with the same shape and type.")])]),e._v(" "),_("h4",{attrs:{id:"returns"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("output")]),e._v(": A stacked "),_("code",[e._v("Tensor")]),e._v(" with the same type as "),_("code",[e._v("values")]),e._v(".")])]),e._v(" "),_("h4",{attrs:{id:"raises"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("ValueError")]),e._v(": If "),_("code",[e._v("axis")]),e._v(" is out of the range [-(R+1), R+1).")])])])}),[],!1,null,null,null);v.default=a.exports}}]);