(window.webpackJsonp=window.webpackJsonp||[]).push([[1185],{1374:function(e,r,t){"use strict";t.r(r);var s=t(0),o=Object(s.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Library imports for ClusterResolvers.")]),e._v(" "),t("p",[e._v("This library contains all implementations of ClusterResolvers. ClusterResolvers are a way of specifying cluster information for distributed execution. Built on top of existing ClusterSpec framework, ClusterResolvers are a way for TensorFlow to communicate with various cluster management systems (e.g. GCE, AWS, etc...).")]),e._v(" "),t("h2",{attrs:{id:"classes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#classes","aria-hidden":"true"}},[e._v("#")]),e._v(" Classes")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/distribute/cluster_resolver/ClusterResolver",target:"_blank",rel:"noopener noreferrer"}},[e._v("class ClusterResolver"),t("OutboundLink")],1),e._v(": Abstract class for all implementations of ClusterResolvers.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/distribute/cluster_resolver/GCEClusterResolver",target:"_blank",rel:"noopener noreferrer"}},[e._v("class GCEClusterResolver"),t("OutboundLink")],1),e._v(": ClusterResolver for Google Compute Engine.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/distribute/cluster_resolver/KubernetesClusterResolver",target:"_blank",rel:"noopener noreferrer"}},[e._v("class KubernetesClusterResolver"),t("OutboundLink")],1),e._v(": ClusterResolver for Kubernetes.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/distribute/cluster_resolver/SimpleClusterResolver",target:"_blank",rel:"noopener noreferrer"}},[e._v("class SimpleClusterResolver"),t("OutboundLink")],1),e._v(": Simple implementation of ClusterResolver that accepts a ClusterSpec.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/distribute/cluster_resolver/SlurmClusterResolver",target:"_blank",rel:"noopener noreferrer"}},[e._v("class SlurmClusterResolver"),t("OutboundLink")],1),e._v(": ClusterResolver for system with Slurm workload manager.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/distribute/cluster_resolver/TFConfigClusterResolver",target:"_blank",rel:"noopener noreferrer"}},[e._v("class TFConfigClusterResolver"),t("OutboundLink")],1),e._v(": Implementation of a ClusterResolver which reads the TF_CONFIG EnvVar.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/distribute/cluster_resolver/TPUClusterResolver",target:"_blank",rel:"noopener noreferrer"}},[e._v("class TPUClusterResolver"),t("OutboundLink")],1),e._v(": Cluster Resolver for Google Cloud TPUs.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/distribute/cluster_resolver/UnionResolver",target:"_blank",rel:"noopener noreferrer"}},[e._v("class UnionResolver"),t("OutboundLink")],1),e._v(": Performs a union on underlying ClusterResolvers.")])])}),[],!1,null,null,null);r.default=o.exports}}]);