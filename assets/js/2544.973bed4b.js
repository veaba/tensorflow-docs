(window.webpackJsonp=window.webpackJsonp||[]).push([[2544],{2735:function(t,e,a){"use strict";a.r(e);var n=a(0),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Defined in generated file: "),a("code",[t._v("python/ops/gen_array_ops.py")]),t._v("\nReturns a list of tensors with the same shapes and contents as the input")]),t._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("tf.compat.v1.identity_n")])]),t._v(" "),a("li",[a("code",[t._v("tf.compat.v2.identity_n")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" tf.identity_n(\n    input,\n    name=None\n)\n")])])]),a("p",[t._v("tensors.\nThis op can be used to override the gradient for complicated functions. For example, suppose y = f(x) and we wish to apply a custom function g for backprop such that dx = g(dy). In Python,")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" with tf.get_default_graph().gradient_override_map(\n    {'IdentityN': 'OverrideGradientWithG'}):\n  y, _ = identity_n([f(x), x])\n\n@tf.RegisterGradient('OverrideGradientWithG')\ndef ApplyG(op, dy, _):\n  return [None, g(dy)]  # Do not backprop to f(x).\n")])])]),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("input")]),t._v(": A list of "),a("code",[t._v("Tensor")]),t._v(" objects.")]),t._v(" "),a("li",[a("code",[t._v("name")]),t._v(": A "),a("code",[t._v("name")]),t._v(" for the operation (optional).")])]),t._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),a("p",[t._v("A list of "),a("code",[t._v("Tensor")]),t._v(" objects. Has the same type as "),a("code",[t._v("input")]),t._v(".")])])}),[],!1,null,null,null);e.default=s.exports}}]);