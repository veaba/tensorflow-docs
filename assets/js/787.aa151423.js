(window.webpackJsonp=window.webpackJsonp||[]).push([[787],{975:function(e,s,a){"use strict";a.r(s);var t=a(0),r=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Computes the max of elements across dimensions of a SparseTensor. (deprecated arguments) (deprecated arguments)")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v1.sparse.reduce_max")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.compat.v1.sparse_reduce_max(\n    sp_input,\n    axis=None,\n    keepdims=None,\n    reduction_axes=None,\n    keep_dims=None\n)\n")])])]),a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/math/reduce_max",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.reduce_max()"),a("OutboundLink")],1),e._v("This Op takes a SparseTensor and is the sparse counterpart to . In particular, this Op also returns a dense Tensor instead of a sparse one.")]),e._v(" "),a("p",[e._v("Reduces sp_input along the dimensions given in reduction_axes. Unless keepdims is true, the rank of the tensor is reduced by 1 for each entry in reduction_axes. If keepdims is true, the reduced dimensions are retained with length 1.")]),e._v(" "),a("p",[e._v("If reduction_axes has no entries, all dimensions are reduced, and a tensor with a single element is returned. Additionally, the axes can be negative, similar to the indexing rules in Python.")]),e._v(" "),a("p",[e._v("The values not defined in sp_input don't participate in the reduce max, as opposed to be implicitly assumed 0 -- hence it can return negative values for sparse reduction_axes. But, in case there are no values in reduction_axes, it will reduce to 0. See second example below.")]),e._v(" "),a("h4",{attrs:{id:"for-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" # 'x' represents [[1, ?, 2]\n#                 [?, 3, ?]]\n# where ? is implicitly-zero.\ntf.sparse.reduce_max(x) ==> 3\ntf.sparse.reduce_max(x, 0) ==> [1, 3, 2]\ntf.sparse.reduce_max(x, 1) ==> [2, 3]  # Can also use -1 as the axis.\ntf.sparse.reduce_max(x, 1, keepdims=True) ==> [[2], [3]]\ntf.sparse.reduce_max(x, [0, 1]) ==> 3\n\n# 'y' represents [[-7, ?]\n#                 [ 4, 3]\n#                 [ ?, ?]\ntf.sparse.reduce_max(x, 1) ==> [-7, 4, 0]\n")])])]),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("sp_input")]),e._v(": The SparseTensor to reduce. Should have numeric type.")]),e._v(" "),a("li",[a("code",[e._v("axis")]),e._v(": The dimensions to reduce; list or scalar. If "),a("code",[e._v("None")]),e._v(" (the default), reduces all dimensions.")]),e._v(" "),a("li",[a("code",[e._v("keepdims")]),e._v(": If true, retain reduced dimensions with length 1.")]),e._v(" "),a("li",[a("code",[e._v("reduction_axes")]),e._v(": Deprecated name of "),a("code",[e._v("axis")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("keep_dims")]),e._v(": Deprecated alias for "),a("code",[e._v("keepdims")]),e._v(".")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("The reduced Tensor.")])])}),[],!1,null,null,null);s.default=r.exports}}]);