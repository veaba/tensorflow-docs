(window.webpackJsonp=window.webpackJsonp||[]).push([[2597],{2788:function(e,a,t){"use strict";t.r(a);var s=t(0),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Create a switch/case operation, i.e. an integer-indexed conditional.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.switch_case")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.switch_case")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.switch_case(\n    branch_index,\n    branch_fns,\n    default=None,\n    name='switch_case'\n)\n")])])]),t("p",[t("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/case",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.case"),t("OutboundLink")],1),e._v("See also .")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/case",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.case"),t("OutboundLink")],1),e._v("This op can be substantially more efficient than  when exactly one branch will be selected. tf.switch_case is more like a C++ switch/case statement than , which is more like an if/elif/elif/else chain.")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("branch_fns")]),e._v(" parameter is either a list of ("),t("code",[e._v("int")]),e._v(", callable) pairs, or simply a list of callables (in which case the index is implicitly the key). The "),t("code",[e._v("branch_index")]),e._v(" "),t("code",[e._v("Tensor")]),e._v(" is used to select an element in "),t("code",[e._v("branch_fns")]),e._v(" with matching "),t("code",[e._v("int")]),e._v(" key, falling back to "),t("code",[e._v("default")]),e._v(" if none match, or max(keys) if no "),t("code",[e._v("default")]),e._v(" is provided. The keys must form a contiguous set from "),t("code",[e._v("0")]),e._v(" to len("),t("code",[e._v("branch_fns")]),e._v(") - 1.\n"),t("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/switch_case",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.switch_case"),t("OutboundLink")],1),e._v(" supports nested structures as implemented in tf.nest. All callables must return the same (possibly nested) value structure of lists, tuples, and/or named tuples.")]),e._v(" "),t("p",[e._v("Example:")]),e._v(" "),t("h4",{attrs:{id:"pseudocode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pseudocode","aria-hidden":"true"}},[e._v("#")]),e._v(" Pseudocode:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" switch (branch_index) {  // c-style switch\n  case 0: return 17;\n  case 1: return 31;\n  default: return -1;\n}\n")])])]),t("p",[e._v("or")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" branches = {0: lambda: 17, 1: lambda: 31}\nbranches.get(branch_index, lambda: -1)()\n")])])]),t("h4",{attrs:{id:"expressions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expressions","aria-hidden":"true"}},[e._v("#")]),e._v(" Expressions:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" def f1(): return tf.constant(17)\ndef f2(): return tf.constant(31)\ndef f3(): return tf.constant(-1)\nr = tf.switch_case(branch_index, branch_fns={0: f1, 1: f2}, default=f3)\n# Equivalent: tf.switch_case(branch_index, branch_fns={0: f1, 1: f2, 2: f3})\n")])])]),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("branch_index")]),e._v(": An int Tensor specifying which of "),t("code",[e._v("branch_fns")]),e._v(" should be executed.")]),e._v(" "),t("li",[t("code",[e._v("branch_fns")]),e._v(": A "),t("code",[e._v("list")]),e._v(" of (int, callable) pairs, or simply a "),t("code",[e._v("list")]),e._v(" of callables (in which case the index serves as the key). Each callable must return a matching structure of tensors.")]),e._v(" "),t("li",[t("code",[e._v("default")]),e._v(": Optional callable that returns a structure of tensors.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for this operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("The tensors returned by the callable identified by "),t("code",[e._v("branch_index")]),e._v(", or those returned by "),t("code",[e._v("default")]),e._v(" if no key matches and "),t("code",[e._v("default")]),e._v(" was provided, or those returned by the max-keyed "),t("code",[e._v("branch_fn")]),e._v(" if no "),t("code",[e._v("default")]),e._v(" is provided.")]),e._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": If "),t("code",[e._v("branch_fns")]),e._v(" is not a list/dictionary.")]),e._v(" "),t("li",[t("code",[e._v("TypeError")]),e._v(": If "),t("code",[e._v("branch_fns")]),e._v(" is a list but does not contain 2-tuples or callables.")]),e._v(" "),t("li",[t("code",[e._v("TypeError")]),e._v(": If "),t("code",[e._v("fns[i]")]),e._v(" is not callable for any i, or "),t("code",[e._v("default")]),e._v(" is not callable.")])]),e._v(" "),t("h4",{attrs:{id:"v2-compatibility"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v2-compatibility","aria-hidden":"true"}},[e._v("#")]),e._v(" V2 Compatibility")]),e._v(" "),t("p",[t("code",[e._v("branch_fns")]),e._v(" could be a dictionary in v1. However, tf.Tensor and tf.Variable are no longer hashable in v2, so cannot be used as a key for a dictionary. Please use a list or a tuple instead.")])])}),[],!1,null,null,null);a.default=n.exports}}]);