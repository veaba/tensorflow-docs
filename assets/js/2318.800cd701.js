(window.webpackJsonp=window.webpackJsonp||[]).push([[2318],{2506:function(e,v,o){"use strict";o.r(v);var _=o(0),t=Object(_.a)({},(function(){var e=this,v=e.$createElement,o=e._self._c||v;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[o("a",{attrs:{href:"https://en.wikipedia.org/wiki/Discrete_cosine_transform#Inverse_transforms",target:"_blank",rel:"noopener noreferrer"}},[e._v("Inverse Discrete Cosine Transform (DCT)"),o("OutboundLink")],1),e._v("Computes the 1D  of input.")]),e._v(" "),o("h3",{attrs:{id:"aliases"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("tf.compat.v1.signal.idct")])]),e._v(" "),o("li",[o("code",[e._v("tf.compat.v1.spectral.idct")])]),e._v(" "),o("li",[o("code",[e._v("tf.compat.v2.signal.idct")])])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(" tf.signal.idct(\n    input,\n    type=2,\n    n=None,\n    axis=-1,\n    norm=None,\n    name=None\n)\n")])])]),o("p",[e._v("Currently only Types I, II and III are supported. Type III is the inverse of Type II, and vice versa.")]),e._v(" "),o("p",[e._v("Note that you must re-normalize by 1/(2n) to obtain an inverse if norm is not 'ortho'. That is: signal == idct(dct(signal)) * 0.5 / signal.shape[-1]. When norm='ortho', we have: signal == idct(dct(signal, norm='ortho'), norm='ortho').")]),e._v(" "),o("h4",{attrs:{id:"args"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("input")]),e._v(":"),o("code"),e._v("A"),o("code"),e._v("["),o("code",[e._v(".``.``.``,`` ``s``a``m``p``l``e``s")]),e._v("]"),o("code",[e._v("``float32`` ``Tensor``")]),e._v("cont"),o("code",[e._v("a")]),e._v("ining"),o("code"),e._v("th"),o("code",[e._v("e`` ``s")]),e._v("ign"),o("code",[e._v("a``l``s``")]),e._v("to"),o("code"),e._v("t"),o("code",[e._v("a")]),e._v("k"),o("code",[e._v("e``")]),e._v("th"),o("code",[e._v("e``")]),e._v("DCT"),o("code"),e._v("of"),o("code",[e._v(".")])]),e._v(" "),o("li",[o("code",[e._v("type")]),e._v(":"),o("code"),e._v("Th"),o("code",[e._v("e``")]),e._v("IDCT"),o("code",[e._v("``type``")]),e._v("to"),o("code",[e._v("``p``e")]),e._v("rfor"),o("code",[e._v("m``.``")]),e._v("Mu"),o("code",[e._v("s")]),e._v("t"),o("code"),e._v("b"),o("code",[e._v("e``")]),e._v("1"),o("code",[e._v(",``")]),e._v("2"),o("code"),e._v("or"),o("code"),e._v("3"),o("code",[e._v(".")])]),e._v(" "),o("li",[o("code",[e._v("n")]),e._v(":"),o("code"),e._v("For"),o("code"),e._v("futur"),o("code",[e._v("e`` ``e")]),e._v("x"),o("code",[e._v("p``a``n``s")]),e._v("io"),o("code",[e._v("n``.``")]),e._v("Th"),o("code",[e._v("e`` ``l``e``n")]),e._v("gth"),o("code"),e._v("of"),o("code"),e._v("th"),o("code",[e._v("e``")]),e._v("tr"),o("code",[e._v("a``n``s")]),e._v("for"),o("code",[e._v("m``.``")]),e._v("Mu"),o("code",[e._v("s")]),e._v("t"),o("code"),e._v("b"),o("code",[e._v("e`` ``None``.")])]),e._v(" "),o("li",[o("code",[e._v("a")]),e._v("xi"),o("code",[e._v("s")]),e._v(":"),o("code"),e._v("For"),o("code"),e._v("futur"),o("code",[e._v("e`` ``e")]),e._v("x"),o("code",[e._v("p``a``n``s")]),e._v("io"),o("code",[e._v("n``.``")]),e._v("Th"),o("code",[e._v("e`` ``a")]),e._v("xi"),o("code",[e._v("s``")]),e._v("to"),o("code"),e._v("co"),o("code",[e._v("m``p")]),e._v("ut"),o("code",[e._v("e``")]),e._v("th"),o("code",[e._v("e``")]),e._v("DCT"),o("code",[e._v("``a``l")]),e._v("o"),o("code",[e._v("n")]),e._v("g"),o("code",[e._v(".``")]),e._v("Mu"),o("code",[e._v("s")]),e._v("t"),o("code"),e._v("b"),o("code",[e._v("e`` ``-1``.")])]),e._v(" "),o("li",[o("code",[e._v("n")]),e._v("or"),o("code",[e._v("m")]),e._v(":"),o("code"),e._v("Th"),o("code",[e._v("e`` ``n")]),e._v("or"),o("code",[e._v("m``a``l")]),e._v("iz"),o("code",[e._v("a")]),e._v("tio"),o("code",[e._v("n``")]),e._v("to"),o("code",[e._v("``a``p``p``l")]),e._v("y"),o("code",[e._v(".`` ``None``")]),e._v("for"),o("code",[e._v("``n")]),e._v("o"),o("code",[e._v("``n")]),e._v("or"),o("code",[e._v("m``a``l")]),e._v("iz"),o("code",[e._v("a")]),e._v("tio"),o("code",[e._v("n``")]),e._v("or"),o("code",[e._v("``'ortho'``")]),e._v("for"),o("code"),e._v("ortho"),o("code",[e._v("n")]),e._v("or"),o("code",[e._v("m``a``l`` ``n")]),e._v("or"),o("code",[e._v("m``a``l")]),e._v("iz"),o("code",[e._v("a")]),e._v("tio"),o("code",[e._v("n``.")])]),e._v(" "),o("li",[o("code",[e._v("n``a``m``e")]),e._v(":"),o("code"),e._v("A"),o("code",[e._v("n``")]),e._v("o"),o("code",[e._v("p")]),e._v("tio"),o("code",[e._v("n``a``l`` ``n``a``m``e``")]),e._v("for"),o("code"),e._v("th"),o("code",[e._v("e``")]),e._v("o"),o("code",[e._v("p``e")]),e._v("r"),o("code",[e._v("a")]),e._v("tio"),o("code",[e._v("n``.")])])]),e._v(" "),o("h4",{attrs:{id:"returns"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),o("p",[e._v("A [..., samples] float32 Tensor containing the IDCT of input.")]),e._v(" "),o("h4",{attrs:{id:"raises"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("ValueError")]),e._v(": If "),o("code",[e._v("type")]),e._v(" "),o("code",[e._v("is not")]),e._v(" "),o("code",[e._v("1")]),e._v(", "),o("code",[e._v("2")]),e._v(" "),o("code",[e._v("or")]),e._v(" "),o("code",[e._v("3")]),e._v(", "),o("code",[e._v("n")]),e._v(" "),o("code",[e._v("is not")]),e._v(" "),o("code",[e._v("None,")]),e._v("axis"),o("code",[e._v("is not")]),e._v("-"),o("code",[e._v("1``, or``n``or")]),e._v("m"),o("code",[e._v("is not")]),e._v("No"),o("code",[e._v("n")]),e._v("e"),o("code",[e._v("or")]),e._v("'"),o("code",[e._v("or")]),e._v("tho'`.")])]),e._v(" "),o("h4",{attrs:{id:"scipy-compatibility"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#scipy-compatibility","aria-hidden":"true"}},[e._v("#")]),e._v(" Scipy Compatibility")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.fftpack.idct.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("scipy.fftpack.idct"),o("OutboundLink")],1),e._v("Equivalent to  for Type-I, Type-II and Type-III DCT.")])])}),[],!1,null,null,null);v.default=t.exports}}]);