(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{304:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Assert the condition x != y holds for all elements.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v1.debugging.assert_none_equal")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.compat.v1.assert_none_equal(\n    x,\n    y,\n    data=None,\n    summarize=None,\n    message=None,\n    name=None\n)\n")])])]),a("p",[e._v("Example of adding a dependency to an operation:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" with tf.control_dependencies([tf.compat.v1.assert_none_equal(x, y)]):\n  output = tf.reduce_sum(x)\n")])])]),a("p",[e._v("This condition holds if for every pair of (possibly broadcast) elements x[i], y[i], we have x[i] != y[i]. If both x and y are empty, this is trivially satisfied.")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": Numeric "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": Numeric "),a("code",[e._v("Tensor")]),e._v(", same dt"),a("code",[e._v("y")]),e._v("pe as and broadcastable to "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("data")]),e._v(": The tensors to print out if the condition is False. Defaults to error message and first few entries of "),a("code",[e._v("x")]),e._v(", "),a("code",[e._v("y")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("summarize")]),e._v(": Print this man"),a("code",[e._v("y")]),e._v(" entries of each tensor.")]),e._v(" "),a("li",[a("code",[e._v("message")]),e._v(": A string to prefi"),a("code",[e._v("x")]),e._v(" to the default "),a("code",[e._v("message")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(' for this operation (optional). Defaults to "assert_none_equal".')])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("Op that raises InvalidArgumentError if x != y is ever False.")])])}),[],!1,null,null,null);t.default=r.exports}}]);