(window.webpackJsonp=window.webpackJsonp||[]).push([[2489],{2679:function(e,a,r){"use strict";r.r(a);var t=r(0),s=Object(t.a)({},(function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"class-tensorarray"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#class-tensorarray","aria-hidden":"true"}},[e._v("#")]),e._v(" Class TensorArray")]),e._v(" "),r("p",[e._v("Class wrapping dynamic-sized, per-time-step, write-once Tensor arrays.")]),e._v(" "),r("h3",{attrs:{id:"aliases"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),r("ul",[r("li",[e._v("Class "),r("code",[e._v("tf.compat.v1.TensorArray")])]),e._v(" "),r("li",[e._v("Class "),r("code",[e._v("tf.compat.v2.TensorArray")])])]),e._v(" "),r("h3",{attrs:{id:"used-in-the-guide"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("B")]),e._v("e"),r("code",[e._v("t")]),e._v("t"),r("code",[e._v("e")]),e._v("r"),r("code"),e._v("p"),r("code",[e._v("e")]),e._v("r"),r("code",[e._v("f")]),e._v("o"),r("code",[e._v("r")]),e._v("m"),r("code",[e._v("a")]),e._v("n"),r("code",[e._v("c")]),e._v("e"),r("code"),e._v("w"),r("code",[e._v("i")]),e._v("t"),r("code",[e._v("h")]),e._v(" "),r("code",[e._v("t")]),e._v("f"),r("code",[e._v(".")]),e._v("f"),r("code",[e._v("u")]),e._v("n"),r("code",[e._v("c")]),e._v("t"),r("code",[e._v("i")]),e._v("o"),r("code",[e._v("n")]),e._v(" "),r("code",[e._v("a")]),e._v("n"),r("code",[e._v("d")]),e._v(" "),r("code",[e._v("A")]),e._v("u"),r("code",[e._v("t")]),e._v("o"),r("code",[e._v("G")]),e._v("r"),r("code",[e._v("a")]),e._v("p"),r("code",[e._v("h")])])]),e._v(" "),r("h3",{attrs:{id:"used-in-the-tutorials"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("B")]),e._v("e"),r("code",[e._v("t")]),e._v("t"),r("code",[e._v("e")]),e._v("r"),r("code"),e._v("p"),r("code",[e._v("e")]),e._v("r"),r("code",[e._v("f")]),e._v("o"),r("code",[e._v("r")]),e._v("m"),r("code",[e._v("a")]),e._v("n"),r("code",[e._v("c")]),e._v("e"),r("code"),e._v("w"),r("code",[e._v("i")]),e._v("t"),r("code",[e._v("h")]),e._v(" "),r("code",[e._v("t")]),e._v("f"),r("code",[e._v(".")]),e._v("f"),r("code",[e._v("u")]),e._v("n"),r("code",[e._v("c")]),e._v("t"),r("code",[e._v("i")]),e._v("o"),r("code",[e._v("n")]),e._v("\nThis class is meant to be used with dynamic iteration primitives such as "),r("code",[e._v("while_loop")]),e._v(" and "),r("code",[e._v("map_fn")]),e._v('. It supports gradient back-propagation via special "flow" control flow dependencies.')])]),e._v(" "),r("h2",{attrs:{id:"init"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("init")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/tensor_array_ops.py#L931-L1010",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __init__(\n    dtype,\n    size=None,\n    dynamic_size=None,\n    clear_after_read=None,\n    tensor_array_name=None,\n    handle=None,\n    flow=None,\n    infer_shape=True,\n    element_shape=None,\n    colocate_with_first_write_call=True,\n    name=None\n)\n")])])]),r("p",[e._v("Construct a new TensorArray or wrap an existing TensorArray handle.\nA note about the parameter "),r("code",[e._v("name")]),e._v(":\nThe name of the "),r("code",[e._v("TensorArray")]),e._v(" (even if passed in) is uniquified: each time a new "),r("code",[e._v("TensorArray")]),e._v(" is created at runtime it is assigned its own name for the duration of the run. This avoids name collisions if a "),r("code",[e._v("TensorArray")]),e._v(" is created within a "),r("code",[e._v("while_loop")]),e._v(".")]),e._v(" "),r("h4",{attrs:{id:"args"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("dtype")]),e._v(": (required) data type of the TensorArray.")]),e._v(" "),r("li",[r("code",[e._v("size")]),e._v(": (optional) int32 scalar "),r("code",[e._v("Tensor")]),e._v(": the "),r("code",[e._v("size")]),e._v(" of the "),r("code",[e._v("Tensor")]),e._v("Array. Required if handle is not provided.")]),e._v(" "),r("li",[r("code",[e._v("dynamic_size")]),e._v(": (optional) Python bool: If true, writes to the "),r("code",[e._v("Tensor")]),e._v("Array can grow the "),r("code",[e._v("Tensor")]),e._v("Array past its initial "),r("code",[e._v("size")]),e._v(". Default: False.")]),e._v(" "),r("li",[r("code",[e._v("clear_after_read")]),e._v(": Boolean (optional, default: True). If True, clear "),r("code",[e._v("Tensor")]),e._v("Array values after reading them. This disables read-many semantics, but allows early release of memory.")]),e._v(" "),r("li",[r("code",[e._v("tensor_array_name")]),e._v(": (optional) Python string: the name of the "),r("code",[e._v("Tensor")]),e._v("Array. This is used when creating the "),r("code",[e._v("Tensor")]),e._v("Array handle. If this value is set, handle should be None.")]),e._v(" "),r("li",[r("code",[e._v("handle")]),e._v(": (optional) A "),r("code",[e._v("Tensor")]),e._v(" "),r("code",[e._v("handle")]),e._v(" to an existing "),r("code",[e._v("Tensor")]),e._v("Array. If this is set, "),r("code",[e._v("tensor_array_name")]),e._v(" should be None. Only supported in graph mode.")]),e._v(" "),r("li",[r("code",[e._v("flow")]),e._v(": (optional) A float "),r("code",[e._v("Tensor")]),e._v(" scalar coming from an existing "),r("code",[e._v("Tensor")]),e._v("Array."),r("code",[e._v("flow")]),e._v(". Only supported in graph mode.")]),e._v(" "),r("li",[r("code",[e._v("infer_shape")]),e._v(": (optional, default: True) If True, shape inference is enabled. In this case, all elements must have the same shape.")]),e._v(" "),r("li",[r("code",[e._v("element_shape")]),e._v(": (optional, default: None) A "),r("code",[e._v("Tensor")]),e._v("Shape object specifying the shape constraints of each of the elements of the "),r("code",[e._v("Tensor")]),e._v("Array. Need not be fully defined.")]),e._v(" "),r("li",[r("code",[e._v("colocate_with_first_write_call")]),e._v(": If "),r("code",[e._v("True")]),e._v(", the "),r("code",[e._v("Tensor")]),e._v("Array will be colocated on the same device as the "),r("code",[e._v("Tensor")]),e._v(" used on its first "),r("code",[e._v("write")]),e._v(" ("),r("code",[e._v("write")]),e._v(" operations include "),r("code",[e._v("write")]),e._v(", "),r("code",[e._v("unstack")]),e._v(", and "),r("code",[e._v("split")]),e._v("). If "),r("code",[e._v("False")]),e._v(", the "),r("code",[e._v("Tensor")]),e._v("Array will be placed on the device determined by the device context available during its initialization.")]),e._v(" "),r("li",[r("code",[e._v("name")]),e._v(": A "),r("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),r("h4",{attrs:{id:"raises"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("ValueError")]),e._v(": if both handle and tensor_array_name are provided.")]),e._v(" "),r("li",[r("code",[e._v("TypeError")]),e._v(": if handle is provided but is not a Tensor.")])]),e._v(" "),r("h2",{attrs:{id:"properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),r("h3",{attrs:{id:"dtype"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dtype","aria-hidden":"true"}},[e._v("#")]),e._v(" dtype")]),e._v(" "),r("p",[e._v("The data type of this TensorArray.")]),e._v(" "),r("h3",{attrs:{id:"dynamic-size"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-size","aria-hidden":"true"}},[e._v("#")]),e._v(" dynamic_size")]),e._v(" "),r("p",[e._v("Python bool; if "),r("code",[e._v("True")]),e._v(" the TensorArray can grow dynamically.")]),e._v(" "),r("h3",{attrs:{id:"element-shape"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#element-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" element_shape")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/TensorShape",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.TensorShape"),r("OutboundLink")],1),e._v("The  of elements in this TensorArray.")]),e._v(" "),r("h3",{attrs:{id:"flow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#flow","aria-hidden":"true"}},[e._v("#")]),e._v(" flow")]),e._v(" "),r("p",[e._v("The flow "),r("code",[e._v("Tensor")]),e._v(" forcing ops leading to this "),r("code",[e._v("Tensor")]),e._v("Array state.")]),e._v(" "),r("h3",{attrs:{id:"handle"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#handle","aria-hidden":"true"}},[e._v("#")]),e._v(" handle")]),e._v(" "),r("p",[e._v("The reference to the TensorArray.")]),e._v(" "),r("h2",{attrs:{id:"methods"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),r("h3",{attrs:{id:"close"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#close","aria-hidden":"true"}},[e._v("#")]),e._v(" close")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/tensor_array_ops.py#L1193-L1196",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" close(name=None)\n")])])]),r("p",[e._v("Close the current TensorArray.\nNOTE The output of this function should be used. If it is not, a warning will be logged. To mark the output as used, call its .mark_used() method.")]),e._v(" "),r("h3",{attrs:{id:"concat"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#concat","aria-hidden":"true"}},[e._v("#")]),e._v(" concat")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/tensor_array_ops.py#L1117-L1129",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" concat(name=None)\n")])])]),r("p",[e._v("Return the values in the "),r("code",[e._v("Tensor")]),e._v("Array as a concatenated "),r("code",[e._v("Tensor")]),e._v(".\nAll of the values must have been written, their ranks must match, and and their shapes must all match for all dimensions except the first.")]),e._v(" "),r("h4",{attrs:{id:"args-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("name")]),e._v(": A "),r("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),r("h4",{attrs:{id:"returns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("All the tensors in the TensorArray concatenated into one tensor.")]),e._v(" "),r("h3",{attrs:{id:"gather"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gather","aria-hidden":"true"}},[e._v("#")]),e._v(" gather")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/tensor_array_ops.py#L1100-L1115",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" gather(\n    indices,\n    name=None\n)\n")])])]),r("p",[e._v("Return selected values in the "),r("code",[e._v("Tensor")]),e._v("Array as a packed "),r("code",[e._v("Tensor")]),e._v(".\nAll of selected values must have been written and their shapes must all match.")]),e._v(" "),r("h4",{attrs:{id:"args-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("h4",{attrs:{id:"returns-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("The tensors in the "),r("code",[e._v("TensorArray")]),e._v(" selected by "),r("code",[e._v("indices")]),e._v(", packed into one tensor.")]),e._v(" "),r("h3",{attrs:{id:"grad"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#grad","aria-hidden":"true"}},[e._v("#")]),e._v(" grad")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/tensor_array_ops.py#L1054-L1055",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" grad(\n    source,\n    flow=None,\n    name=None\n)\n")])])]),r("h3",{attrs:{id:"identity"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#identity","aria-hidden":"true"}},[e._v("#")]),e._v(" identity")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/tensor_array_ops.py#L1044-L1052",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" identity()\n")])])]),r("p",[e._v("Returns a TensorArray with the same content and properties.")]),e._v(" "),r("h4",{attrs:{id:"returns-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A new TensorArray object with flow that ensures the control dependencies from the contexts will become control dependencies for writes, reads, etc. Use this object all for subsequent operations.")]),e._v(" "),r("h3",{attrs:{id:"read"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#read","aria-hidden":"true"}},[e._v("#")]),e._v(" read")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/tensor_array_ops.py#L1057-L1067",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" read(\n    index,\n    name=None\n)\n")])])]),r("p",[e._v("Read the value at location "),r("code",[e._v("index")]),e._v(" in the TensorArray.")]),e._v(" "),r("h4",{attrs:{id:"args-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("index")]),e._v(": 0-D. int32 tensor with the "),r("code",[e._v("index")]),e._v(" to read from.")]),e._v(" "),r("li",[r("code",[e._v("name")]),e._v(": A "),r("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),r("h4",{attrs:{id:"returns-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("The tensor at "),r("code",[e._v("index")]),e._v(" "),r("code",[e._v("index")]),e._v(".")]),e._v(" "),r("h3",{attrs:{id:"scatter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#scatter","aria-hidden":"true"}},[e._v("#")]),e._v(" scatter")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/tensor_array_ops.py#L1151-L1168",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" scatter(\n    indices,\n    value,\n    name=None\n)\n")])])]),r("p",[e._v("Scatter the values of a "),r("code",[e._v("Tensor")]),e._v(" in specific indices of a "),r("code",[e._v("Tensor")]),e._v("Array.")])])}),[],!1,null,null,null);a.default=s.exports}}]);