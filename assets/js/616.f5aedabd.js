(window.webpackJsonp=window.webpackJsonp||[]).push([[616],{804:function(t,e,r){"use strict";r.r(e);var n=r(0),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("Public API for tf.nest namespace.")]),t._v(" "),r("h2",{attrs:{id:"functions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#functions","aria-hidden":"true"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nest/assert_same_structure",target:"_blank",rel:"noopener noreferrer"}},[t._v("assert_same_structure(...)"),r("OutboundLink")],1),t._v(": Asserts that two structures are nested in the same way.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nest/flatten",target:"_blank",rel:"noopener noreferrer"}},[t._v("flatten(...)"),r("OutboundLink")],1),t._v(": Returns a flat list from a given nested structure.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nest/is_nested",target:"_blank",rel:"noopener noreferrer"}},[t._v("is_nested(...)"),r("OutboundLink")],1),t._v(": Returns true if its input is a collections.abc.Sequence (except strings).")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nest/map_structure",target:"_blank",rel:"noopener noreferrer"}},[t._v("map_structure(...)"),r("OutboundLink")],1),t._v(": Applies func to each entry in structure and returns a new structure.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/nest/pack_sequence_as",target:"_blank",rel:"noopener noreferrer"}},[t._v("pack_sequence_as(...)"),r("OutboundLink")],1),t._v(": Returns a given flattened sequence packed into a given structure.")])])}),[],!1,null,null,null);e.default=s.exports}}]);