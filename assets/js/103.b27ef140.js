(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{294:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Assert the condition x == y holds element-wise.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.debugging.assert_equal")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.compat.v1.assert_equal(\n    x,\n    y,\n    data=None,\n    summarize=None,\n    message=None,\n    name=None\n)\n")])])]),t("p",[e._v("Example of adding a dependency to an operation:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" with tf.control_dependencies([tf.compat.v1.assert_equal(x, y)]):\n  output = tf.reduce_sum(x)\n")])])]),t("p",[e._v("This condition holds if for every pair of (possibly broadcast) elements x[i], y[i], we have x[i] == y[i]. If both x and y are empty, this is trivially satisfied.")]),e._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": Numeric "),t("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": Numeric "),t("code",[e._v("Tensor")]),e._v(", same dt"),t("code",[e._v("y")]),e._v("pe as and broadcastable to "),t("code",[e._v("x")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("data")]),e._v(": The tensors to print out if the condition is False. Defaults to error message and first few entries of "),t("code",[e._v("x")]),e._v(", "),t("code",[e._v("y")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("summarize")]),e._v(": Print this man"),t("code",[e._v("y")]),e._v(" entries of each tensor.")]),e._v(" "),t("li",[t("code",[e._v("message")]),e._v(": A string to prefi"),t("code",[e._v("x")]),e._v(" to the default "),t("code",[e._v("message")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(' for this operation (optional). Defaults to "assert_equal".')])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("Op that raises InvalidArgumentError if x == y is False.")]),e._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("InvalidArgumentError")]),e._v(": if the check can be performed immediatel"),t("code",[e._v("y")]),e._v(" and "),t("code",[e._v("x == y")]),e._v(" is False. The check can be performed immediatel"),t("code",[e._v("y")]),e._v(" during eager e"),t("code",[e._v("x")]),e._v("ecution or if "),t("code",[e._v("x")]),e._v(" and "),t("code",[e._v("y")]),e._v(" are staticall"),t("code",[e._v("y")]),e._v(" known.")])]),e._v(" "),t("h4",{attrs:{id:"eager-compatibility"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eager-compatibility","aria-hidden":"true"}},[e._v("#")]),e._v(" Eager Compatibility")]),e._v(" "),t("p",[e._v("returns None")])])}),[],!1,null,null,null);a.default=r.exports}}]);