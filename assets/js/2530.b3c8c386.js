(window.webpackJsonp=window.webpackJsonp||[]).push([[2530],{2721:function(e,t,s){"use strict";s.r(t);var a=s(0),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("foldr on the list of tensors unpacked from "),s("code",[e._v("elems")]),e._v(" on dimension 0.")]),e._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tf.compat.v1.foldr")])]),e._v(" "),s("li",[s("code",[e._v("tf.compat.v2.foldr")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.foldr(\n    fn,\n    elems,\n    initializer=None,\n    parallel_iterations=10,\n    back_prop=True,\n    swap_memory=False,\n    name=None\n)\n")])])]),s("p",[e._v("This foldr operator repeatedly applies the callable "),s("code",[e._v("fn")]),e._v(" to a sequence of elements from last to first. The elements are made of the tensors unpacked from "),s("code",[e._v("elems")]),e._v(". The callable "),s("code",[e._v("fn")]),e._v(" takes two tensors as arguments. The first argument is the accumulated value computed from the preceding invocation of "),s("code",[e._v("fn")]),e._v(", and the second is the value at the current position of "),s("code",[e._v("elems")]),e._v(". If "),s("code",[e._v("initializer")]),e._v(" is None, "),s("code",[e._v("elems")]),e._v(" must contain at least one element, and its first element is used as the "),s("code",[e._v("initializer")]),e._v(".\nSuppose that "),s("code",[e._v("elems")]),e._v(" is unpacked into "),s("code",[e._v("values")]),e._v(", a list of tensors. The shape of the result tensor is fn(initializer, "),s("code",[e._v("values")]),e._v("[0]).shape.\nThis method also allows multi-arity "),s("code",[e._v("elems")]),e._v(" and output of "),s("code",[e._v("fn")]),e._v(". If "),s("code",[e._v("elems")]),e._v(" is a (possibly nested) list or tuple of tensors, then each of these tensors must have a matching first (unpack) dimension. The signature of "),s("code",[e._v("fn")]),e._v(" may match the structure of "),s("code",[e._v("elems")]),e._v(". That is, if "),s("code",[e._v("elems")]),e._v(" is ("),s("code",[e._v("t1, [t2, t3, [t4, t5]]t1, [t2, t3, [t4, t5]]")]),e._v("), then an appropriate signature for "),s("code",[e._v("fn")]),e._v(" is: "),s("code",[e._v("fn")]),e._v(" = lambda ("),s("code",[e._v("t1, [t2, t3, [t4, t5]]t1, [t2, t3, [t4, t5]]")]),e._v("):.")]),e._v(" "),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("fn")]),e._v(": The callable to be performed.")]),e._v(" "),s("li",[s("code",[e._v("elems")]),e._v(": A tensor or (possibly nested) sequence of tensors, each of which will be unpacked along their first dimension. The nested sequence of the resulting slices will be the first argument to "),s("code",[e._v("fn")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("initializer")]),e._v(": (optional) A tensor or (possibly nested) sequence of tensors, as the initial value for the accumulator.")]),e._v(" "),s("li",[s("code",[e._v("parallel_iterations")]),e._v(": (optional) The number of iterations allowed to run in parallel.")]),e._v(" "),s("li",[s("code",[e._v("back_prop")]),e._v(": (optional) True enables support for back propagation.")]),e._v(" "),s("li",[s("code",[e._v("swap_memory")]),e._v(": (optional) True enables GPU-CPU memory swapping.")]),e._v(" "),s("li",[s("code",[e._v("name")]),e._v(": (optional) Name prefix for the returned tensors.")])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("A tensor or (possibly nested) sequence of tensors, resulting from applying "),s("code",[e._v("fn")]),e._v(" consecutively to the list of tensors unpacked from "),s("code",[e._v("elems")]),e._v(", from last to first.")]),e._v(" "),s("h4",{attrs:{id:"raises"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("TypeError")]),e._v(": if "),s("code",[e._v("fn")]),e._v(" is not callable.")])]),e._v(" "),s("h4",{attrs:{id:"example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example","aria-hidden":"true"}},[e._v("#")]),e._v(" Example:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" elems = [1, 2, 3, 4, 5, 6]\nsum = foldr(lambda a, x: a + x, elems)\n# sum == 21\n")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);