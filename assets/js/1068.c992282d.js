(window.webpackJsonp=window.webpackJsonp||[]).push([[1068],{1257:function(e,t,i){"use strict";i.r(t);var s=i(0),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("p",[e._v("Sets the current thread device policy.")]),e._v(" "),i("h3",{attrs:{id:"aliases"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),i("ul",[i("li",[i("code",[e._v("tf.compat.v1.config.experimental.set_device_policy")])]),e._v(" "),i("li",[i("code",[e._v("tf.compat.v2.config.experimental.set_device_policy")])])]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v(" tf.config.experimental.set_device_policy(device_policy)\n")])])]),i("p",[e._v("The device policy controls how operations requiring inputs on a specific device (e.g., on GPU:0) handle inputs on a different device (e.g. GPU:1).")]),e._v(" "),i("p",[e._v("When using the default, an appropriate policy will be picked automatically. The default policy may change over time.")]),e._v(" "),i("p",[e._v("This function only sets the device policy for the current thread. Any subsequently started thread will again use the default policy.")]),e._v(" "),i("h4",{attrs:{id:"args"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),i("ul",[i("li",[i("code",[e._v("device_policy")]),e._v(": A device policy. Valid values:\nNone: Switch to a system default.\n'warn': Copies the tensors which are not on the right device and logs a warning.\n'explicit': Raises an error if the placement is not as required.\n'silent': Silently copies the tensors. Note that this may hide performance problems as there is no notification provided when operations are blocked on the tensor being copied between devices.\n'silent_for_"),i("code",[e._v("int32")]),e._v("': silently copies "),i("code",[e._v("int32")]),e._v(" tensors, raising errors on the other ones.")]),e._v(" "),i("li",[e._v("None: Switch to a system default.")]),e._v(" "),i("li",[e._v("'warn': Copies the tensors which are not on the right device and logs a warning.")]),e._v(" "),i("li",[e._v("'explicit': Raises an error if the placement is not as required.")]),e._v(" "),i("li",[e._v("'silent': Silently copies the tensors. Note that this may hide performance problems as there is no notification provided when operations are blocked on the tensor being copied between devices.")]),e._v(" "),i("li",[e._v("'silent_for_"),i("code",[e._v("int32")]),e._v("': silently copies "),i("code",[e._v("int32")]),e._v(" tensors, raising errors on the other ones.")])]),e._v(" "),i("h4",{attrs:{id:"raises"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),i("ul",[i("li",[i("code",[e._v("ValueError")]),e._v(": If an invalid "),i("code",[e._v("device_policy")]),e._v(" is passed.")])])])}),[],!1,null,null,null);t.default=a.exports}}]);