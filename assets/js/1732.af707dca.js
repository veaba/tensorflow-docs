(window.webpackJsonp=window.webpackJsonp||[]).push([[1732],{1923:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"class-averagepooling1d"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-averagepooling1d","aria-hidden":"true"}},[e._v("#")]),e._v(" Class AveragePooling1D")]),e._v(" "),t("p",[e._v("Average pooling for temporal data.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[e._v("Class "),t("code",[e._v("tf.compat.v1.keras.layers.AveragePooling1D")])]),e._v(" "),t("li",[e._v("Class "),t("code",[e._v("tf.compat.v1.keras.layers.AvgPool1D")])]),e._v(" "),t("li",[e._v("Class "),t("code",[e._v("tf.compat.v2.keras.layers.AveragePooling1D")])]),e._v(" "),t("li",[e._v("Class "),t("code",[e._v("tf.compat.v2.keras.layers.AvgPool1D")])]),e._v(" "),t("li",[e._v("Class "),t("code",[e._v("tf.keras.layers.AvgPool1D")])])]),e._v(" "),t("h4",{attrs:{id:"arguments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("pool_size")]),e._v(": Integer, size of the average pooling windows.")]),e._v(" "),t("li",[t("code",[e._v("strides")]),e._v(": Integer, or None. Factor by which to downscale. E.g. 2 will halve the input. If None, it will default to "),t("code",[e._v("pool_size")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("padding")]),e._v(": One of "),t("code",[e._v('"valid"')]),e._v(" or "),t("code",[e._v('"same"')]),e._v(" (case-insensitive).")]),e._v(" "),t("li",[t("code",[e._v("data_format")]),e._v(": A string, one of "),t("code",[e._v("channels_last")]),e._v(" (default) or "),t("code",[e._v("channels_first")]),e._v(". The ordering of the dimensions in the inputs. "),t("code",[e._v("channels_last")]),e._v(" corresponds to inputs with shape ("),t("code",[e._v("batch, steps, features")]),e._v(") while "),t("code",[e._v("channels_first")]),e._v(" corresponds to inputs with shape ("),t("code",[e._v("batch, features, steps")]),e._v(").")])]),e._v(" "),t("h4",{attrs:{id:"input-shape"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#input-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" Input shape:")]),e._v(" "),t("ul",[t("li",[e._v("If "),t("code",[e._v("data_format='channels_last'")]),e._v(": 3D tensor with shape ("),t("code",[e._v("batch_size, steps, features")]),e._v(").")]),e._v(" "),t("li",[e._v("If "),t("code",[e._v("data_format='channels_first'")]),e._v(": 3D tensor with shape ("),t("code",[e._v("batch_size, features, steps")]),e._v(").")])]),e._v(" "),t("h4",{attrs:{id:"output-shape"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#output-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" Output shape:")]),e._v(" "),t("ul",[t("li",[e._v("If "),t("code",[e._v("data_format='channels_last'")]),e._v(": 3D tensor with shape ("),t("code",[e._v("batch_size, downsampled_steps, features")]),e._v(").")]),e._v(" "),t("li",[e._v("If "),t("code",[e._v("data_format='channels_first'")]),e._v(": 3D tensor with shape ("),t("code",[e._v("batch_size, features, downsampled_steps")]),e._v(").")])]),e._v(" "),t("h2",{attrs:{id:"init"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("init")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/pooling.py#L185-L193",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __init__(\n    pool_size=2,\n    strides=None,\n    padding='valid',\n    data_format='channels_last',\n    **kwargs\n)\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);