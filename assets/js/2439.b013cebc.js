(window.webpackJsonp=window.webpackJsonp||[]).push([[2439],{2627:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"class-coordinator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-coordinator","aria-hidden":"true"}},[t._v("#")]),t._v(" Class Coordinator")]),t._v(" "),a("p",[t._v("A coordinator for threads.")]),t._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),a("ul",[a("li",[t._v("Class "),a("code",[t._v("tf.compat.v1.train.Coordinator")])]),t._v(" "),a("li",[t._v("Class "),a("code",[t._v("tf.compat.v2.train.Coordinator")])])]),t._v(" "),a("p",[t._v("This class implements a simple mechanism to coordinate the termination of a set of threads.")]),t._v(" "),a("h4",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[t._v("#")]),t._v(" Usage:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" # Create a coordinator.\ncoord = Coordinator()\n# Start a number of threads, passing the coordinator to each of them.\n...start thread 1...(coord, ...)\n...start thread N...(coord, ...)\n# Wait for all the threads to terminate.\ncoord.join(threads)\n")])])]),a("p",[t._v("Any of the threads can call coord.request_stop() to ask for all the threads to stop. To cooperate with the requests, each thread must check for coord.should_stop() on a regular basis. coord.should_stop() returns True as soon as coord.request_stop() has been called.")]),t._v(" "),a("p",[t._v("A typical thread running with a coordinator will do something like:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" while not coord.should_stop():\n  ...do some work...\n")])])]),a("h4",{attrs:{id:"exception-handling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exception-handling","aria-hidden":"true"}},[t._v("#")]),t._v(" Exception handling:")]),t._v(" "),a("p",[t._v("A thread can report an exception to the coordinator as part of the request_stop() call. The exception will be re-raised from the coord.join() call.")]),t._v(" "),a("h4",{attrs:{id:"thread-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#thread-code","aria-hidden":"true"}},[t._v("#")]),t._v(" Thread code:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" try:\n  while not coord.should_stop():\n    ...do some work...\nexcept Exception as e:\n  coord.request_stop(e)\n")])])]),a("h4",{attrs:{id:"main-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#main-code","aria-hidden":"true"}},[t._v("#")]),t._v(" Main code:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" try:\n  ...\n  coord = Coordinator()\n  # Start a number of threads, passing the coordinator to each of them.\n  ...start thread 1...(coord, ...)\n  ...start thread N...(coord, ...)\n  # Wait for all the threads to terminate.\n  coord.join(threads)\nexcept Exception as e:\n  ...exception that was passed to coord.request_stop()\n")])])]),a("p",[t._v("To simplify the thread implementation, the Coordinator provides a context handler stop_on_exception() that automatically requests a stop if an exception is raised. Using the context handler the thread code above can be written as:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" with coord.stop_on_exception():\n  while not coord.should_stop():\n    ...do some work...\n")])])]),a("h4",{attrs:{id:"grace-period-for-stopping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grace-period-for-stopping","aria-hidden":"true"}},[t._v("#")]),t._v(" Grace period for stopping:")]),t._v(" "),a("p",[t._v("After a thread has called coord.request_stop() the other threads have a fixed time to stop, this is called the 'stop grace period' and defaults to 2 minutes. If any of the threads is still alive after the grace period expires coord.join() raises a RuntimeError reporting the laggards.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" try:\n  ...\n  coord = Coordinator()\n  # Start a number of threads, passing the coordinator to each of them.\n  ...start thread 1...(coord, ...)\n  ...start thread N...(coord, ...)\n  # Wait for all the threads to terminate, give them 10s grace period\n  coord.join(threads, stop_grace_period_secs=10)\nexcept RuntimeError:\n  ...one of the threads took more than 10s to stop after request_stop()\n  ...was called.\nexcept Exception:\n  ...exception that was passed to coord.request_stop()\n")])])]),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("init")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/coordinator.py#L130-L159",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" __init__(clean_stop_exception_types=None)\n")])])]),a("p",[t._v("Create a new Coordinator.")]),t._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("clean_stop_exception_types")]),t._v(": Optional tuple of Exception types that should cause a clean stop of the coordinator. If an exception of one of these types is reported to request_stop(ex) the coordinator will behave as if request_stop(None) was called. Defaults to ("),a("code",[t._v("tf.errors.OutOfRangeError,")]),t._v(") which is used by input queues to signal the end of input. When feeding training data from a Python iterator it is common to add "),a("code",[t._v("StopIteration")]),t._v(" to this list.")])]),t._v(" "),a("h2",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),a("h3",{attrs:{id:"joined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#joined","aria-hidden":"true"}},[t._v("#")]),t._v(" joined")]),t._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),a("h3",{attrs:{id:"clear-stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clear-stop","aria-hidden":"true"}},[t._v("#")]),t._v(" clear_stop")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/coordinator.py#L246-L255",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" clear_stop()\n")])])]),a("p",[t._v("Clears the stop flag.")]),t._v(" "),a("p",[t._v("After this is called, calls to should_stop() will return False.")]),t._v(" "),a("h3",{attrs:{id:"join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join","aria-hidden":"true"}},[t._v("#")]),t._v(" join")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/coordinator.py#L322-L397",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" join(\n    threads=None,\n    stop_grace_period_secs=120,\n    ignore_live_threads=False\n)\n")])])]),a("p",[t._v("Wait for threads to terminate.\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/train/Coordinator#register_thread",target:"_blank",rel:"noopener noreferrer"}},[t._v("Coordinator.register_thread()"),a("OutboundLink")],1),t._v("This call blocks until a set of threads have terminated. The set of thread is the union of the threads passed in the threads argument and the list of threads that registered with the coordinator by calling .")]),t._v(" "),a("p",[t._v("After the threads stop, if an exc_info was passed to request_stop, that exception is re-raised.")]),t._v(" "),a("p",[t._v("Grace period handling: When request_stop() is called, threads are given 'stop_grace_period_secs' seconds to terminate. If any of them is still alive after that period expires, a RuntimeError is raised. Note that if an exc_info was passed to request_stop() then it is raised instead of that RuntimeError.")]),t._v(" "),a("h4",{attrs:{id:"args-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("threads")]),t._v(": List of "),a("code",[t._v("threading.Threads")]),t._v(". The started "),a("code",[t._v("threads")]),t._v(" to join in addition to the registered "),a("code",[t._v("threads")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("stop_grace_period_secs")]),t._v(": Number of seconds given to "),a("code",[t._v("threads")]),t._v(" to stop after "),a("code",[t._v("request_stop")]),t._v("() has been called.")]),t._v(" "),a("li",[a("code",[t._v("ignore_live_threads")]),t._v(": If "),a("code",[t._v("False")]),t._v(", raises an error if any of the "),a("code",[t._v("threads")]),t._v(" are still alive after "),a("code",[t._v("stop_grace_period_secs")]),t._v(".")])]),t._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[t._v("#")]),t._v(" Raises:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("RuntimeError")]),t._v(": If any thread is still alive after "),a("code",[t._v("request_stop")]),t._v("() is called and the grace period expires.")])]),t._v(" "),a("h3",{attrs:{id:"raise-requested-exception"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raise-requested-exception","aria-hidden":"true"}},[t._v("#")]),t._v(" raise_requested_exception")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/coordinator.py#L403-L407",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" raise_requested_exception()\n")])])]),a("p",[t._v("If an exception has been passed to request_stop, this raises it.")]),t._v(" "),a("h3",{attrs:{id:"register-thread"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#register-thread","aria-hidden":"true"}},[t._v("#")]),t._v(" register_thread")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/coordinator.py#L313-L320",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" register_thread(thread)\n")])])]),a("p",[t._v("Register a thread to join.")]),t._v(" "),a("h4",{attrs:{id:"args-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("thread")]),t._v(": A Python "),a("code",[t._v("thread")]),t._v(" to join.")])]),t._v(" "),a("h3",{attrs:{id:"request-stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-stop","aria-hidden":"true"}},[t._v("#")]),t._v(" request_stop")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/coordinator.py#L187-L244",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" request_stop(ex=None)\n")])])]),a("p",[t._v("Request that the threads stop.")]),t._v(" "),a("p",[t._v("After this is called, calls to should_stop() will return True.")]),t._v(" "),a("h4",{attrs:{id:"args-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ex")]),t._v(": Optional "),a("code",[t._v("Exception")]),t._v(", or Python "),a("code",[t._v("ex")]),t._v("c_info tuple as returned by "),a("code",[t._v("sys.exc_info")]),t._v("(). If this is the first call to "),a("code",[t._v("request_stop")]),t._v("() the corresponding "),a("code",[t._v("ex")]),t._v("ception is recorded and re-raised from "),a("code",[t._v("join")]),t._v("().")])]),t._v(" "),a("h3",{attrs:{id:"should-stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#should-stop","aria-hidden":"true"}},[t._v("#")]),t._v(" should_stop")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/coordinator.py#L257-L263",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" should_stop()\n")])])]),a("p",[t._v("Check if stop was requested.")]),t._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),a("p",[t._v("True if a stop was requested.")]),t._v(" "),a("h3",{attrs:{id:"stop-on-exception"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stop-on-exception","aria-hidden":"true"}},[t._v("#")]),t._v(" stop_on_exception")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" stop_on_exception(\n    *args,\n    **kwds\n)\n")])])]),a("p",[t._v("Context manager to request stop when an Exception is raised.")]),t._v(" "),a("p",[t._v("Code that uses a coordinator must catch exceptions and pass them to the request_stop() method to stop the other threads managed by the coordinator.")]),t._v(" "),a("p",[t._v("This context handler simplifies the exception handling. Use it as follows:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" with coord.stop_on_exception():\n  # Any exception raised in the body of the with\n  # clause is reported to the coordinator before terminating\n  # the execution of the body.\n  ...body...\n")])])]),a("p",[t._v("This is completely equivalent to the slightly longer code:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" try:\n  ...body...\nexcept:\n  coord.request_stop(sys.exc_info())\n")])])]),a("h4",{attrs:{id:"yields"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yields","aria-hidden":"true"}},[t._v("#")]),t._v(" Yields:")]),t._v(" "),a("p",[t._v("nothing.")]),t._v(" "),a("h3",{attrs:{id:"wait-for-stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wait-for-stop","aria-hidden":"true"}},[t._v("#")]),t._v(" wait_for_stop")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/training/coordinator.py#L301-L311",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" wait_for_stop(timeout=None)\n")])])]),a("p",[t._v("Wait till the Coordinator is told to stop.")]),t._v(" "),a("h4",{attrs:{id:"args-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-5","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("timeout")]),t._v(": Float. Sleep for up to that many seconds waiting for should_stop() to become True.")])]),t._v(" "),a("h4",{attrs:{id:"returns-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),a("p",[t._v("True if the Coordinator is told stop, False if the timeout expired.")])])}),[],!1,null,null,null);e.default=s.exports}}]);