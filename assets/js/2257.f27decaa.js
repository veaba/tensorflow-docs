(window.webpackJsonp=window.webpackJsonp||[]).push([[2257],{2445:function(a,t,e){"use strict";e.r(t);var _=e(0),n=Object(_.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("Defined in generated file: python/ops/gen_array_ops.py")]),a._v(" "),e("p",[a._v("Compute gradients for a FakeQuantWithMinMaxArgs operation.")]),a._v(" "),e("h3",{attrs:{id:"aliases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("tf.compat.v1.fake_quant_with_min_max_args_gradient")])]),a._v(" "),e("li",[e("code",[a._v("tf.compat.v1.quantization.fake_quant_with_min_max_args_gradient")])]),a._v(" "),e("li",[e("code",[a._v("tf.compat.v2.quantization.fake_quant_with_min_max_args_gradient")])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(" tf.quantization.fake_quant_with_min_max_args_gradient(\n    gradients,\n    inputs,\n    min=-6,\n    max=6,\n    num_bits=8,\n    narrow_range=False,\n    name=None\n)\n")])])]),e("h4",{attrs:{id:"args"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[a._v("#")]),a._v(" Args:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("gradients")]),a._v(": A "),e("code",[a._v("Tensor")]),a._v(" of type "),e("code",[a._v("float32")]),a._v(". Backpropagated "),e("code",[a._v("gradients")]),a._v(" above the FakeQuantWithMinMaxArgs operation.")]),a._v(" "),e("li",[e("code",[a._v("inputs")]),a._v(": A "),e("code",[a._v("Tensor")]),a._v(" of type "),e("code",[a._v("float32")]),a._v(". Values passed as "),e("code",[a._v("inputs")]),a._v(" to the FakeQuantWithMinMaxArgs operation.")]),a._v(" "),e("li",[e("code",[a._v("min")]),a._v(": An optional "),e("code",[a._v("float")]),a._v(". Defaults to "),e("code",[a._v("-6")]),a._v(".")]),a._v(" "),e("li",[e("code",[a._v("max")]),a._v(": An optional "),e("code",[a._v("float")]),a._v(". Defaults to "),e("code",[a._v("6")]),a._v(".")]),a._v(" "),e("li",[e("code",[a._v("num_bits")]),a._v(": An optional "),e("code",[a._v("int")]),a._v(". Defaults to "),e("code",[a._v("8")]),a._v(".")]),a._v(" "),e("li",[e("code",[a._v("narrow_range")]),a._v(": An optional "),e("code",[a._v("bool")]),a._v(". Defaults to "),e("code",[a._v("False")]),a._v(".")]),a._v(" "),e("li",[e("code",[a._v("name")]),a._v(": A "),e("code",[a._v("name")]),a._v(" for the operation (optional).")])]),a._v(" "),e("h4",{attrs:{id:"returns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns:")]),a._v(" "),e("p",[a._v("A Tensor of type float32.")])])}),[],!1,null,null,null);t.default=n.exports}}]);