(window.webpackJsonp=window.webpackJsonp||[]).push([[967],{1155:function(t,e,r){"use strict";r.r(e);var a=r(0),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("Experimental API for building input pipelines.\n"),r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/Dataset",target:"_blank",rel:"noopener noreferrer"}},[t._v("tf.data.Dataset"),r("OutboundLink")],1),t._v("This module contains experimental Dataset sources and transformations that can be used in conjunction with the  API. Note that the tf.data.experimental API is not subject to the same backwards compatibility guarantees as tf.data, but we will provide deprecation advice in advance of removing existing functionality.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://tensorflow.org/guide/datasets",target:"_blank",rel:"noopener noreferrer"}},[t._v("Importing Data"),r("OutboundLink")],1),t._v("See  for an overview.")]),t._v(" "),r("h2",{attrs:{id:"classes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#classes","aria-hidden":"true"}},[t._v("#")]),t._v(" Classes")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/CheckpointInputPipelineHook",target:"_blank",rel:"noopener noreferrer"}},[t._v("class CheckpointInputPipelineHook"),r("OutboundLink")],1),t._v(": Checkpoints input pipeline state every N steps or seconds.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/CsvDataset",target:"_blank",rel:"noopener noreferrer"}},[t._v("class CsvDataset"),r("OutboundLink")],1),t._v(": A Dataset comprising lines from one or more CSV files.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/DistributeOptions",target:"_blank",rel:"noopener noreferrer"}},[t._v("class DistributeOptions"),r("OutboundLink")],1),t._v(": Represents options for distributed data processing.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/MapVectorizationOptions",target:"_blank",rel:"noopener noreferrer"}},[t._v("class MapVectorizationOptions"),r("OutboundLink")],1),t._v(": Represents options for the MapVectorization optimization.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/OptimizationOptions",target:"_blank",rel:"noopener noreferrer"}},[t._v("class OptimizationOptions"),r("OutboundLink")],1),t._v(": Represents options for dataset optimizations.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/Optional",target:"_blank",rel:"noopener noreferrer"}},[t._v("class Optional"),r("OutboundLink")],1),t._v(": Wraps a value that may/may not be present at runtime.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/RandomDataset",target:"_blank",rel:"noopener noreferrer"}},[t._v("class RandomDataset"),r("OutboundLink")],1),t._v(": A Dataset of pseudorandom values.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/Reducer",target:"_blank",rel:"noopener noreferrer"}},[t._v("class Reducer"),r("OutboundLink")],1),t._v(": A reducer is used for reducing a set of elements.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/SqlDataset",target:"_blank",rel:"noopener noreferrer"}},[t._v("class SqlDataset"),r("OutboundLink")],1),t._v(": A Dataset consisting of the results from a SQL query.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/StatsAggregator",target:"_blank",rel:"noopener noreferrer"}},[t._v("class StatsAggregator"),r("OutboundLink")],1),t._v(": A stateful resource that aggregates statistics from one or more iterators.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/StatsOptions",target:"_blank",rel:"noopener noreferrer"}},[t._v("class StatsOptions"),r("OutboundLink")],1),t._v(": Represents options for collecting dataset stats using StatsAggregator.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/TFRecordWriter",target:"_blank",rel:"noopener noreferrer"}},[t._v("class TFRecordWriter"),r("OutboundLink")],1),t._v(": Writes data to a TFRecord file.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/ThreadingOptions",target:"_blank",rel:"noopener noreferrer"}},[t._v("class ThreadingOptions"),r("OutboundLink")],1),t._v(": Represents options for dataset threading.")]),t._v(" "),r("h2",{attrs:{id:"functions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#functions","aria-hidden":"true"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/Counter",target:"_blank",rel:"noopener noreferrer"}},[t._v("Counter(...)"),r("OutboundLink")],1),t._v(": Creates a Dataset that counts from start in steps of size step.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/bucket_by_sequence_length",target:"_blank",rel:"noopener noreferrer"}},[t._v("bucket_by_sequence_length(...)"),r("OutboundLink")],1),t._v(": A transformation that buckets elements in a Dataset by length.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/bytes_produced_stats",target:"_blank",rel:"noopener noreferrer"}},[t._v("bytes_produced_stats(...)"),r("OutboundLink")],1),t._v(": Records the number of bytes produced by each element of the input dataset.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/cardinality",target:"_blank",rel:"noopener noreferrer"}},[t._v("cardinality(...)"),r("OutboundLink")],1),t._v(": Returns the cardinality of dataset, if known.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/choose_from_datasets",target:"_blank",rel:"noopener noreferrer"}},[t._v("choose_from_datasets(...)"),r("OutboundLink")],1),t._v(": Creates a dataset that deterministically chooses elements from datasets.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/copy_to_device",target:"_blank",rel:"noopener noreferrer"}},[t._v("copy_to_device(...)"),r("OutboundLink")],1),t._v(": A transformation that copies dataset elements to the given target_device.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/dense_to_sparse_batch",target:"_blank",rel:"noopener noreferrer"}},[t._v("dense_to_sparse_batch(...)"),r("OutboundLink")],1),t._v(": A transformation that batches ragged elements into tf.SparseTensors.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/enumerate_dataset",target:"_blank",rel:"noopener noreferrer"}},[t._v("enumerate_dataset(...)"),r("OutboundLink")],1),t._v(": A transformation that enumerates the elements of a dataset. (deprecated)")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/from_variant",target:"_blank",rel:"noopener noreferrer"}},[t._v("from_variant(...)"),r("OutboundLink")],1),t._v(": Constructs a dataset from the given variant and structure.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/get_next_as_optional",target:"_blank",rel:"noopener noreferrer"}},[t._v("get_next_as_optional(...)"),r("OutboundLink")],1),t._v(": Returns an Optional that contains the next value from the iterator.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/get_single_element",target:"_blank",rel:"noopener noreferrer"}},[t._v("get_single_element(...)"),r("OutboundLink")],1),t._v(": Returns the single element in dataset as a nested structure of tensors.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/get_structure",target:"_blank",rel:"noopener noreferrer"}},[t._v("get_structure(...)"),r("OutboundLink")],1),t._v(": Returns the type specification of an element of a Dataset or Iterator.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/group_by_reducer",target:"_blank",rel:"noopener noreferrer"}},[t._v("group_by_reducer(...)"),r("OutboundLink")],1),t._v(": A transformation that groups elements and performs a reduction.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/group_by_window",target:"_blank",rel:"noopener noreferrer"}},[t._v("group_by_window(...)"),r("OutboundLink")],1),t._v(": A transformation that groups windows of elements by key and reduces them.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/ignore_errors",target:"_blank",rel:"noopener noreferrer"}},[t._v("ignore_errors(...)"),r("OutboundLink")],1),t._v(": Creates a Dataset from another Dataset and silently ignores any errors.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/latency_stats",target:"_blank",rel:"noopener noreferrer"}},[t._v("latency_stats(...)"),r("OutboundLink")],1),t._v(": Records the latency of producing each element of the input dataset.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/make_batched_features_dataset",target:"_blank",rel:"noopener noreferrer"}},[t._v("make_batched_features_dataset(...)"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/make_csv_dataset",target:"_blank",rel:"noopener noreferrer"}},[t._v("make_csv_dataset(...)"),r("OutboundLink")],1),t._v(": Reads CSV files into a dataset.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/make_saveable_from_iterator",target:"_blank",rel:"noopener noreferrer"}},[t._v("make_saveable_from_iterator(...)"),r("OutboundLink")],1),t._v(": Returns a SaveableObject for saving/restoring iterator state using Saver.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/map_and_batch",target:"_blank",rel:"noopener noreferrer"}},[t._v("map_and_batch(...)"),r("OutboundLink")],1),t._v(": Fused implementation of map and batch. (deprecated)")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/parallel_interleave",target:"_blank",rel:"noopener noreferrer"}},[t._v("parallel_interleave(...)"),r("OutboundLink")],1),t._v(": A parallel version of the Dataset.interleave() transformation. (deprecated)")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/parse_example_dataset",target:"_blank",rel:"noopener noreferrer"}},[t._v("parse_example_dataset(...)"),r("OutboundLink")],1),t._v(": A transformation that parses Example protos into a dict of tensors.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/prefetch_to_device",target:"_blank",rel:"noopener noreferrer"}},[t._v("prefetch_to_device(...)"),r("OutboundLink")],1),t._v(": A transformation that prefetches dataset values to the given device.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/rejection_resample",target:"_blank",rel:"noopener noreferrer"}},[t._v("rejection_resample(...)"),r("OutboundLink")],1),t._v(": A transformation that resamples a dataset to achieve a target distribution.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/sample_from_datasets",target:"_blank",rel:"noopener noreferrer"}},[t._v("sample_from_datasets(...)"),r("OutboundLink")],1),t._v(": Samples elements at random from the datasets in datasets.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/scan",target:"_blank",rel:"noopener noreferrer"}},[t._v("scan(...)"),r("OutboundLink")],1),t._v(": A transformation that scans a function across an input dataset.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/shuffle_and_repeat",target:"_blank",rel:"noopener noreferrer"}},[t._v("shuffle_and_repeat(...)"),r("OutboundLink")],1),t._v(": Shuffles and repeats a Dataset returning a new permutation for each epoch. (deprecated)")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/take_while",target:"_blank",rel:"noopener noreferrer"}},[t._v("take_while(...)"),r("OutboundLink")],1),t._v(": A transformation that stops dataset iteration based on a predicate.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/to_variant",target:"_blank",rel:"noopener noreferrer"}},[t._v("to_variant(...)"),r("OutboundLink")],1),t._v(": Returns a variant representing the given dataset.")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/unbatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("unbatch(...)"),r("OutboundLink")],1),t._v(": Splits elements of a dataset into multiple elements on the batch dimension. (deprecated)")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/data/experimental/unique",target:"_blank",rel:"noopener noreferrer"}},[t._v("unique(...)"),r("OutboundLink")],1),t._v(": Creates a Dataset from another Dataset, discarding duplicates.")]),t._v(" "),r("h2",{attrs:{id:"other-members"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#other-members","aria-hidden":"true"}},[t._v("#")]),t._v(" Other Members")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("AUTOTUNE = -1")])]),t._v(" "),r("li",[r("code",[t._v("INFINITE_CARDINALITY = -1")])]),t._v(" "),r("li",[r("code",[t._v("UNKNOWN_CARDINALITY = -2")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);