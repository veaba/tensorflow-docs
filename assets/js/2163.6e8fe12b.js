(window.webpackJsonp=window.webpackJsonp||[]).push([[2163],{2351:function(e,t,s){"use strict";s.r(t);var a=s(0),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Defined in generated file: python/ops/gen_math_ops.py")]),e._v(" "),s("p",[e._v("Computes the maximum along segments of a tensor.")]),e._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tf.compat.v1.math.unsorted_segment_max")])]),e._v(" "),s("li",[s("code",[e._v("tf.compat.v1.unsorted_segment_max")])]),e._v(" "),s("li",[s("code",[e._v("tf.compat.v2.math.unsorted_segment_max")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.math.unsorted_segment_max(\n    data,\n    segment_ids,\n    num_segments,\n    name=None\n)\n")])])]),s("p",[s("a",{attrs:{href:"https://tensorflow.org/api_docs/python/tf/math#Segmentation",target:"_blank",rel:"noopener noreferrer"}},[e._v("the section on segmentation"),s("OutboundLink")],1),e._v("Read  for an explanation of segments.")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.tensorflow.org/api_docs/api_docs/python/math_ops#UnsortedSegmentSum",target:"_blank",rel:"noopener noreferrer"}},[e._v("(here)"),s("OutboundLink")],1),e._v("This operator is similar to the unsorted segment sum operator found . Instead of computing the sum over segments, it computes the maximum such that:")]),e._v(" "),s("p",[e._v("where max is over tuples j... such that segment_ids[j...] == i.")]),e._v(" "),s("p",[e._v("If the maximum is empty for a given segment ID i, it outputs the smallest possible value for the specific numeric type, output[i] = numeric_limits"),s("T",[e._v("::lowest().")])],1),e._v(" "),s("p",[e._v("If the given segment ID i is negative, then the corresponding value is dropped, and will not be included in the result.")]),e._v(" "),s("h4",{attrs:{id:"for-example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" c = tf.constant([[1,2,3,4], [5,6,7,8], [4,3,2,1]])\ntf.unsorted_segment_max(c, tf.constant([0, 1, 0]), num_segments=2)\n# ==> [[ 4,  3, 3, 4],\n#       [5,  6, 7, 8]]\n")])])]),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("data")]),e._v(": A "),s("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),s("code",[e._v("float32")]),e._v(", "),s("code",[e._v("float64")]),e._v(", "),s("code",[e._v("int32")]),e._v(", "),s("code",[e._v("uint8")]),e._v(", "),s("code",[e._v("int16")]),e._v(", "),s("code",[e._v("int8")]),e._v(", "),s("code",[e._v("int64")]),e._v(", "),s("code",[e._v("bfloat16")]),e._v(", "),s("code",[e._v("uint16")]),e._v(", "),s("code",[e._v("half")]),e._v(", "),s("code",[e._v("uint32")]),e._v(", "),s("code",[e._v("uint64")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("segment_ids")]),e._v(": A "),s("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),s("code",[e._v("int32")]),e._v(", "),s("code",[e._v("int64")]),e._v(". A tensor whose shape is a prefix of "),s("code",[e._v("data")]),e._v(".shape.")]),e._v(" "),s("li",[s("code",[e._v("num_segments")]),e._v(": A "),s("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),s("code",[e._v("int32")]),e._v(", "),s("code",[e._v("int64")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("name")]),e._v(": A "),s("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("A Tensor. Has the same type as data.")])])}),[],!1,null,null,null);t.default=n.exports}}]);