(window.webpackJsonp=window.webpackJsonp||[]).push([[320],{508:function(e,r,t){"use strict";t.r(r);var a=t(0),o=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Import router for absl.flags. See https://github.com/abseil/abseil-py.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[e._v("Module "),t("code",[e._v("tf.compat.v1.app.flags")])])]),e._v(" "),t("h2",{attrs:{id:"modules"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#modules","aria-hidden":"true"}},[e._v("#")]),e._v(" Modules")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/tf_decorator",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf_decorator"),t("OutboundLink")],1),e._v(" module: Base TFDecorator class and utility functions for working with decorators.")]),e._v(" "),t("h2",{attrs:{id:"classes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#classes","aria-hidden":"true"}},[e._v("#")]),e._v(" Classes")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/ArgumentParser",target:"_blank",rel:"noopener noreferrer"}},[e._v("class ArgumentParser"),t("OutboundLink")],1),e._v(": Base class used to parse and convert arguments.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/ArgumentSerializer",target:"_blank",rel:"noopener noreferrer"}},[e._v("class ArgumentSerializer"),t("OutboundLink")],1),e._v(": Base class for generating string representations of a flag value.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/BaseListParser",target:"_blank",rel:"noopener noreferrer"}},[e._v("class BaseListParser"),t("OutboundLink")],1),e._v(": Base class for a parser of lists of strings.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/BooleanFlag",target:"_blank",rel:"noopener noreferrer"}},[e._v("class BooleanFlag"),t("OutboundLink")],1),e._v(": Basic boolean flag.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/BooleanParser",target:"_blank",rel:"noopener noreferrer"}},[e._v("class BooleanParser"),t("OutboundLink")],1),e._v(": Parser of boolean values.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/CantOpenFlagFileError",target:"_blank",rel:"noopener noreferrer"}},[e._v("class CantOpenFlagFileError"),t("OutboundLink")],1),e._v(": Raised when flagfile fails to open.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/CsvListSerializer",target:"_blank",rel:"noopener noreferrer"}},[e._v("class CsvListSerializer"),t("OutboundLink")],1),e._v(": Base class for generating string representations of a flag value.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DuplicateFlagError",target:"_blank",rel:"noopener noreferrer"}},[e._v("class DuplicateFlagError"),t("OutboundLink")],1),e._v(": Raised if there is a flag naming conflict.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/EnumClassFlag",target:"_blank",rel:"noopener noreferrer"}},[e._v("class EnumClassFlag"),t("OutboundLink")],1),e._v(": Basic enum flag; its value is an enum class's member.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/EnumClassParser",target:"_blank",rel:"noopener noreferrer"}},[e._v("class EnumClassParser"),t("OutboundLink")],1),e._v(": Parser of an Enum class member.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/EnumFlag",target:"_blank",rel:"noopener noreferrer"}},[e._v("class EnumFlag"),t("OutboundLink")],1),e._v(": Basic enum flag; its value can be any string from list of enum_values.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/EnumParser",target:"_blank",rel:"noopener noreferrer"}},[e._v("class EnumParser"),t("OutboundLink")],1),e._v(": Parser of a string enum value (a string value from a given set).")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/Error",target:"_blank",rel:"noopener noreferrer"}},[e._v("class Error"),t("OutboundLink")],1),e._v(": The base class for all flags errors.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/Flag",target:"_blank",rel:"noopener noreferrer"}},[e._v("class Flag"),t("OutboundLink")],1),e._v(": Information about a command-line flag.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/FlagNameConflictsWithMethodError",target:"_blank",rel:"noopener noreferrer"}},[e._v("class FlagNameConflictsWithMethodError"),t("OutboundLink")],1),e._v(": Raised when a flag name conflicts with FlagValues methods.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/FlagValues",target:"_blank",rel:"noopener noreferrer"}},[e._v("class FlagValues"),t("OutboundLink")],1),e._v(": Registry of 'Flag' objects.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/FloatParser",target:"_blank",rel:"noopener noreferrer"}},[e._v("class FloatParser"),t("OutboundLink")],1),e._v(": Parser of floating point values.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/IllegalFlagValueError",target:"_blank",rel:"noopener noreferrer"}},[e._v("class IllegalFlagValueError"),t("OutboundLink")],1),e._v(": Raised when the flag command line argument is illegal.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/IntegerParser",target:"_blank",rel:"noopener noreferrer"}},[e._v("class IntegerParser"),t("OutboundLink")],1),e._v(": Parser of an integer value.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/ListParser",target:"_blank",rel:"noopener noreferrer"}},[e._v("class ListParser"),t("OutboundLink")],1),e._v(": Parser for a comma-separated list of strings.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/ListSerializer",target:"_blank",rel:"noopener noreferrer"}},[e._v("class ListSerializer"),t("OutboundLink")],1),e._v(": Base class for generating string representations of a flag value.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/MultiEnumClassFlag",target:"_blank",rel:"noopener noreferrer"}},[e._v("class MultiEnumClassFlag"),t("OutboundLink")],1),e._v(": A multi_enum_class flag.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/MultiFlag",target:"_blank",rel:"noopener noreferrer"}},[e._v("class MultiFlag"),t("OutboundLink")],1),e._v(": A flag that can appear multiple time on the command-line.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/UnparsedFlagAccessError",target:"_blank",rel:"noopener noreferrer"}},[e._v("class UnparsedFlagAccessError"),t("OutboundLink")],1),e._v(": Raised when accessing the flag value from unparsed FlagValues.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/UnrecognizedFlagError",target:"_blank",rel:"noopener noreferrer"}},[e._v("class UnrecognizedFlagError"),t("OutboundLink")],1),e._v(": Raised when a flag is unrecognized.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/ValidationError",target:"_blank",rel:"noopener noreferrer"}},[e._v("class ValidationError"),t("OutboundLink")],1),e._v(": Raised when flag validator constraint is not satisfied.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/WhitespaceSeparatedListParser",target:"_blank",rel:"noopener noreferrer"}},[e._v("class WhitespaceSeparatedListParser"),t("OutboundLink")],1),e._v(": Parser for a whitespace-separated list of strings.")]),e._v(" "),t("h2",{attrs:{id:"functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#functions","aria-hidden":"true"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE(...)"),t("OutboundLink")],1),e._v(": Registers a generic Flag object.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_alias",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_alias(...)"),t("OutboundLink")],1),e._v(": Defines an alias flag for an existing one.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_bool",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_bool(...)"),t("OutboundLink")],1),e._v(": Registers a boolean flag.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_bool",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_boolean(...)"),t("OutboundLink")],1),e._v(": Registers a boolean flag.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_enum",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_enum(...)"),t("OutboundLink")],1),e._v(": Registers a flag whose value can be any string from enum_values.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_enum_class",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_enum_class(...)"),t("OutboundLink")],1),e._v(": Registers a flag whose value can be the name of enum members.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_flag",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_flag(...)"),t("OutboundLink")],1),e._v(": Registers a 'Flag' object with a 'FlagValues' object.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_float",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_float(...)"),t("OutboundLink")],1),e._v(": Registers a flag whose value must be a float.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_integer",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_integer(...)"),t("OutboundLink")],1),e._v(": Registers a flag whose value must be an integer.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_list",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_list(...)"),t("OutboundLink")],1),e._v(": Registers a flag whose value is a comma-separated list of strings.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_multi",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_multi(...)"),t("OutboundLink")],1),e._v(": Registers a generic MultiFlag that parses its args with a given parser.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_multi_enum",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_multi_enum(...)"),t("OutboundLink")],1),e._v(": Registers a flag whose value can be a list strings from enum_values.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_multi_enum_class",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_multi_enum_class(...)"),t("OutboundLink")],1),e._v(": Registers a flag whose value can be a list of enum members.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_multi_float",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_multi_float(...)"),t("OutboundLink")],1),e._v(": Registers a flag whose value can be a list of arbitrary floats.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_multi_integer",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_multi_integer(...)"),t("OutboundLink")],1),e._v(": Registers a flag whose value can be a list of arbitrary integers.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_multi_string",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_multi_string(...)"),t("OutboundLink")],1),e._v(": Registers a flag whose value can be a list of any strings.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_spaceseplist",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_spaceseplist(...)"),t("OutboundLink")],1),e._v(": Registers a flag whose value is a whitespace-separated list of strings.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/DEFINE_string",target:"_blank",rel:"noopener noreferrer"}},[e._v("DEFINE_string(...)"),t("OutboundLink")],1),e._v(": Registers a flag whose value can be any string.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/adopt_module_key_flags",target:"_blank",rel:"noopener noreferrer"}},[e._v("adopt_module_key_flags(...)"),t("OutboundLink")],1),e._v(": Declares that all flags key to a module are key to the current module.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/declare_key_flag",target:"_blank",rel:"noopener noreferrer"}},[e._v("declare_key_flag(...)"),t("OutboundLink")],1),e._v(": Declares one flag as key to the current module.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/disclaim_key_flags",target:"_blank",rel:"noopener noreferrer"}},[e._v("disclaim_key_flags(...)"),t("OutboundLink")],1),e._v(": Declares that the current module will not define any more key flags.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/doc_to_help",target:"_blank",rel:"noopener noreferrer"}},[e._v("doc_to_help(...)"),t("OutboundLink")],1),e._v(": Takes a doc string and reformats it as help.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/flag_dict_to_args",target:"_blank",rel:"noopener noreferrer"}},[e._v("flag_dict_to_args(...)"),t("OutboundLink")],1),e._v(": Convert a dict of values into process call parameters.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/get_help_width",target:"_blank",rel:"noopener noreferrer"}},[e._v("get_help_width(...)"),t("OutboundLink")],1),e._v(": Returns the integer width of help lines that is used in TextWrap.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/mark_bool_flags_as_mutual_exclusive",target:"_blank",rel:"noopener noreferrer"}},[e._v("mark_bool_flags_as_mutual_exclusive(...)"),t("OutboundLink")],1),e._v(": Ensures that only one flag among flag_names is True.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/mark_flag_as_required",target:"_blank",rel:"noopener noreferrer"}},[e._v("mark_flag_as_required(...)"),t("OutboundLink")],1),e._v(": Ensures that flag is not None during program execution.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/mark_flags_as_mutual_exclusive",target:"_blank",rel:"noopener noreferrer"}},[e._v("mark_flags_as_mutual_exclusive(...)"),t("OutboundLink")],1),e._v(": Ensures that only one flag among flag_names is not None.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/mark_flags_as_required",target:"_blank",rel:"noopener noreferrer"}},[e._v("mark_flags_as_required(...)"),t("OutboundLink")],1),e._v(": Ensures that flags are not None during program execution.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/multi_flags_validator",target:"_blank",rel:"noopener noreferrer"}},[e._v("multi_flags_validator(...)"),t("OutboundLink")],1),e._v(": A function decorator for defining a multi-flag validator.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/register_multi_flags_validator",target:"_blank",rel:"noopener noreferrer"}},[e._v("register_multi_flags_validator(...)"),t("OutboundLink")],1),e._v(": Adds a constraint to multiple flags.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/register_validator",target:"_blank",rel:"noopener noreferrer"}},[e._v("register_validator(...)"),t("OutboundLink")],1),e._v(": Adds a constraint, which will be enforced during program execution.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/text_wrap",target:"_blank",rel:"noopener noreferrer"}},[e._v("text_wrap(...)"),t("OutboundLink")],1),e._v(": Wraps a given text to a maximum line length and returns it.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/flags/validator",target:"_blank",rel:"noopener noreferrer"}},[e._v("validator(...)"),t("OutboundLink")],1),e._v(": A function decorator for defining a flag validator.")]),e._v(" "),t("h2",{attrs:{id:"other-members"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#other-members","aria-hidden":"true"}},[e._v("#")]),e._v(" Other Members")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("FLAGS")])])])])}),[],!1,null,null,null);r.default=o.exports}}]);