(window.webpackJsonp=window.webpackJsonp||[]).push([[342],{529:function(e,a,t){"use strict";t.r(a);var r=t(0),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Injects a new target into a function built by make_decorator.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.app.flags.tf_decorator.rewrap")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.compat.v1.flags.tf_decorator.rewrap(\n    decorator_func,\n    previous_target,\n    new_target\n)\n")])])]),t("p",[e._v("This function allows replacing a function wrapped by decorator_func, assuming the decorator that wraps the function is written as described below.")]),e._v(" "),t("p",[e._v("The decorator function must use "),t("decorator",{attrs:{name:""}},[e._v("."),t("strong",[e._v("wrapped")]),e._v(" instead of the wrapped function that is normally used:")])],1),e._v(" "),t("h4",{attrs:{id:"example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example","aria-hidden":"true"}},[e._v("#")]),e._v(" Example:")]),e._v(" "),t("h1",{attrs:{id:"instead-of-this"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#instead-of-this","aria-hidden":"true"}},[e._v("#")]),e._v(" Instead of this:")]),e._v(" "),t("p",[e._v("def simple_parametrized_wrapper(*args, *kwds): return wrapped_fn(args, **kwds)")]),e._v(" "),t("p",[e._v("tf_decorator.make_decorator(simple_parametrized_wrapper, wrapped_fn)")]),e._v(" "),t("h1",{attrs:{id:"write-this"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#write-this","aria-hidden":"true"}},[e._v("#")]),e._v(" Write this:")]),e._v(" "),t("p",[e._v("def simple_parametrized_wrapper(*args, *kwds): return simple_parametrizedwrapper.wrapped_(args, **kwds)")]),e._v(" "),t("p",[e._v("tf_decorator.make_decorator(simple_parametrized_wrapper, wrapped_fn)")]),e._v(" "),t("p",[e._v("Note that this process modifies decorator_func.")]),e._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("decorator_func")]),e._v(": Callable returned by "),t("code",[e._v("wrap")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("previous_target")]),e._v(": Callable that needs to be replaced.")]),e._v(" "),t("li",[t("code",[e._v("new_target")]),e._v(": Callable to replace "),t("code",[e._v("previous_target")]),e._v(" with.")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("The updated decorator. If decorator_func is not a tf_decorator, new_target is returned.")])])}),[],!1,null,null,null);a.default=s.exports}}]);