(window.webpackJsonp=window.webpackJsonp||[]).push([[2355],{2543:function(e,t,s){"use strict";s.r(t);var n=s(0),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Computes the sum along sparse segments of a tensor divided by the sqrt(N).")]),e._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tf.compat.v2.sparse.segment_sqrt_n")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.sparse.segment_sqrt_n(\n    data,\n    indices,\n    segment_ids,\n    num_segments=None,\n    name=None\n)\n")])])]),s("p",[s("a",{attrs:{href:"https://tensorflow.org/api_docs/python/tf/math#Segmentation",target:"_blank",rel:"noopener noreferrer"}},[e._v("the section on segmentation"),s("OutboundLink")],1),e._v("Read  for an explanation of segments.")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/sparse/segment_mean",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.sparse.segment_mean"),s("OutboundLink")],1),e._v("Like , but instead of dividing by the size of the segment, N, divide by sqrt(N) instead.")]),e._v(" "),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("data")]),e._v(": A "),s("code",[e._v("Tensor")]),e._v(" with "),s("code",[e._v("data")]),e._v(" that will be assembled in the output.")]),e._v(" "),s("li",[s("code",[e._v("indices")]),e._v(": A 1-D "),s("code",[e._v("Tensor")]),e._v(" with "),s("code",[e._v("indices")]),e._v(" into "),s("code",[e._v("data")]),e._v(". Has same rank as "),s("code",[e._v("segment_ids")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("segment_ids")]),e._v(": A 1-D "),s("code",[e._v("Tensor")]),e._v(" with "),s("code",[e._v("indices")]),e._v(" into the output "),s("code",[e._v("Tensor")]),e._v(". Values should be sorted and can be repeated.")]),e._v(" "),s("li",[s("code",[e._v("num_segments")]),e._v(": An optional int32 scalar. Indicates the size of the output "),s("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("name")]),e._v(": A "),s("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("A tensor of the shape as data, except for dimension 0 which has size k, the number of segments specified via num_segments or inferred for the last element in segments_ids.")])])}),[],!1,null,null,null);t.default=a.exports}}]);