(window.webpackJsonp=window.webpackJsonp||[]).push([[589],{777:function(e,t,s){"use strict";s.r(t);var o=s(0),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Calculate per-step mean Intersection-Over-Union (mIOU).")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.compat.v1.metrics.mean_iou(\n    labels,\n    predictions,\n    num_classes,\n    weights=None,\n    metrics_collections=None,\n    updates_collections=None,\n    name=None\n)\n")])])]),s("p",[e._v("Mean Intersection-Over-Union is a common evaluation metric for semantic image segmentation, which first computes the IOU for each semantic class and then computes the average over classes. IOU is defined as follows: IOU = true_positive / (true_positive + false_positive + false_negative). The predictions are accumulated in a confusion matrix, weighted by weights, and mIOU is then calculated from it.")]),e._v(" "),s("p",[e._v("For estimation of the metric over a stream of data, the function creates an update_op operation that updates these variables and returns the mean_iou.")]),e._v(" "),s("p",[e._v("If weights is None, weights default to 1. Use weights of 0 to mask values.")]),e._v(" "),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("labels")]),e._v(": A "),s("code",[e._v("Tensor")]),e._v(" of ground truth "),s("code",[e._v("labels")]),e._v(" with shape [batch size] and of type "),s("code",[e._v("int32")]),e._v(" or "),s("code",[e._v("int64")]),e._v(". The tensor will be flattened if its rank > 1.")]),e._v(" "),s("li",[s("code",[e._v("predictions")]),e._v(": A "),s("code",[e._v("Tensor")]),e._v(" of prediction results for semantic "),s("code",[e._v("labels")]),e._v(", whose shape is [batch size] and type "),s("code",[e._v("int32")]),e._v(" or "),s("code",[e._v("int64")]),e._v(". The tensor will be flattened if its rank > 1.")]),e._v(" "),s("li",[s("code",[e._v("num_classes")]),e._v(": The possible number of "),s("code",[e._v("labels")]),e._v(" the prediction task can have. This value must be provided, since a confusion matrix of dimension = ["),s("code",[e._v("num_classes")]),e._v(", "),s("code",[e._v("num_classes")]),e._v("] will be allocated.")]),e._v(" "),s("li",[s("code",[e._v("weights")]),e._v(": Optional "),s("code",[e._v("Tensor")]),e._v(" whose rank is either 0, or the same rank as "),s("code",[e._v("labels")]),e._v(", and must be broadcastable to "),s("code",[e._v("labels")]),e._v(" (i.e., all dimensions must be either "),s("code",[e._v("1")]),e._v(", or the same as the corresponding "),s("code",[e._v("labels")]),e._v(" dimension).")]),e._v(" "),s("li",[s("code",[e._v("metrics_collections")]),e._v(": An optional list of collections that "),s("code",[e._v("mean_iou")]),e._v(" should be added to.")]),e._v(" "),s("li",[s("code",[e._v("updates_collections")]),e._v(": An optional list of collections "),s("code",[e._v("update_op")]),e._v(" should be added to.")]),e._v(" "),s("li",[s("code",[e._v("name")]),e._v(": An optional variable_scope "),s("code",[e._v("name")]),e._v(".")])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("mean_iou")]),e._v(": A "),s("code",[e._v("Tensor")]),e._v(" representing the mean intersection-over-union.")]),e._v(" "),s("li",[s("code",[e._v("update_op")]),e._v(": An operation that increments the confusion matrix.")])]),e._v(" "),s("h4",{attrs:{id:"raises"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("ValueError")]),e._v(": If "),s("code",[e._v("predictions")]),e._v(" and "),s("code",[e._v("labels")]),e._v(" have mismatched shapes, or if "),s("code",[e._v("weights")]),e._v(" is not "),s("code",[e._v("None")]),e._v(" and its shape doesn't match "),s("code",[e._v("predictions")]),e._v(", or if either "),s("code",[e._v("metrics_collections")]),e._v(" or "),s("code",[e._v("updates_collections")]),e._v(" are not a list or tuple.")]),e._v(" "),s("li",[s("code",[e._v("RuntimeError")]),e._v(": If eager execution is enabled.")])])])}),[],!1,null,null,null);t.default=a.exports}}]);