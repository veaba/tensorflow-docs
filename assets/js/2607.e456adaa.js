(window.webpackJsonp=window.webpackJsonp||[]).push([[2607],{2798:function(e,t,a){"use strict";a.r(t);var o=a(0),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Group tensors together.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v2.tuple")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.tuple(\n    tensors,\n    control_inputs=None,\n    name=None\n)\n")])])]),a("p",[e._v("This creates a tuple of "),a("code",[e._v("tensors")]),e._v(" with the same values as the "),a("code",[e._v("tensors")]),e._v(" argument, except that the value of each tensor is only returned after the values of all "),a("code",[e._v("tensors")]),e._v(" have been computed.\n"),a("code",[e._v("control_inputs")]),e._v(' contains additional ops that have to finish before this op finishes, but whose outputs are not returned.\nThis can be used as a "join" mechanism for parallel computations: all the argument tensors can be computed in parallel, but the values of any tensor returned by '),a("code",[e._v("tuple")]),e._v(" are only available after all the parallel computations are done.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/group",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.group"),a("OutboundLink")],1),e._v("See also  and tf.control_dependencies.")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tensors")]),e._v(": A list of "),a("code",[e._v("Tensor")]),e._v("s or "),a("code",[e._v("IndexedSlices")]),e._v(", some entries can be "),a("code",[e._v("None")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("control_inputs")]),e._v(": List of additional ops to finish before returning.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": (optional) A "),a("code",[e._v("name")]),e._v(" to use as a "),a("code",[e._v("name")]),e._v("_scope for the operation.")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("Same as "),a("code",[e._v("tensors")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If "),a("code",[e._v("tensors")]),e._v(" does not contain any "),a("code",[e._v("Tensor")]),e._v(" or "),a("code",[e._v("IndexedSlices")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("TypeError")]),e._v(": If "),a("code",[e._v("control_inputs")]),e._v(" is not a list of "),a("code",[e._v("Operation")]),e._v(" or "),a("code",[e._v("Tensor")]),e._v(" objects.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);