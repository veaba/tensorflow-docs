(window.webpackJsonp=window.webpackJsonp||[]).push([[509],{697:function(e,t,a){"use strict";a.r(t);var s=a(0),l=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Use Keras-style variable management.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.compat.v1.layers.experimental.set_keras_style()\n")])])]),a("p",[e._v("All tf.layers and tf RNN cells created after keras style ha been enabled use Keras-style variable management. Creating such layers with a scope= argument is disallowed, and reuse=True is disallowed.")]),e._v(" "),a("p",[e._v("The purpose of this function is to allow users of existing layers to slowly transition to Keras layers API without breaking existing functionality.")]),e._v(" "),a("p",[e._v("For more details, see the documentation for keras_style_scope.")]),e._v(" "),a("p",[e._v("Note, once keras style has been set, it is set globally for the entire program and cannot be unset.")]),e._v(" "),a("h4",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example","aria-hidden":"true"}},[e._v("#")]),e._v(" Example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' set_keras_style()\n\nmodel_1 = RNNModel(name="model_1")\nmodel_2 = RNNModel(name="model_2")\n\n# model_1 and model_2 are guaranteed to create their own variables.\noutput_1, next_state_1 = model_1(input, state)\noutput_2, next_state_2 = model_2(input, state)\n\nassert len(model_1.weights) > 0\nassert len(model_2.weights) > 0\nassert(model_1.weights != model_2.weights)\n')])])])])}),[],!1,null,null,null);t.default=l.exports}}]);