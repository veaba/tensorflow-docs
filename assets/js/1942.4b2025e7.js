(window.webpackJsonp=window.webpackJsonp||[]).push([[1942],{2133:function(e,a,s){"use strict";s.r(a);var t=s(0),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Generates a word rank-based probabilistic sampling table.")]),e._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tf.compat.v1.keras.preprocessing.sequence.make_sampling_table")])]),e._v(" "),s("li",[s("code",[e._v("tf.compat.v2.keras.preprocessing.sequence.make_sampling_table")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.keras.preprocessing.sequence.make_sampling_table(\n    size,\n    sampling_factor=1e-05\n)\n")])])]),s("p",[e._v("Used for generating the sampling_table argument for skipgrams. sampling_table[i] is the probability of sampling the word i-th most common word in a dataset (more common words should be sampled less frequently, for balance).")]),e._v(" "),s("p",[e._v("The sampling probabilities are generated according to the sampling distribution used in word2vec:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" p(word) = (min(1, sqrt(word_frequency / sampling_factor) /\n    (word_frequency / sampling_factor)))\n")])])]),s("p",[e._v("We assume that the word frequencies follow Zipf's law (s=1) to derive a numerical approximation of frequency(rank):")]),e._v(" "),s("p",[e._v("frequency(rank) ~ 1/(rank * (log(rank) + gamma) + 1/2 - 1/(12*rank)) where gamma is the Euler-Mascheroni constant.")]),e._v(" "),s("h1",{attrs:{id:"arguments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" size: Int, number of possible words to sample.\nsampling_factor: The sampling factor in the word2vec formula.\n")])])]),s("h1",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" A 1D Numpy array of length `size` where the ith entry\nis the probability that a word of rank i should be sampled.\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);