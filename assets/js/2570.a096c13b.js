(window.webpackJsonp=window.webpackJsonp||[]).push([[2570],{2761:function(e,v,_){"use strict";_.r(v);var t=_(0),a=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[e._v("Creates a sequence of numbers.")]),e._v(" "),_("h3",{attrs:{id:"aliases"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("tf.compat.v1.range")])]),e._v(" "),_("li",[_("code",[e._v("tf.compat.v2.range")])])]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" tf.range(limit, delta=1, dtype=None, name='range')\ntf.range(start, limit, delta=1, dtype=None, name='range')\n")])])]),_("h3",{attrs:{id:"used-in-the-guide"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("B")]),e._v("e"),_("code",[e._v("t")]),e._v("t"),_("code",[e._v("e")]),e._v("r"),_("code"),e._v("p"),_("code",[e._v("e")]),e._v("r"),_("code",[e._v("f")]),e._v("o"),_("code",[e._v("r")]),e._v("m"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("c")]),e._v("e"),_("code"),e._v("w"),_("code",[e._v("i")]),e._v("t"),_("code",[e._v("h")]),e._v(" "),_("code",[e._v("t")]),e._v("f"),_("code",[e._v(".")]),e._v("f"),_("code",[e._v("u")]),e._v("n"),_("code",[e._v("c")]),e._v("t"),_("code",[e._v("i")]),e._v("o"),_("code",[e._v("n")]),e._v(" "),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("d")]),e._v(" "),_("code",[e._v("A")]),e._v("u"),_("code",[e._v("t")]),e._v("o"),_("code",[e._v("G")]),e._v("r"),_("code",[e._v("a")]),e._v("p"),_("code",[e._v("h")])]),e._v(" "),_("li",[_("code",[e._v("T")]),e._v("r"),_("code",[e._v("a")]),e._v("i"),_("code",[e._v("n")]),e._v("i"),_("code",[e._v("n")]),e._v("g"),_("code"),e._v("c"),_("code",[e._v("h")]),e._v("e"),_("code",[e._v("c")]),e._v("k"),_("code",[e._v("p")]),e._v("o"),_("code",[e._v("i")]),e._v("n"),_("code",[e._v("t")]),e._v("s``")])]),e._v(" "),_("h3",{attrs:{id:"used-in-the-tutorials"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("B")]),e._v("e"),_("code",[e._v("t")]),e._v("t"),_("code",[e._v("e")]),e._v("r"),_("code"),e._v("p"),_("code",[e._v("e")]),e._v("r"),_("code",[e._v("f")]),e._v("o"),_("code",[e._v("r")]),e._v("m"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("c")]),e._v("e"),_("code"),e._v("w"),_("code",[e._v("i")]),e._v("t"),_("code",[e._v("h")]),e._v(" "),_("code",[e._v("t")]),e._v("f"),_("code",[e._v(".")]),e._v("f"),_("code",[e._v("u")]),e._v("n"),_("code",[e._v("c")]),e._v("t"),_("code",[e._v("i")]),e._v("o"),_("code",[e._v("n")])]),e._v(" "),_("li",[_("code",[e._v("D")]),e._v("e"),_("code",[e._v("e")]),e._v("p"),_("code",[e._v("D")]),e._v("r"),_("code",[e._v("e")]),e._v("a"),_("code",[e._v("m")])]),e._v(" "),_("li",[_("code",[e._v("T")]),e._v("r"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("s")]),e._v("f"),_("code",[e._v("o")]),e._v("r"),_("code",[e._v("m")]),e._v("e"),_("code",[e._v("r")]),e._v(" "),_("code",[e._v("m")]),e._v("o"),_("code",[e._v("d")]),e._v("e"),_("code",[e._v("l")]),e._v(" "),_("code",[e._v("f")]),e._v("o"),_("code",[e._v("r")]),e._v(" "),_("code",[e._v("l")]),e._v("a"),_("code",[e._v("n")]),e._v("g"),_("code",[e._v("u")]),e._v("a"),_("code",[e._v("g")]),e._v("e"),_("code"),e._v("u"),_("code",[e._v("n")]),e._v("d"),_("code",[e._v("e")]),e._v("r"),_("code",[e._v("s")]),e._v("t"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("d")]),e._v("i"),_("code",[e._v("n")]),e._v("g``\nCreates a sequence of numbers that begins at "),_("code",[e._v("start")]),e._v(" and extends by increments of "),_("code",[e._v("delta")]),e._v(" up to but not including "),_("code",[e._v("limit")]),e._v(".\nThe dtype of the resulting tensor is inferred from the inputs unless it is provided explicitly.\nLike the Python builtin "),_("code",[e._v("range")]),e._v(", "),_("code",[e._v("start")]),e._v(" defaults to 0, so that "),_("code",[e._v("range")]),e._v("(n) = "),_("code",[e._v("range")]),e._v("(0, n).")])]),e._v(" "),_("h4",{attrs:{id:"for-example"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" start = 3\nlimit = 18\ndelta = 3\ntf.range(start, limit, delta)  # [3, 6, 9, 12, 15]\n\nstart = 3\nlimit = 1\ndelta = -0.5\ntf.range(start, limit, delta)  # [3, 2.5, 2, 1.5]\n\nlimit = 5\ntf.range(limit)  # [0, 1, 2, 3, 4]\n")])])]),_("h4",{attrs:{id:"args"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("start")]),e._v(": A 0-D "),_("code",[e._v("Tensor")]),e._v(" (scalar). Acts as first entry in the range if "),_("code",[e._v("limit")]),e._v(" is not None; otherwise, acts as range "),_("code",[e._v("limit")]),e._v(" and first entry defaults to 0.")]),e._v(" "),_("li",[_("code",[e._v("limit")]),e._v(": A 0-D "),_("code",[e._v("Tensor")]),e._v(" (scalar). Upper "),_("code",[e._v("limit")]),e._v(" of sequence, exclusive. If None, defaults to the value of "),_("code",[e._v("start")]),e._v(" while the first entry of the range defaults to 0.")]),e._v(" "),_("li",[_("code",[e._v("delta")]),e._v(": A 0-D "),_("code",[e._v("Tensor")]),e._v(" (scalar). Number that increments "),_("code",[e._v("start")]),e._v(". Defaults to 1.")]),e._v(" "),_("li",[_("code",[e._v("dtype")]),e._v(": The type of the elements of the resulting tensor.")]),e._v(" "),_("li",[_("code",[e._v("name")]),e._v(": A "),_("code",[e._v("name")]),e._v(' for the operation. Defaults to "range".')])]),e._v(" "),_("h4",{attrs:{id:"returns"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),_("p",[e._v("An 1-D "),_("code",[e._v("Tensor")]),e._v(" of type "),_("code",[e._v("dtype")]),e._v(".")]),e._v(" "),_("h4",{attrs:{id:"numpy-compatibility"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#numpy-compatibility","aria-hidden":"true"}},[e._v("#")]),e._v(" Numpy Compatibility")]),e._v(" "),_("p",[e._v("Equivalent to np.arange")])])}),[],!1,null,null,null);v.default=a.exports}}]);