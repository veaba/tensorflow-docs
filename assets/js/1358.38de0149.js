(window.webpackJsonp=window.webpackJsonp||[]).push([[1358],{1549:function(e,a,t){"use strict";t.r(a);var s=t(0),o=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Randomly crops a tensor to a given size.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.image.random_crop")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v1.random_crop")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.image.random_crop")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.image.random_crop(\n    value,\n    size,\n    seed=None,\n    name=None\n)\n")])])]),t("h3",{attrs:{id:"used-in-the-tutorials"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("C")]),e._v("y"),t("code",[e._v("c")]),e._v("l"),t("code",[e._v("e")]),e._v("G"),t("code",[e._v("A")]),e._v("N``")]),e._v(" "),t("li",[t("code",[e._v("P")]),e._v("i"),t("code",[e._v("x")]),e._v("2"),t("code",[e._v("P")]),e._v("i"),t("code",[e._v("x")])])]),e._v(" "),t("p",[e._v("Slices a shape size portion out of value at a uniformly chosen offset. Requires value.shape >= size.")]),e._v(" "),t("p",[e._v("If a dimension should not be cropped, pass the full size of that dimension. For example, RGB images can be cropped with size = [crop_height, crop_width, 3].")]),e._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(": Input tensor to crop.")]),e._v(" "),t("li",[t("code",[e._v("size")]),e._v(": 1-D tensor with "),t("code",[e._v("size")]),e._v(" the rank of "),t("code",[e._v("value")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("seed")]),e._v(": Python integer. Used to create a random "),t("code",[e._v("seed")]),e._v(". See "),t("code",[e._v("tf.compat.v1.set_random_seed")]),e._v(" for behavior.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for this operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A cropped tensor of the same rank as value and shape size.")])])}),[],!1,null,null,null);a.default=o.exports}}]);