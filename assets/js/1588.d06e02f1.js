(window.webpackJsonp=window.webpackJsonp||[]).push([[1588],{1779:function(a,e,t){"use strict";t.r(e);var n=t(0),r=Object(n.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("Computes mean and std for batch then apply batch_normalization on batch.")]),a._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("tf.compat.v1.keras.backend.normalize_batch_in_training")])]),a._v(" "),t("li",[t("code",[a._v("tf.compat.v2.keras.backend.normalize_batch_in_training")])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" tf.keras.backend.normalize_batch_in_training(\n    x,\n    gamma,\n    beta,\n    reduction_axes,\n    epsilon=0.001\n)\n")])])]),t("h4",{attrs:{id:"arguments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[a._v("#")]),a._v(" Arguments:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("x")]),a._v(": Input tensor or variable.")]),a._v(" "),t("li",[t("code",[a._v("gamma")]),a._v(": Tensor by which to scale the input.")]),a._v(" "),t("li",[t("code",[a._v("beta")]),a._v(": Tensor with which to center the input.")]),a._v(" "),t("li",[t("code",[a._v("reduction_axes")]),a._v(": iterable of integers, a"),t("code",[a._v("x")]),a._v("es over which to normalize.")]),a._v(" "),t("li",[t("code",[a._v("epsilon")]),a._v(": Fuzz factor.")])]),a._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns:")]),a._v(" "),t("p",[a._v("A tuple length of 3, (normalized_tensor, mean, variance).")])])}),[],!1,null,null,null);e.default=r.exports}}]);