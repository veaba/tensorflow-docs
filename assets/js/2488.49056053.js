(window.webpackJsonp=window.webpackJsonp||[]).push([[2488],{2678:function(e,t,a){"use strict";a.r(t);var r=a(0),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"class-tensor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-tensor","aria-hidden":"true"}},[e._v("#")]),e._v(" Class Tensor")]),e._v(" "),a("p",[e._v("Represents one of the outputs of an "),a("code",[e._v("Operation")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[e._v("Class "),a("code",[e._v("tf.compat.v1.Tensor")])]),e._v(" "),a("li",[e._v("Class "),a("code",[e._v("tf.compat.v2.Tensor")]),e._v(" "),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/compat/v1/Session",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.Session"),a("OutboundLink")],1),e._v("A Tensor is a symbolic handle to one of the outputs of an Operation. It does not hold the values of that operation's output, but instead provides a means of computing those values in a TensorFlow .")])]),e._v(" "),a("p",[e._v("This class has two primary purposes:\nIn th"),a("code",[e._v("e")]),e._v(" following "),a("code",[e._v("e")]),e._v("xampl"),a("code",[e._v("e")]),e._v(", "),a("code",[e._v("c")]),e._v(", "),a("code",[e._v("d")]),e._v(", an"),a("code",[e._v("d")]),e._v(" "),a("code",[e._v("e")]),e._v(" ar"),a("code",[e._v("e")]),e._v(" symboli"),a("code",[e._v("c")]),e._v(" "),a("code",[e._v("Tensor")]),e._v(" obj"),a("code",[e._v("e``c")]),e._v("ts, wh"),a("code",[e._v("e")]),e._v("r"),a("code",[e._v("e")]),e._v("as "),a("code",[e._v("result")]),e._v(" is a numpy array that stor"),a("code",[e._v("e")]),e._v("s a "),a("code",[e._v("c")]),e._v("on"),a("code",[e._v("c")]),e._v("r"),a("code",[e._v("e")]),e._v("t"),a("code",[e._v("e")]),e._v(" valu"),a("code",[e._v("e")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" # Build a dataflow graph.\nc = tf.constant([[1.0, 2.0], [3.0, 4.0]])\nd = tf.constant([[1.0, 1.0], [0.0, 1.0]])\ne = tf.matmul(c, d)\n\n# Construct a `Session` to execute the graph.\nsess = tf.compat.v1.Session()\n\n# Execute the graph and store the value that `e` represents in `result`.\nresult = sess.run(e)\n")])])]),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("init")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L370-L395",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __init__(\n    op,\n    value_index,\n    dtype\n)\n")])])]),a("p",[e._v("Creates a new "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("op")]),e._v(": An "),a("code",[e._v("Operation")]),e._v(". "),a("code",[e._v("Operation")]),e._v(" that computes this tensor.")]),e._v(" "),a("li",[a("code",[e._v("value_index")]),e._v(": An "),a("code",[e._v("int")]),e._v(". Index of the "),a("code",[e._v("op")]),e._v("eration's endpo"),a("code",[e._v("int")]),e._v(" that produces this tensor.")]),e._v(" "),a("li",[a("code",[e._v("dtype")]),e._v(": A "),a("code",[e._v("DType")]),e._v(". Type of elements stored in this tensor.")])]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("TypeError")]),e._v(": If the op is not an "),a("code",[e._v("Operation")]),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),a("h3",{attrs:{id:"device"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#device","aria-hidden":"true"}},[e._v("#")]),e._v(" device")]),e._v(" "),a("p",[e._v("The name of the device on which this tensor will be produced, or None.")]),e._v(" "),a("h3",{attrs:{id:"dtype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dtype","aria-hidden":"true"}},[e._v("#")]),e._v(" dtype")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("DType")]),e._v(" of elements in this tensor.")]),e._v(" "),a("h3",{attrs:{id:"graph"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#graph","aria-hidden":"true"}},[e._v("#")]),e._v(" graph")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Graph")]),e._v(" that contains this tensor.")]),e._v(" "),a("h3",{attrs:{id:"name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#name","aria-hidden":"true"}},[e._v("#")]),e._v(" name")]),e._v(" "),a("p",[e._v("The string name of this tensor.")]),e._v(" "),a("h3",{attrs:{id:"op"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#op","aria-hidden":"true"}},[e._v("#")]),e._v(" op")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Operation")]),e._v(" that produces this tensor as an output.")]),e._v(" "),a("h3",{attrs:{id:"shape"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shape","aria-hidden":"true"}},[e._v("#")]),e._v(" shape")]),e._v(" "),a("p",[e._v("Returns the "),a("code",[e._v("TensorShape")]),e._v(" that represents the shape of this tensor.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/TensorShape",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.TensorShape"),a("OutboundLink")],1),e._v("The shape is computed using shape inference functions that are registered in the Op for each Operation. See  for more details of what a shape represents.")]),e._v(" "),a("p",[e._v("The inferred shape of a tensor is used to provide shape information without having to launch the graph in a session. This can be used for debugging, and providing early error messages. For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" c = tf.constant([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])\n\nprint(c.shape)\n==> TensorShape([Dimension(2), Dimension(3)])\n\nd = tf.constant([[1.0, 0.0], [0.0, 1.0], [1.0, 0.0], [0.0, 1.0]])\n\nprint(d.shape)\n==> TensorShape([Dimension(4), Dimension(2)])\n\n# Raises a ValueError, because `c` and `d` do not have compatible\n# inner dimensions.\ne = tf.matmul(c, d)\n\nf = tf.matmul(c, d, transpose_a=True, transpose_b=True)\n\nprint(f.shape)\n==> TensorShape([Dimension(3), Dimension(4)])\n")])])]),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/Tensor#set_shape",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tensor.set_shape()"),a("OutboundLink")],1),e._v("In some cases, the inferred shape may have unknown dimensions. If the caller has additional information about the values of these dimensions,  can be used to augment the inferred shape.")]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("TensorShape")]),e._v(" representing the shape of this tensor.")]),e._v(" "),a("h3",{attrs:{id:"value-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#value-index","aria-hidden":"true"}},[e._v("#")]),e._v(" value_index")]),e._v(" "),a("p",[e._v("The index of this tensor in the outputs of its "),a("code",[e._v("Operation")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),a("h3",{attrs:{id:"abs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abs","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("abs")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L245-L278",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __abs__(\n    x,\n    name=None\n)\n")])])]),a("p",[e._v("Computes the absolute value of a tensor.\nGiven a tensor of integer or floating-point values, this operation returns a tensor of the same type, where each element contains the absolute value of the corresponding element in the input.\nGiven a tensor "),a("code",[e._v("x")]),e._v(" of comple"),a("code",[e._v("x")]),e._v(" numbers, this operation returns a tensor of type "),a("code",[e._v("float32")]),e._v(" or "),a("code",[e._v("float64")]),e._v(" that is the absolute value of each element in "),a("code",[e._v("x")]),e._v(". All elements in "),a("code",[e._v("x")]),e._v(" must be comple"),a("code",[e._v("x")]),e._v(" numbers of the form\n. The absolute value is computed as\n. For e"),a("code",[e._v("x")]),e._v("ample:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" x = tf.constant([[-2.25 + 4.75j], [-3.25 + 5.75j]])\ntf.abs(x)  # [5.25594902, 6.60492229]\n")])])]),a("h4",{attrs:{id:"args-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" or "),a("code",[e._v("SparseTensor")]),e._v(" of type "),a("code",[e._v("float16")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("complex64")]),e._v(" or "),a("code",[e._v("complex128")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" or "),a("code",[e._v("SparseTensor")]),e._v(" the same size, type, and sparsity as "),a("code",[e._v("x")]),e._v(" with absolute values. Note, for "),a("code",[e._v("complex64")]),e._v(" or "),a("code",[e._v("complex128")]),e._v(" input, the returned "),a("code",[e._v("Tensor")]),e._v(" will be of type "),a("code",[e._v("float32")]),e._v(" or "),a("code",[e._v("float64")]),e._v(", respectively.\nIf "),a("code",[e._v("x")]),e._v(" is a "),a("code",[e._v("SparseTensor")]),e._v(", returns "),a("code",[e._v("SparseTensor")]),e._v("("),a("code",[e._v("x")]),e._v(".indices, tf.math.abs("),a("code",[e._v("x")]),e._v(".values, ...), "),a("code",[e._v("x")]),e._v(".dense_shape)")]),e._v(" "),a("h3",{attrs:{id:"add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("add")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __add__(\n    x,\n    y\n)\n")])])]),a("p",[e._v("Dispatches to add for strings and add_v2 for all other types.")]),e._v(" "),a("h3",{attrs:{id:"and"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#and","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("and")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __and__(\n    x,\n    y\n)\n")])])]),a("p",[e._v("Returns the truth value of x AND y element-wise.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/math/logical_and",target:"_blank",rel:"noopener noreferrer"}},[e._v("math.logical_and"),a("OutboundLink")],1),e._v("NOTE:  supports broadcasting. More about broadcasting here")]),e._v(" "),a("h4",{attrs:{id:"args-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of t"),a("code",[e._v("y")]),e._v("pe "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"bool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bool","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("bool")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L747-L765",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __bool__()\n")])])]),a("p",[e._v("Dummy method to prevent a tensor from being used as a Python "),a("code",[e._v("bool")]),e._v(".\nThis overload raises a "),a("code",[e._v("TypeError")]),e._v(" when the user inadvertently treats a "),a("code",[e._v("Tensor")]),e._v(" as a boolean (most commonly in an "),a("code",[e._v("if")]),e._v(" or "),a("code",[e._v("while")]),e._v(" statement), in code that was not converted by AutoGraph. For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" if tf.constant(True):  # Will raise.\n  # ...\n\nif tf.constant(5) < tf.constant(7):  # Will raise.\n  # ...\n")])])]),a("h4",{attrs:{id:"raises-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("p",[a("code",[e._v("TypeError")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"div"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#div","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("div")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __div__(\n    x,\n    y\n)\n")])])]),a("p",[e._v("Divide two values using Python 2 semantics.\nUsed for Tensor.div.")]),e._v(" "),a("h4",{attrs:{id:"args-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(" numerator of real numeric type.")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(" denominator of real numeric t"),a("code",[e._v("y")]),e._v("pe.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[a("code",[e._v("x / y")]),e._v(" returns the quotient of x and y.")]),e._v(" "),a("h3",{attrs:{id:"eq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eq","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("eq")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L1328-L1339",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __eq__(other)\n")])])]),a("p",[e._v("Compares two tensors element-wise for equality.")]),e._v(" "),a("h3",{attrs:{id:"floordiv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#floordiv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("floordiv")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __floordiv__(\n    x,\n    y\n)\n")])])]),a("p",[e._v("Divides "),a("code",[e._v("x / y")]),e._v(" elementwise, rounding toward the most negative integer.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/RaggedTensor#__div__",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.div(x,y)"),a("OutboundLink")],1),e._v("The same as  for integers, but uses tf.floor() for floating point arguments so that the result is always an integer (though possibly an integer represented as floating point). This op is generated by x // y floor division in Python 3 and in Python 2.7 with from "),a("strong",[e._v("future")]),e._v(" import division.")]),e._v(" "),a("p",[a("code",[e._v("x")]),e._v(" and "),a("code",[e._v("y")]),e._v(" must have the same t"),a("code",[e._v("y")]),e._v("pe, and the result will have the same t"),a("code",[e._v("y")]),e._v("pe as well.")]),e._v(" "),a("h4",{attrs:{id:"args-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(" numerator of real numeric type.")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(" denominator of real numeric t"),a("code",[e._v("y")]),e._v("pe.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[a("code",[e._v("x / y")]),e._v(" rounded down.")]),e._v(" "),a("h4",{attrs:{id:"raises-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("TypeError")]),e._v(": If the inputs are complex.")])]),e._v(" "),a("h3",{attrs:{id:"ge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ge","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("ge")])]),e._v(" "),a("p",[e._v("Defined in generated file: "),a("code",[e._v("python/ops/gen_math_ops.py")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __ge__(\n    x,\n    y,\n    name=None\n)\n")])])]),a("p",[e._v("Returns the truth value of (x >= y) element-wise.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/math/greater_equal",target:"_blank",rel:"noopener noreferrer"}},[e._v("math.greater_equal"),a("OutboundLink")],1),e._v("NOTE:  supports broadcasting. More about broadcasting here")]),e._v(" "),a("h4",{attrs:{id:"args-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("uint8")]),e._v(", "),a("code",[e._v("int16")]),e._v(", "),a("code",[e._v("int8")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("bfloat16")]),e._v(", "),a("code",[e._v("uint16")]),e._v(", "),a("code",[e._v("half")]),e._v(", "),a("code",[e._v("uint32")]),e._v(", "),a("code",[e._v("uint64")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must have the same t"),a("code",[e._v("y")]),e._v("pe as "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"getitem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getitem","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("getitem")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/array_ops.py#L669-L813",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __getitem__(\n    tensor,\n    slice_spec,\n    var=None\n)\n")])])]),a("p",[e._v("Overload for Tensor.getitem.\nThis operation extracts the specified region from the tensor. The notation is similar to NumPy with the restriction that currently only support basic indexing. That means that using a non-scalar tensor as input is not currently allowed.")]),e._v(" "),a("h4",{attrs:{id:"some-useful-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#some-useful-examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Some useful examples:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" # Strip leading and trailing 2 elements\nfoo = tf.constant([1,2,3,4,5,6])\nprint(foo[2:-2].eval())  # => [3,4]\n\n# Skip every other row and reverse the order of the columns\nfoo = tf.constant([[1,2,3], [4,5,6], [7,8,9]])\nprint(foo[::2,::-1].eval())  # => [[3,2,1], [9,8,7]]\n\n# Use scalar tensors as indices on both dimensions\nprint(foo[tf.constant(0), tf.constant(2)].eval())  # => 3\n\n# Insert another dimension\nfoo = tf.constant([[1,2,3], [4,5,6], [7,8,9]])\nprint(foo[tf.newaxis, :, :].eval()) # => [[[1,2,3], [4,5,6], [7,8,9]]]\nprint(foo[:, tf.newaxis, :].eval()) # => [[[1,2,3]], [[4,5,6]], [[7,8,9]]]\nprint(foo[:, :, tf.newaxis].eval()) # => [[[1],[2],[3]], [[4],[5],[6]],\n[[7],[8],[9]]]\n\n# Ellipses (3 equivalent operations)\nfoo = tf.constant([[1,2,3], [4,5,6], [7,8,9]])\nprint(foo[tf.newaxis, :, :].eval())  # => [[[1,2,3], [4,5,6], [7,8,9]]]\nprint(foo[tf.newaxis, ...].eval())  # => [[[1,2,3], [4,5,6], [7,8,9]]]\nprint(foo[tf.newaxis].eval())  # => [[[1,2,3], [4,5,6], [7,8,9]]]\n\n# Masks\nfoo = tf.constant([[1,2,3], [4,5,6], [7,8,9]])\nprint(foo[foo > 2].eval())  # => [3, 4, 5, 6, 7, 8, 9]\n")])])]),a("h4",{attrs:{id:"notes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notes","aria-hidden":"true"}},[e._v("#")]),e._v(" Notes:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.newaxis")]),e._v(" is "),a("code",[e._v("None")]),e._v(" as in NumPy.")]),e._v(" "),a("li",[e._v("An implicit ellipsis is placed at the end of the "),a("code",[e._v("slice_spec")])]),e._v(" "),a("li",[e._v("NumPy advanced indexing is currently not supported.")])]),e._v(" "),a("h4",{attrs:{id:"args-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tensor")]),e._v(": An ops.Tensor object.")]),e._v(" "),a("li",[a("code",[e._v("slice_spec")]),e._v(": The arguments to Tensor.getitem.")]),e._v(" "),a("li",[a("code",[e._v("var")]),e._v(": In the case of "),a("code",[e._v("var")]),e._v("iable slice assignment, the Variable object to slice (i.e. "),a("code",[e._v("tensor")]),e._v(" is the read-only view of this "),a("code",[e._v("var")]),e._v("iable).")])]),e._v(" "),a("h4",{attrs:{id:"returns-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v('The appropriate slice of "tensor", based on "slice_spec".')]),e._v(" "),a("h4",{attrs:{id:"raises-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If a slice range is negative size.")]),e._v(" "),a("li",[a("code",[e._v("TypeError")]),e._v(": If the slice indices aren't int, slice, ellipsis, tf.newaxis or scalar int32/int64 tensors.")])]),e._v(" "),a("h3",{attrs:{id:"gt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gt","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("gt")])]),e._v(" "),a("p",[e._v("Defined in generated file: "),a("code",[e._v("python/ops/gen_math_ops.py")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __gt__(\n    x,\n    y,\n    name=None\n)\n")])])]),a("p",[e._v("Returns the truth value of (x > y) element-wise.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/math/greater",target:"_blank",rel:"noopener noreferrer"}},[e._v("math.greater"),a("OutboundLink")],1),e._v("NOTE:  supports broadcasting. More about broadcasting here")]),e._v(" "),a("h4",{attrs:{id:"args-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("uint8")]),e._v(", "),a("code",[e._v("int16")]),e._v(", "),a("code",[e._v("int8")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("bfloat16")]),e._v(", "),a("code",[e._v("uint16")]),e._v(", "),a("code",[e._v("half")]),e._v(", "),a("code",[e._v("uint32")]),e._v(", "),a("code",[e._v("uint64")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must have the same t"),a("code",[e._v("y")]),e._v("pe as "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"invert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#invert","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("invert")])]),e._v(" "),a("p",[e._v("Defined in generated file: "),a("code",[e._v("python/ops/gen_math_ops.py")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __invert__(\n    x,\n    name=None\n)\n")])])]),a("p",[e._v("Returns the truth value of NOT x element-wise.")]),e._v(" "),a("h4",{attrs:{id:"args-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"iter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iter","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("iter")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L545-L558",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __iter__()\n")])])]),a("h3",{attrs:{id:"le"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#le","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("le")])]),e._v(" "),a("p",[e._v("Defined in generated file: "),a("code",[e._v("python/ops/gen_math_ops.py")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __le__(\n    x,\n    y,\n    name=None\n)\n")])])]),a("p",[e._v("Returns the truth value of (x <= y) element-wise.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/math/less_equal",target:"_blank",rel:"noopener noreferrer"}},[e._v("math.less_equal"),a("OutboundLink")],1),e._v("NOTE:  supports broadcasting. More about broadcasting here")]),e._v(" "),a("h4",{attrs:{id:"args-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("uint8")]),e._v(", "),a("code",[e._v("int16")]),e._v(", "),a("code",[e._v("int8")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("bfloat16")]),e._v(", "),a("code",[e._v("uint16")]),e._v(", "),a("code",[e._v("half")]),e._v(", "),a("code",[e._v("uint32")]),e._v(", "),a("code",[e._v("uint64")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must have the same t"),a("code",[e._v("y")]),e._v("pe as "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"len"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#len","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("len")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L738-L741",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __len__()\n")])])]),a("h3",{attrs:{id:"lt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lt","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("lt")])]),e._v(" "),a("p",[e._v("Defined in generated file: "),a("code",[e._v("python/ops/gen_math_ops.py")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __lt__(\n    x,\n    y,\n    name=None\n)\n")])])]),a("p",[e._v("Returns the truth value of (x < y) element-wise.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/math/less",target:"_blank",rel:"noopener noreferrer"}},[e._v("math.less"),a("OutboundLink")],1),e._v("NOTE:  supports broadcasting. More about broadcasting here")]),e._v(" "),a("h4",{attrs:{id:"args-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("uint8")]),e._v(", "),a("code",[e._v("int16")]),e._v(", "),a("code",[e._v("int8")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("bfloat16")]),e._v(", "),a("code",[e._v("uint16")]),e._v(", "),a("code",[e._v("half")]),e._v(", "),a("code",[e._v("uint32")]),e._v(", "),a("code",[e._v("uint64")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must have the same t"),a("code",[e._v("y")]),e._v("pe as "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"matmul"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matmul","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("matmul")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __matmul__(\n    x,\n    y\n)\n")])])]),a("p",[e._v("Multiplies m"),a("code",[e._v("a")]),e._v("trix "),a("code",[e._v("a")]),e._v(" "),a("code",[e._v("b")]),e._v("y m"),a("code",[e._v("a")]),e._v("trix "),a("code",[e._v("b")]),e._v(", producing "),a("code",[e._v("a")]),e._v(" * "),a("code",[e._v("b")]),e._v(".\nThe inputs must, following any transpositions, be tensors of rank >= 2 where the inner 2 dimensions specify valid matrix multiplication arguments, and any further outer dimensions match.\nBoth matrices must be of the same type. The supported types are: "),a("code",[e._v("float16")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", "),a("code",[e._v("complex128")]),e._v(".\nEither matrix can be transposed or adjointed (conjugated and transposed) on the fly by setting one of the corresponding flag to "),a("code",[e._v("True")]),e._v(". These are "),a("code",[e._v("False")]),e._v(" by default.\nIf one or both of the matrices contain a lot of zeros, a more efficient multiplication algorithm can be used by setting the corresponding "),a("code",[e._v("a_is_sparse")]),e._v(" or "),a("code",[e._v("b_is_sparse")]),e._v(" flag to "),a("code",[e._v("True")]),e._v(". These are "),a("code",[e._v("False")]),e._v(" by default. This optimization is only available for plain matrices (rank-2 tensors) with datatypes "),a("code",[e._v("bfloat16")]),e._v(" or "),a("code",[e._v("float32")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"for-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" # 2-D tensor `a`\n# [[1, 2, 3],\n#  [4, 5, 6]]\na = tf.constant([1, 2, 3, 4, 5, 6], shape=[2, 3])\n\n# 2-D tensor `b`\n# [[ 7,  8],\n#  [ 9, 10],\n#  [11, 12]]\nb = tf.constant([7, 8, 9, 10, 11, 12], shape=[3, 2])\n\n# `a` * `b`\n# [[ 58,  64],\n#  [139, 154]]\nc = tf.matmul(a, b)\n\n\n# 3-D tensor `a`\n# [[[ 1,  2,  3],\n#   [ 4,  5,  6]],\n#  [[ 7,  8,  9],\n#   [10, 11, 12]]]\na = tf.constant(np.arange(1, 13, dtype=np.int32),\n                shape=[2, 2, 3])\n\n# 3-D tensor `b`\n# [[[13, 14],\n#   [15, 16],\n#   [17, 18]],\n#  [[19, 20],\n#   [21, 22],\n#   [23, 24]]]\nb = tf.constant(np.arange(13, 25, dtype=np.int32),\n                shape=[2, 3, 2])\n\n# `a` * `b`\n# [[[ 94, 100],\n#   [229, 244]],\n#  [[508, 532],\n#   [697, 730]]]\nc = tf.matmul(a, b)\n\n# Since python >= 3.5 the @ operator is supported (see PEP 465).\n# In TensorFlow, it simply calls the `tf.matmul()` function, so the\n# following lines are equivalent:\nd = a @ b @ [[10.], [11.]]\nd = tf.matmul(tf.matmul(a, b), [[10.], [11.]])\n")])])]),a("h4",{attrs:{id:"args-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("a")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("float16")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", "),a("code",[e._v("complex128")]),e._v(" "),a("code",[e._v("a")]),e._v("nd r"),a("code",[e._v("a")]),e._v("nk > 1.")]),e._v(" "),a("li",[a("code",[e._v("b")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(" with s"),a("code",[e._v("a")]),e._v("me type "),a("code",[e._v("a")]),e._v("nd r"),a("code",[e._v("a")]),e._v("nk "),a("code",[e._v("a")]),e._v("s "),a("code",[e._v("a")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("transpose_a")]),e._v(": If "),a("code",[e._v("True")]),e._v(", "),a("code",[e._v("a")]),e._v(" is tr"),a("code",[e._v("a")]),e._v("nsposed "),a("code",[e._v("b")]),e._v("efore multiplic"),a("code",[e._v("a")]),e._v("tion.")]),e._v(" "),a("li",[a("code",[e._v("transpose_b")]),e._v(": If "),a("code",[e._v("True")]),e._v(", "),a("code",[e._v("b")]),e._v(" is tr"),a("code",[e._v("a")]),e._v("nsposed "),a("code",[e._v("b")]),e._v("efore multiplic"),a("code",[e._v("a")]),e._v("tion.")]),e._v(" "),a("li",[a("code",[e._v("a")]),e._v("djoint_"),a("code",[e._v("a")]),e._v(": If "),a("code",[e._v("True")]),e._v(", "),a("code",[e._v("a")]),e._v(" is conjug"),a("code",[e._v("a")]),e._v("ted "),a("code",[e._v("a")]),e._v("nd tr"),a("code",[e._v("a")]),e._v("nsposed "),a("code",[e._v("b")]),e._v("efore multiplic"),a("code",[e._v("a")]),e._v("tion.")]),e._v(" "),a("li",[a("code",[e._v("a")]),e._v("djoint_"),a("code",[e._v("b")]),e._v(": If "),a("code",[e._v("True")]),e._v(", "),a("code",[e._v("b")]),e._v(" is conjug"),a("code",[e._v("a")]),e._v("ted "),a("code",[e._v("a")]),e._v("nd tr"),a("code",[e._v("a")]),e._v("nsposed "),a("code",[e._v("b")]),e._v("efore multiplic"),a("code",[e._v("a")]),e._v("tion.")]),e._v(" "),a("li",[a("code",[e._v("a")]),e._v("_is_sp"),a("code",[e._v("a")]),e._v("rse: If "),a("code",[e._v("True")]),e._v(", "),a("code",[e._v("a")]),e._v(" is tre"),a("code",[e._v("a")]),e._v("ted "),a("code",[e._v("a")]),e._v("s "),a("code",[e._v("a")]),e._v(" sp"),a("code",[e._v("a")]),e._v("rse m"),a("code",[e._v("a")]),e._v("trix.")]),e._v(" "),a("li",[a("code",[e._v("b")]),e._v("_is_sp"),a("code",[e._v("a")]),e._v("rse: If "),a("code",[e._v("True")]),e._v(", "),a("code",[e._v("b")]),e._v(" is tre"),a("code",[e._v("a")]),e._v("ted "),a("code",[e._v("a")]),e._v("s "),a("code",[e._v("a")]),e._v(" sp"),a("code",[e._v("a")]),e._v("rse m"),a("code",[e._v("a")]),e._v("trix.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": N"),a("code",[e._v("a")]),e._v("me for the oper"),a("code",[e._v("a")]),e._v("tion (option"),a("code",[e._v("a")]),e._v("l).")])]),e._v(" "),a("h4",{attrs:{id:"returns-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" of the s"),a("code",[e._v("a")]),e._v("me type "),a("code",[e._v("a")]),e._v("s "),a("code",[e._v("a")]),e._v(" "),a("code",[e._v("a")]),e._v("nd "),a("code",[e._v("b")]),e._v(" where e"),a("code",[e._v("a")]),e._v("ch inner-most m"),a("code",[e._v("a")]),e._v("trix is the product of the corresponding m"),a("code",[e._v("a")]),e._v("trices in "),a("code",[e._v("a")]),e._v(" "),a("code",[e._v("a")]),e._v("nd "),a("code",[e._v("b")]),e._v(", e.g. if "),a("code",[e._v("a")]),e._v("ll tr"),a("code",[e._v("a")]),e._v("nspose or "),a("code",[e._v("a")]),e._v("djoint "),a("code",[e._v("a")]),e._v("ttri"),a("code",[e._v("b")]),e._v("utes "),a("code",[e._v("a")]),e._v("re "),a("code",[e._v("False")]),e._v(":\n"),a("code",[e._v("output")]),e._v("[..., i, j] = sum_k ("),a("code",[e._v("a")]),e._v("[..., i, k] * "),a("code",[e._v("b")]),e._v("[..., k, j]), for "),a("code",[e._v("a")]),e._v("ll indices i, j.")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Note")]),e._v(": This is matrix product, not element-wise product.")])]),e._v(" "),a("h4",{attrs:{id:"raises-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If transpose_a and adjoint_a, or transpose_b and adjoint_b are both set to True.")])]),e._v(" "),a("h3",{attrs:{id:"mod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mod","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("mod")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __mod__(\n    x,\n    y\n)\n")])])]),a("p",[e._v("Returns element-wise remainder of division. When "),a("code",[e._v("x < 0")]),e._v(" xor "),a("code",[e._v("y < 0")]),e._v(" is\ntrue, this follows Python semantics in that the result here is consistent with a flooring divide. E.g. floor(x / y) * y + mod(x, y) = x.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/math/floormod",target:"_blank",rel:"noopener noreferrer"}},[e._v("math.floormod"),a("OutboundLink")],1),e._v("NOTE:  supports broadcasting. More about broadcasting here")]),e._v(" "),a("h4",{attrs:{id:"args-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("bfloat16")]),e._v(", "),a("code",[e._v("half")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must have the same t"),a("code",[e._v("y")]),e._v("pe as "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(". Has the same type as "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"mul"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mul","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("mul")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __mul__(\n    x,\n    y\n)\n")])])]),a("p",[e._v('Dispatches cwise mul for "DenseDense" and "DenseSparse".')]),e._v(" "),a("h3",{attrs:{id:"ne"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ne","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("ne")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L1342-L1351",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __ne__(other)\n")])])]),a("p",[e._v("Compares two tensors element-wise for equality.")]),e._v(" "),a("h3",{attrs:{id:"neg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#neg","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("neg")])]),e._v(" "),a("p",[e._v("Defined in generated file: "),a("code",[e._v("python/ops/gen_math_ops.py")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __neg__(\n    x,\n    name=None\n)\n")])])]),a("p",[e._v("Computes numerical negative value element-wise.\nI.e.,\n.")]),e._v(" "),a("h4",{attrs:{id:"args-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("bfloat16")]),e._v(", "),a("code",[e._v("half")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", "),a("code",[e._v("complex128")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(". Has the same type as "),a("code",[e._v("x")]),e._v(".\nIf "),a("code",[e._v("x")]),e._v(" is a "),a("code",[e._v("SparseTensor")]),e._v(", returns "),a("code",[e._v("SparseTensor")]),e._v("("),a("code",[e._v("x")]),e._v(".indices, tf.math.negative("),a("code",[e._v("x")]),e._v(".values, ...), "),a("code",[e._v("x")]),e._v(".dense_shape)")]),e._v(" "),a("h3",{attrs:{id:"nonzero"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nonzero","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("nonzero")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L767-L775",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __nonzero__()\n")])])]),a("p",[e._v("Dummy method to prevent a tensor from being used as a Python "),a("code",[e._v("bool")]),e._v(".\nThis is the Python 2.x counterpart to "),a("code",[e._v("__bool__")]),e._v("() above.")]),e._v(" "),a("h4",{attrs:{id:"raises-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("p",[a("code",[e._v("TypeError")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"or"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#or","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("or")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __or__(\n    x,\n    y\n)\n")])])]),a("p",[e._v("Returns the truth value of x OR y element-wise.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/math/logical_or",target:"_blank",rel:"noopener noreferrer"}},[e._v("math.logical_or"),a("OutboundLink")],1),e._v("NOTE:  supports broadcasting. More about broadcasting here")]),e._v(" "),a("h4",{attrs:{id:"args-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of t"),a("code",[e._v("y")]),e._v("pe "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"pow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pow","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("pow")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __pow__(\n    x,\n    y\n)\n")])])]),a("p",[e._v("Computes the power of one value to another.\nGiven a tensor "),a("code",[e._v("x")]),e._v(" and a tensor "),a("code",[e._v("y")]),e._v(", this operation computes\nfor corresponding elements in "),a("code",[e._v("x")]),e._v(" and "),a("code",[e._v("y")]),e._v(". For e"),a("code",[e._v("x")]),e._v("ample:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" x = tf.constant([[2, 2], [3, 3]])\ny = tf.constant([[8, 16], [2, 3]])\ntf.pow(x, y)  # [[256, 65536], [9, 27]]\n")])])]),a("h4",{attrs:{id:"args-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("float16")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", or "),a("code",[e._v("complex128")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of t"),a("code",[e._v("y")]),e._v("pe "),a("code",[e._v("float16")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", or "),a("code",[e._v("complex128")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"radd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#radd","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("radd")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __radd__(\n    y,\n    x\n)\n")])])]),a("p",[e._v("Dispatches to add for strings and add_v2 for all other types.")]),e._v(" "),a("h3",{attrs:{id:"rand"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rand","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("rand")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __rand__(\n    y,\n    x\n)\n")])])]),a("p",[e._v("Returns the truth value of x AND y element-wise.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/math/logical_and",target:"_blank",rel:"noopener noreferrer"}},[e._v("math.logical_and"),a("OutboundLink")],1),e._v("NOTE:  supports broadcasting. More about broadcasting here")]),e._v(" "),a("h4",{attrs:{id:"args-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-17","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of t"),a("code",[e._v("y")]),e._v("pe "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-17","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"rdiv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rdiv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("rdiv")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __rdiv__(\n    y,\n    x\n)\n")])])]),a("p",[e._v("Divide two values using Python 2 semantics.\nUsed for Tensor.div.")]),e._v(" "),a("h4",{attrs:{id:"args-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-18","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(" numerator of real numeric type.")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(" denominator of real numeric t"),a("code",[e._v("y")]),e._v("pe.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-18","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[a("code",[e._v("x / y")]),e._v(" returns the quotient of x and y.")]),e._v(" "),a("h3",{attrs:{id:"rfloordiv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rfloordiv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("rfloordiv")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __rfloordiv__(\n    y,\n    x\n)\n")])])]),a("p",[e._v("Divides "),a("code",[e._v("x / y")]),e._v(" elementwise, rounding toward the most negative integer.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/RaggedTensor#__div__",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.div(x,y)"),a("OutboundLink")],1),e._v("The same as  for integers, but uses tf.floor() for floating point arguments so that the result is always an integer (though possibly an integer represented as floating point). This op is generated by x // y floor division in Python 3 and in Python 2.7 with from "),a("strong",[e._v("future")]),e._v(" import division.")]),e._v(" "),a("p",[a("code",[e._v("x")]),e._v(" and "),a("code",[e._v("y")]),e._v(" must have the same t"),a("code",[e._v("y")]),e._v("pe, and the result will have the same t"),a("code",[e._v("y")]),e._v("pe as well.")]),e._v(" "),a("h4",{attrs:{id:"args-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-19","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(" numerator of real numeric type.")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(" denominator of real numeric t"),a("code",[e._v("y")]),e._v("pe.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-19","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[a("code",[e._v("x / y")]),e._v(" rounded down.")]),e._v(" "),a("h4",{attrs:{id:"raises-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("TypeError")]),e._v(": If the inputs are complex.")])]),e._v(" "),a("h3",{attrs:{id:"rmatmul"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rmatmul","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("rmatmul")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __rmatmul__(\n    y,\n    x\n)\n")])])]),a("p",[e._v("Multiplies m"),a("code",[e._v("a")]),e._v("trix "),a("code",[e._v("a")]),e._v(" "),a("code",[e._v("b")]),e._v("y m"),a("code",[e._v("a")]),e._v("trix "),a("code",[e._v("b")]),e._v(", producing "),a("code",[e._v("a")]),e._v(" * "),a("code",[e._v("b")]),e._v(".\nThe inputs must, following any transpositions, be tensors of rank >= 2 where the inner 2 dimensions specify valid matrix multiplication arguments, and any further outer dimensions match.\nBoth matrices must be of the same type. The supported types are: "),a("code",[e._v("float16")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", "),a("code",[e._v("complex128")]),e._v(".\nEither matrix can be transposed or adjointed (conjugated and transposed) on the fly by setting one of the corresponding flag to "),a("code",[e._v("True")]),e._v(". These are "),a("code",[e._v("False")]),e._v(" by default.\nIf one or both of the matrices contain a lot of zeros, a more efficient multiplication algorithm can be used by setting the corresponding "),a("code",[e._v("a_is_sparse")]),e._v(" or "),a("code",[e._v("b_is_sparse")]),e._v(" flag to "),a("code",[e._v("True")]),e._v(". These are "),a("code",[e._v("False")]),e._v(" by default. This optimization is only available for plain matrices (rank-2 tensors) with datatypes "),a("code",[e._v("bfloat16")]),e._v(" or "),a("code",[e._v("float32")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"for-example-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-example-2","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" # 2-D tensor `a`\n# [[1, 2, 3],\n#  [4, 5, 6]]\na = tf.constant([1, 2, 3, 4, 5, 6], shape=[2, 3])\n\n# 2-D tensor `b`\n# [[ 7,  8],\n#  [ 9, 10],\n#  [11, 12]]\nb = tf.constant([7, 8, 9, 10, 11, 12], shape=[3, 2])\n\n# `a` * `b`\n# [[ 58,  64],\n#  [139, 154]]\nc = tf.matmul(a, b)\n\n\n# 3-D tensor `a`\n# [[[ 1,  2,  3],\n#   [ 4,  5,  6]],\n#  [[ 7,  8,  9],\n#   [10, 11, 12]]]\na = tf.constant(np.arange(1, 13, dtype=np.int32),\n                shape=[2, 2, 3])\n\n# 3-D tensor `b`\n# [[[13, 14],\n#   [15, 16],\n#   [17, 18]],\n#  [[19, 20],\n#   [21, 22],\n#   [23, 24]]]\nb = tf.constant(np.arange(13, 25, dtype=np.int32),\n                shape=[2, 3, 2])\n\n# `a` * `b`\n# [[[ 94, 100],\n#   [229, 244]],\n#  [[508, 532],\n#   [697, 730]]]\nc = tf.matmul(a, b)\n\n# Since python >= 3.5 the @ operator is supported (see PEP 465).\n# In TensorFlow, it simply calls the `tf.matmul()` function, so the\n# following lines are equivalent:\nd = a @ b @ [[10.], [11.]]\nd = tf.matmul(tf.matmul(a, b), [[10.], [11.]])\n")])])]),a("h4",{attrs:{id:"args-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-20","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("a")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("float16")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", "),a("code",[e._v("complex128")]),e._v(" "),a("code",[e._v("a")]),e._v("nd r"),a("code",[e._v("a")]),e._v("nk > 1.")]),e._v(" "),a("li",[a("code",[e._v("b")]),e._v(": "),a("code",[e._v("Tensor")]),e._v(" with s"),a("code",[e._v("a")]),e._v("me type "),a("code",[e._v("a")]),e._v("nd r"),a("code",[e._v("a")]),e._v("nk "),a("code",[e._v("a")]),e._v("s "),a("code",[e._v("a")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("transpose_a")]),e._v(": If "),a("code",[e._v("True")]),e._v(", "),a("code",[e._v("a")]),e._v(" is tr"),a("code",[e._v("a")]),e._v("nsposed "),a("code",[e._v("b")]),e._v("efore multiplic"),a("code",[e._v("a")]),e._v("tion.")]),e._v(" "),a("li",[a("code",[e._v("transpose_b")]),e._v(": If "),a("code",[e._v("True")]),e._v(", "),a("code",[e._v("b")]),e._v(" is tr"),a("code",[e._v("a")]),e._v("nsposed "),a("code",[e._v("b")]),e._v("efore multiplic"),a("code",[e._v("a")]),e._v("tion.")]),e._v(" "),a("li",[a("code",[e._v("a")]),e._v("djoint_"),a("code",[e._v("a")]),e._v(": If "),a("code",[e._v("True")]),e._v(", "),a("code",[e._v("a")]),e._v(" is conjug"),a("code",[e._v("a")]),e._v("ted "),a("code",[e._v("a")]),e._v("nd tr"),a("code",[e._v("a")]),e._v("nsposed "),a("code",[e._v("b")]),e._v("efore multiplic"),a("code",[e._v("a")]),e._v("tion.")]),e._v(" "),a("li",[a("code",[e._v("a")]),e._v("djoint_"),a("code",[e._v("b")]),e._v(": If "),a("code",[e._v("True")]),e._v(", "),a("code",[e._v("b")]),e._v(" is conjug"),a("code",[e._v("a")]),e._v("ted "),a("code",[e._v("a")]),e._v("nd tr"),a("code",[e._v("a")]),e._v("nsposed "),a("code",[e._v("b")]),e._v("efore multiplic"),a("code",[e._v("a")]),e._v("tion.")]),e._v(" "),a("li",[a("code",[e._v("a")]),e._v("_is_sp"),a("code",[e._v("a")]),e._v("rse: If "),a("code",[e._v("True")]),e._v(", "),a("code",[e._v("a")]),e._v(" is tre"),a("code",[e._v("a")]),e._v("ted "),a("code",[e._v("a")]),e._v("s "),a("code",[e._v("a")]),e._v(" sp"),a("code",[e._v("a")]),e._v("rse m"),a("code",[e._v("a")]),e._v("trix.")]),e._v(" "),a("li",[a("code",[e._v("b")]),e._v("_is_sp"),a("code",[e._v("a")]),e._v("rse: If "),a("code",[e._v("True")]),e._v(", "),a("code",[e._v("b")]),e._v(" is tre"),a("code",[e._v("a")]),e._v("ted "),a("code",[e._v("a")]),e._v("s "),a("code",[e._v("a")]),e._v(" sp"),a("code",[e._v("a")]),e._v("rse m"),a("code",[e._v("a")]),e._v("trix.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": N"),a("code",[e._v("a")]),e._v("me for the oper"),a("code",[e._v("a")]),e._v("tion (option"),a("code",[e._v("a")]),e._v("l).")])]),e._v(" "),a("h4",{attrs:{id:"returns-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-20","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" of the s"),a("code",[e._v("a")]),e._v("me type "),a("code",[e._v("a")]),e._v("s "),a("code",[e._v("a")]),e._v(" "),a("code",[e._v("a")]),e._v("nd "),a("code",[e._v("b")]),e._v(" where e"),a("code",[e._v("a")]),e._v("ch inner-most m"),a("code",[e._v("a")]),e._v("trix is the product of the corresponding m"),a("code",[e._v("a")]),e._v("trices in "),a("code",[e._v("a")]),e._v(" "),a("code",[e._v("a")]),e._v("nd "),a("code",[e._v("b")]),e._v(", e.g. if "),a("code",[e._v("a")]),e._v("ll tr"),a("code",[e._v("a")]),e._v("nspose or "),a("code",[e._v("a")]),e._v("djoint "),a("code",[e._v("a")]),e._v("ttri"),a("code",[e._v("b")]),e._v("utes "),a("code",[e._v("a")]),e._v("re "),a("code",[e._v("False")]),e._v(":\n"),a("code",[e._v("output")]),e._v("[..., i, j] = sum_k ("),a("code",[e._v("a")]),e._v("[..., i, k] * "),a("code",[e._v("b")]),e._v("[..., k, j]), for "),a("code",[e._v("a")]),e._v("ll indices i, j.")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Note")]),e._v(": This is matrix product, not element-wise product.")])]),e._v(" "),a("h4",{attrs:{id:"raises-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If transpose_a and adjoint_a, or transpose_b and adjoint_b are both set to True.")])]),e._v(" "),a("h3",{attrs:{id:"rmod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rmod","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("rmod")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __rmod__(\n    y,\n    x\n)\n")])])]),a("p",[e._v("Returns element-wise remainder of division. When "),a("code",[e._v("x < 0")]),e._v(" xor "),a("code",[e._v("y < 0")]),e._v(" is\ntrue, this follows Python semantics in that the result here is consistent with a flooring divide. E.g. floor(x / y) * y + mod(x, y) = x.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/math/floormod",target:"_blank",rel:"noopener noreferrer"}},[e._v("math.floormod"),a("OutboundLink")],1),e._v("NOTE:  supports broadcasting. More about broadcasting here")]),e._v(" "),a("h4",{attrs:{id:"args-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-21","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("bfloat16")]),e._v(", "),a("code",[e._v("half")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must have the same t"),a("code",[e._v("y")]),e._v("pe as "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-21","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(". Has the same type as "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"rmul"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rmul","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("rmul")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __rmul__(\n    y,\n    x\n)\n")])])]),a("p",[e._v('Dispatches cwise mul for "DenseDense" and "DenseSparse".')]),e._v(" "),a("h3",{attrs:{id:"ror"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ror","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("ror")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __ror__(\n    y,\n    x\n)\n")])])]),a("p",[e._v("Returns the truth value of x OR y element-wise.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/math/logical_or",target:"_blank",rel:"noopener noreferrer"}},[e._v("math.logical_or"),a("OutboundLink")],1),e._v("NOTE:  supports broadcasting. More about broadcasting here")]),e._v(" "),a("h4",{attrs:{id:"args-22"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-22","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of t"),a("code",[e._v("y")]),e._v("pe "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-22"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-22","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"rpow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rpow","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("rpow")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __rpow__(\n    y,\n    x\n)\n")])])]),a("p",[e._v("Computes the power of one value to another.\nGiven a tensor "),a("code",[e._v("x")]),e._v(" and a tensor "),a("code",[e._v("y")]),e._v(", this operation computes\nfor corresponding elements in "),a("code",[e._v("x")]),e._v(" and "),a("code",[e._v("y")]),e._v(". For e"),a("code",[e._v("x")]),e._v("ample:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" x = tf.constant([[2, 2], [3, 3]])\ny = tf.constant([[8, 16], [2, 3]])\ntf.pow(x, y)  # [[256, 65536], [9, 27]]\n")])])]),a("h4",{attrs:{id:"args-23"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-23","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of type "),a("code",[e._v("float16")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", or "),a("code",[e._v("complex128")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of t"),a("code",[e._v("y")]),e._v("pe "),a("code",[e._v("float16")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", or "),a("code",[e._v("complex128")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-23"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-23","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"rsub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rsub","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("rsub")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __rsub__(\n    y,\n    x\n)\n")])])]),a("p",[e._v("Returns x - y element-wise.\n"),a("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v("NOTE: Subtract supports broadcasting. More about broadcasting")]),e._v(" "),a("h4",{attrs:{id:"args-24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-24","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("bfloat16")]),e._v(", "),a("code",[e._v("half")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("uint8")]),e._v(", "),a("code",[e._v("int8")]),e._v(", "),a("code",[e._v("uint16")]),e._v(", "),a("code",[e._v("int16")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", "),a("code",[e._v("complex128")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must have the same t"),a("code",[e._v("y")]),e._v("pe as "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-24","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(". Has the same type as "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"rtruediv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rtruediv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("rtruediv")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __rtruediv__(\n    y,\n    x\n)\n")])])]),a("h3",{attrs:{id:"rxor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rxor","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("rxor")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __rxor__(\n    y,\n    x\n)\n")])])]),a("p",[e._v("Logical XOR function.\nx ^ y = (x | y) & ~(x & y)\nInputs are tensor and if the tensors contains more than one element, an element-wise logical XOR is computed.")]),e._v(" "),a("h4",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[e._v("#")]),e._v(" Usage:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' x = tf.constant([False, False, True, True], dtype = tf.bool)\ny = tf.constant([False, True, False, True], dtype = tf.bool)\nz = tf.logical_xor(x, y, name="LogicalXor")\n#  here z = [False  True  True False]\n')])])]),a("h4",{attrs:{id:"args-25"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-25","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" type bool.")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of t"),a("code",[e._v("y")]),e._v("pe bool.")])]),e._v(" "),a("h4",{attrs:{id:"returns-25"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-25","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" of type bool with the same size as that of x or y.")]),e._v(" "),a("h3",{attrs:{id:"sub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sub","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("sub")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __sub__(\n    x,\n    y\n)\n")])])]),a("p",[e._v("Returns x - y element-wise.\n"),a("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v("NOTE: Subtract supports broadcasting. More about broadcasting")]),e._v(" "),a("h4",{attrs:{id:"args-26"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-26","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("bfloat16")]),e._v(", "),a("code",[e._v("half")]),e._v(", "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("uint8")]),e._v(", "),a("code",[e._v("int8")]),e._v(", "),a("code",[e._v("uint16")]),e._v(", "),a("code",[e._v("int16")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("complex64")]),e._v(", "),a("code",[e._v("complex128")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must have the same t"),a("code",[e._v("y")]),e._v("pe as "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns-26"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-26","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(". Has the same type as "),a("code",[e._v("x")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"truediv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#truediv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("truediv")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __truediv__(\n    x,\n    y\n)\n")])])]),a("h3",{attrs:{id:"xor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xor","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("xor")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" __xor__(\n    x,\n    y\n)\n")])])]),a("p",[e._v("Logical XOR function.\nx ^ y = (x | y) & ~(x & y)\nInputs are tensor and if the tensors contains more than one element, an element-wise logical XOR is computed.")]),e._v(" "),a("h4",{attrs:{id:"usage-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Usage:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' x = tf.constant([False, False, True, True], dtype = tf.bool)\ny = tf.constant([False, True, False, True], dtype = tf.bool)\nz = tf.logical_xor(x, y, name="LogicalXor")\n#  here z = [False  True  True False]\n')])])]),a("h4",{attrs:{id:"args-27"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-27","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("x")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" type bool.")]),e._v(" "),a("li",[a("code",[e._v("y")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(" of t"),a("code",[e._v("y")]),e._v("pe bool.")])]),e._v(" "),a("h4",{attrs:{id:"returns-27"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-27","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A "),a("code",[e._v("Tensor")]),e._v(" of type bool with the same size as that of x or y.")]),e._v(" "),a("h3",{attrs:{id:"consumers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consumers","aria-hidden":"true"}},[e._v("#")]),e._v(" consumers")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L652-L664",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" consumers()\n")])])]),a("p",[e._v("Returns a list of "),a("code",[e._v("Operation")]),e._v("s that consume this tensor.")]),e._v(" "),a("h4",{attrs:{id:"returns-28"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-28","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A list of "),a("code",[e._v("Operation")]),e._v("s.")]),e._v(" "),a("h3",{attrs:{id:"eval"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eval","aria-hidden":"true"}},[e._v("#")]),e._v(" eval")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L777-L798",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" eval(\n    feed_dict=None,\n    session=None\n)\n")])])]),a("p",[e._v("Evaluates this tensor in a "),a("code",[e._v("Session")]),e._v(".\nCalling this method will execute all preceding operations that produce the inputs needed for the operation that produces this tensor.\n"),a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/Tensor#eval",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tensor.eval()"),a("OutboundLink")],1),e._v("N.B. Before invoking , its graph must have been launched in a session, and either a default session must be available, or session must be specified explicitly.")]),e._v(" "),a("h4",{attrs:{id:"args-28"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-28","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("feed_dict")]),e._v(": A dictionary that maps "),a("code",[e._v("Tensor")]),e._v(" objects to feed values. See "),a("code",[e._v("tf.Session.run")]),e._v(" for a description of the valid feed values.")]),e._v(" "),a("li",[a("code",[e._v("session")]),e._v(": (Optional.) The "),a("code",[e._v("Session")]),e._v(" to be used to evaluate this tensor. If none, the default "),a("code",[e._v("session")]),e._v(" will be used.")])]),e._v(" "),a("h4",{attrs:{id:"returns-29"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-29","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A numpy array corresponding to the value of this tensor.")]),e._v(" "),a("h3",{attrs:{id:"experimental-ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#experimental-ref","aria-hidden":"true"}},[e._v("#")]),e._v(" experimental_ref")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L800-L851",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" experimental_ref()\n")])])]),a("p",[e._v("Returns a hashable reference object to this Tensor.\nThe primary usecase for this API is to put tensors in a set/dictionary. We can't put tensors in a set/dictionary as "),a("code",[e._v("tensor.__hash__")]),e._v("() is no longer available starting Tensorflow 2.0.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" import tensorflow as tf\n\nx = tf.constant(5)\ny = tf.constant(10)\nz = tf.constant(10)\n\n# The followings will raise an exception starting 2.0\n# TypeError: Tensor is unhashable if Tensor equality is enabled.\ntensor_set = {x, y, z}\ntensor_dict = {x: 'five', y: 'ten', z: 'ten'}\n")])])]),a("p",[e._v("Instead, we can use "),a("code",[e._v("tensor.experimental_ref")]),e._v("().")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tensor_set = {x.experimental_ref(),\n              y.experimental_ref(),\n              z.experimental_ref()}\n\nprint(x.experimental_ref() in tensor_set)\n==> True\n\ntensor_dict = {x.experimental_ref(): 'five',\n               y.experimental_ref(): 'ten',\n               z.experimental_ref(): 'ten'}\n\nprint(tensor_dict[y.experimental_ref()])\n==> ten\n")])])]),a("p",[e._v("Also, the reference object provides "),a("code",[e._v(".deref")]),e._v("() function that returns the original Tensor.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" x = tf.constant(5)\nprint(x.experimental_ref().deref())\n==> tf.Tensor(5, shape=(), dtype=int32)\n")])])]),a("h3",{attrs:{id:"get-shape"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" get_shape")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L580-L582",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" get_shape()\n")])])]),a("p",[e._v("Alias of Tensor.shape.")]),e._v(" "),a("h3",{attrs:{id:"set-shape"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" set_shape")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/framework/ops.py#L584-L645",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" set_shape(shape)\n")])])]),a("p",[e._v("Updates the shape of this tensor.\nThis method can be called multiple times, and will merge the given "),a("code",[e._v("shape")]),e._v(" with the current "),a("code",[e._v("shape")]),e._v(" of this tensor. It can be used to provide additional information about the "),a("code",[e._v("shape")]),e._v(" of this tensor that cannot be inferred from the graph alone. For example, this can be used to provide additional information about the "),a("code",[e._v("shape")]),e._v("s of images:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" _, image_data = tf.compat.v1.TFRecordReader(...).read(...)\nimage = tf.image.decode_png(image_data, channels=3)\n\n# The height and width dimensions of `image` are data dependent, and\n# cannot be computed without executing the op.\nprint(image.shape)\n==> TensorShape([Dimension(None), Dimension(None), Dimension(3)])\n\n# We know that each image in this dataset is 28 x 28 pixels.\nimage.set_shape([28, 28, 3])\nprint(image.shape)\n==> TensorShape([Dimension(28), Dimension(28), Dimension(3)])\n")])])]),a("p",[a("a",{attrs:{href:"https://tensorflow.google.cn/api_docs/python/tf/ensure_shape",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.ensure_shape"),a("OutboundLink")],1),e._v("NOTE: This shape is not enforced at runtime. Setting incorrect shapes can result in inconsistencies between the statically-known graph and the runtime value of tensors. For runtime validation of the shape, use  instead.")]),e._v(" "),a("h4",{attrs:{id:"args-29"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-29","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("shape")]),e._v(": A "),a("code",[e._v("TensorShape")]),e._v(" representing the "),a("code",[e._v("shape")]),e._v(" of this tensor, a "),a("code",[e._v("TensorShape")]),e._v("Proto, a list, a tuple, or None.")])]),e._v(" "),a("h4",{attrs:{id:"raises-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If "),a("code",[e._v("shape")]),e._v(" is not compatible with the current "),a("code",[e._v("shape")]),e._v(" of this tensor.")])]),e._v(" "),a("h2",{attrs:{id:"class-members"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-members","aria-hidden":"true"}},[e._v("#")]),e._v(" Class Members")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("OVERLOADABLE_OPERATORS")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);