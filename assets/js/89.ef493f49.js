(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{280:function(e,a,t){"use strict";t.r(a);var r=t(0),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"class-variable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-variable","aria-hidden":"true"}},[e._v("#")]),e._v(" Class Variable")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://tensorflow.org/guide/variables",target:"_blank",rel:"noopener noreferrer"}},[e._v("Variables Guide"),t("OutboundLink")],1),e._v("See the .")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/Variable",target:"_blank",rel:"noopener noreferrer"}},[e._v("Variable"),t("OutboundLink")],1),e._v("Inherits From:")]),e._v(" "),t("p",[e._v("A variable maintains state in the graph across calls to run(). You add a variable to the graph by constructing an instance of the class Variable.")]),e._v(" "),t("p",[e._v("The Variable() constructor requires an initial value for the variable, which can be a Tensor of any type and shape. The initial value defines the type and shape of the variable. After construction, the type and shape of the variable are fixed. The value can be changed using one of the assign methods.")]),e._v(" "),t("p",[e._v("If you want to change the shape of a variable later you have to use an assign Op with validate_shape=False.")]),e._v(" "),t("p",[e._v("Just like any Tensor, variables created with Variable() can be used as inputs for other Ops in the graph. Additionally, all the operators overloaded for the Tensor class are carried over to variables, so you can also add nodes to the graph by just doing arithmetic on variables.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" import tensorflow as tf\n\n# Create a variable.\nw = tf.Variable(<initial-value>, name=<optional-name>)\n\n# Use the variable in the graph like any Tensor.\ny = tf.matmul(w, ...another variable or tensor...)\n\n# The overloaded operators are available too.\nz = tf.sigmoid(w + y)\n\n# Assign a new value to the variable with `assign()` or a related method.\nw.assign(w + 1.0)\nw.assign_add(1.0)\n")])])]),t("p",[e._v("When you launch the graph, variables have to be explicitly initialized before you can run Ops that use their value. You can initialize a variable by running its initializer op, restoring the variable from a save file, or simply running an assign Op that assigns a value to the variable. In fact, the variable initializer op is just an assign Op that assigns the variable's initial value to the variable itself.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" # Launch the graph in a session.\nwith tf.compat.v1.Session() as sess:\n    # Run the variable initializer.\n    sess.run(w.initializer)\n    # ...you now can run ops that use the value of 'w'...\n")])])]),t("p",[e._v("The most common initialization pattern is to use the convenience function global_variables_initializer() to add an Op to the graph that initializes all the variables. You then run that Op after launching the graph.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" # Add an Op to initialize global variables.\ninit_op = tf.compat.v1.global_variables_initializer()\n\n# Launch the graph in a session.\nwith tf.compat.v1.Session() as sess:\n    # Run the Op that initializes global variables.\n    sess.run(init_op)\n    # ...you can now run any Op that uses variable values...\n")])])]),t("p",[e._v("If you need to create a variable with an initial value dependent on another variable, use the other variable's initialized_value(). This ensures that variables are initialized in the right order.")]),e._v(" "),t("p",[e._v("All variables are automatically collected in the graph where they are created. By default, the constructor adds the new variable to the graph collection GraphKeys.GLOBAL_VARIABLES. The convenience function global_variables() returns the contents of that collection.")]),e._v(" "),t("p",[e._v("When building a machine learning model it is often convenient to distinguish between variables holding the trainable model parameters and other variables such as a global step variable used to count training steps. To make this easier, the variable constructor supports a trainable="),t("bool",[e._v(" parameter. If True, the new variable is also added to the graph collection GraphKeys.TRAINABLE_VARIABLES. The convenience function trainable_variables() returns the contents of this collection. The various Optimizer classes use this collection as the default list of variables to optimize.\n"),t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/cond",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.cond"),t("OutboundLink")],1),e._v("WARNING: tf.Variable objects by default have a non-intuitive memory model. A Variable is represented internally as a mutable Tensor which can non-deterministically alias other Tensors in a graph. The set of operations which consume a Variable and can lead to aliasing is undetermined and can change across TensorFlow versions. Avoid writing code which relies on the value of a Variable either changing or not changing as other operations happen. For example, using Variable objects or simple functions thereof as predicates in a  is dangerous and error-prone:")])],1),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" v = tf.Variable(True)\ntf.cond(v, lambda: v.assign(False), my_false_fn)  # Note: this is broken.\n")])])]),t("p",[e._v("Here, adding use_resource=True when constructing the variable will fix any nondeterminism issues:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" v = tf.Variable(True, use_resource=True)\ntf.cond(v, lambda: v.assign(False), my_false_fn)\n")])])]),t("p",[e._v("To use the replacement for variables which does not have these issues:")]),e._v(" "),t("ul",[t("li",[e._v("Add "),t("code",[e._v("use_resource=True")]),e._v(" when constructing "),t("code",[e._v("tf.Variable")]),e._v(";")]),e._v(" "),t("li",[e._v("Call "),t("code",[e._v("tf.compat.v1.get_variable")]),e._v("_scope().set_use_resource(True) inside a "),t("code",[e._v("tf.compat.v1.variable_scope")]),e._v(" before the "),t("code",[e._v("tf.compat.v1.get_variable")]),e._v("() call.")])]),e._v(" "),t("h2",{attrs:{id:"init"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("init")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L1481-L1570",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __init__(\n    initial_value=None,\n    trainable=None,\n    collections=None,\n    validate_shape=True,\n    caching_device=None,\n    name=None,\n    variable_def=None,\n    dtype=None,\n    expected_shape=None,\n    import_scope=None,\n    constraint=None,\n    use_resource=None,\n    synchronization=tf.VariableSynchronization.AUTO,\n    aggregation=tf.compat.v1.VariableAggregation.NONE,\n    shape=None\n)\n")])])]),t("p",[e._v("Creates a new variable with value initial_value.")]),e._v(" "),t("p",[e._v("The new variable is added to the graph collections listed in collections, which defaults to [GraphKeys.GLOBAL_VARIABLES].")]),e._v(" "),t("p",[e._v("If trainable is True the variable is also added to the graph collection GraphKeys.TRAINABLE_VARIABLES.")]),e._v(" "),t("p",[e._v("This constructor creates both a variable Op and an assign Op to set the variable to its initial value.")]),e._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("initial_value")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(", or Python object convertible to a "),t("code",[e._v("Tensor")]),e._v(", which is the initial value for the Variable. The initial value must have a shape specified unless "),t("code",[e._v("validate_shape")]),e._v(" is set to False. Can also be a callable with no argument that returns the initial value when called. In that case, "),t("code",[e._v("dtype")]),e._v(" must be specified. (Note that initializer functions from init_ops.py must first be bound to a shape before being used here.)")]),e._v(" "),t("li",[t("code",[e._v("trainable")]),e._v(": If "),t("code",[e._v("True")]),e._v(", also adds the variable to the graph collection "),t("code",[e._v("GraphKeys.TRAINABLE_VARIABLES")]),e._v(". This collection is used as the default list of variables to use by the "),t("code",[e._v("Optimizer")]),e._v(" classes. Defaults to "),t("code",[e._v("True")]),e._v(", unless "),t("code",[e._v("synchronization")]),e._v(" is set to "),t("code",[e._v("ON_READ")]),e._v(", in which case it defaults to "),t("code",[e._v("False")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("collections")]),e._v(": "),t("code",[e._v("L")]),e._v("i"),t("code",[e._v("s")]),e._v("t of g"),t("code",[e._v("r``a``p``h")]),e._v(" "),t("code",[e._v("collections")]),e._v(" k"),t("code",[e._v("e``y``s``.")]),e._v(" T"),t("code",[e._v("h``e")]),e._v(" n"),t("code",[e._v("e")]),e._v("w v"),t("code",[e._v("a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e")]),e._v(" i"),t("code",[e._v("s")]),e._v(" "),t("code",[e._v("a")]),e._v("dd"),t("code",[e._v("e")]),e._v("d to t"),t("code",[e._v("h``e``s``e")]),e._v(" "),t("code",[e._v("collections``.")]),e._v(" D"),t("code",[e._v("e")]),e._v("f"),t("code",[e._v("a")]),e._v("ult"),t("code",[e._v("s")]),e._v(" to ["),t("code",[e._v("G``r``a``p``h``K``e``y``s``.``G``L``O``B``A``L``_``V``A``R``I``A``B``L``E``S")]),e._v("]"),t("code",[e._v(".")])]),e._v(" "),t("li",[t("code",[e._v("validate_shape")]),e._v(": "),t("code",[e._v("I")]),e._v("f "),t("code",[e._v("False")]),e._v(", "),t("code",[e._v("a")]),e._v("llow"),t("code",[e._v("s")]),e._v(" t"),t("code",[e._v("h``e")]),e._v(" v"),t("code",[e._v("a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e")]),e._v(" to b"),t("code",[e._v("e")]),e._v(" initi"),t("code",[e._v("a")]),e._v("liz"),t("code",[e._v("e")]),e._v("d wit"),t("code",[e._v("h")]),e._v(" "),t("code",[e._v("a")]),e._v(" v"),t("code",[e._v("a")]),e._v("lu"),t("code",[e._v("e")]),e._v(" of unknown "),t("code",[e._v("s``h``a``p``e``.")]),e._v(" "),t("code",[e._v("I")]),e._v("f "),t("code",[e._v("True")]),e._v(", t"),t("code",[e._v("h``e")]),e._v(" d"),t("code",[e._v("e")]),e._v("f"),t("code",[e._v("a")]),e._v("ult, t"),t("code",[e._v("h``e")]),e._v(" "),t("code",[e._v("s``h``a``p``e")]),e._v(" of "),t("code",[e._v("initial_value")]),e._v(" mu"),t("code",[e._v("s")]),e._v("t b"),t("code",[e._v("e")]),e._v(" known"),t("code",[e._v(".")])]),e._v(" "),t("li",[t("code",[e._v("caching_device")]),e._v(": "),t("code",[e._v("O``p")]),e._v("tion"),t("code",[e._v("a")]),e._v("l d"),t("code",[e._v("e")]),e._v("vic"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("s")]),e._v("t"),t("code",[e._v("r")]),e._v("ing d"),t("code",[e._v("e``s")]),e._v("c"),t("code",[e._v("r")]),e._v("ibing w"),t("code",[e._v("h``e``r``e")]),e._v(" t"),t("code",[e._v("h``e")]),e._v(" "),t("code",[e._v("V``a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("s``h")]),e._v("ould b"),t("code",[e._v("e")]),e._v(" c"),t("code",[e._v("a")]),e._v("c"),t("code",[e._v("h``e")]),e._v("d fo"),t("code",[e._v("r")]),e._v(" "),t("code",[e._v("r``e``a")]),e._v("ding"),t("code",[e._v(".")]),e._v(" D"),t("code",[e._v("e")]),e._v("f"),t("code",[e._v("a")]),e._v("ult"),t("code",[e._v("s")]),e._v(" to t"),t("code",[e._v("h``e")]),e._v(" "),t("code",[e._v("V``a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e")]),e._v("'"),t("code",[e._v("s")]),e._v(" d"),t("code",[e._v("e")]),e._v("vic"),t("code",[e._v("e``.")]),e._v(" "),t("code",[e._v("I")]),e._v("f not "),t("code",[e._v("None")]),e._v(", c"),t("code",[e._v("a")]),e._v("c"),t("code",[e._v("h``e``s")]),e._v(" on "),t("code",[e._v("a")]),e._v("not"),t("code",[e._v("h``e``r")]),e._v(" d"),t("code",[e._v("e")]),e._v("vic"),t("code",[e._v("e``.")]),e._v(" T"),t("code",[e._v("y``p")]),e._v("ic"),t("code",[e._v("a")]),e._v("l u"),t("code",[e._v("s``e")]),e._v(" i"),t("code",[e._v("s")]),e._v(" to c"),t("code",[e._v("a")]),e._v("c"),t("code",[e._v("h``e")]),e._v(" on t"),t("code",[e._v("h``e")]),e._v(" d"),t("code",[e._v("e")]),e._v("vic"),t("code",[e._v("e")]),e._v(" w"),t("code",[e._v("h``e``r``e")]),e._v(" t"),t("code",[e._v("h``e")]),e._v(" "),t("code",[e._v("O``p``s")]),e._v(" u"),t("code",[e._v("s")]),e._v("ing t"),t("code",[e._v("h``e")]),e._v(" "),t("code",[e._v("V``a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("r``e``s")]),e._v("id"),t("code",[e._v("e")]),e._v(", to d"),t("code",[e._v("e")]),e._v("du"),t("code",[e._v("p")]),e._v("lic"),t("code",[e._v("a")]),e._v("t"),t("code",[e._v("e")]),e._v(" co"),t("code",[e._v("p``y")]),e._v("ing t"),t("code",[e._v("h``r")]),e._v("oug"),t("code",[e._v("h")]),e._v(" "),t("code",[e._v("S")]),e._v("witc"),t("code",[e._v("h")]),e._v(" "),t("code",[e._v("a")]),e._v("nd ot"),t("code",[e._v("h``e``r")]),e._v(" condition"),t("code",[e._v("a")]),e._v("l "),t("code",[e._v("s")]),e._v("t"),t("code",[e._v("a")]),e._v("t"),t("code",[e._v("e")]),e._v("m"),t("code",[e._v("e")]),e._v("nt"),t("code",[e._v("s``.")])]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": "),t("code",[e._v("O``p")]),e._v("tion"),t("code",[e._v("a")]),e._v("l "),t("code",[e._v("name")]),e._v(" fo"),t("code",[e._v("r")]),e._v(" t"),t("code",[e._v("h``e")]),e._v(" v"),t("code",[e._v("a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e``.")]),e._v(" D"),t("code",[e._v("e")]),e._v("f"),t("code",[e._v("a")]),e._v("ult"),t("code",[e._v("s")]),e._v(" to "),t("code",[e._v("'Variable'")]),e._v(" "),t("code",[e._v("a")]),e._v("nd g"),t("code",[e._v("e")]),e._v("t"),t("code",[e._v("s")]),e._v(" uniquifi"),t("code",[e._v("e")]),e._v("d "),t("code",[e._v("a")]),e._v("utom"),t("code",[e._v("a")]),e._v("tic"),t("code",[e._v("a")]),e._v("ll"),t("code",[e._v("y``.")])]),e._v(" "),t("li",[t("code",[e._v("variable_def")]),e._v(": "),t("code",[e._v("V``a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e")]),e._v("D"),t("code",[e._v("e")]),e._v("f "),t("code",[e._v("p``r")]),e._v("otocol buff"),t("code",[e._v("e``r``.")]),e._v(" "),t("code",[e._v("I")]),e._v("f not "),t("code",[e._v("None")]),e._v(", "),t("code",[e._v("r``e")]),e._v("c"),t("code",[e._v("r``e``a")]),e._v("t"),t("code",[e._v("e``s")]),e._v(" t"),t("code",[e._v("h``e")]),e._v(" "),t("code",[e._v("V``a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e")]),e._v(" obj"),t("code",[e._v("e")]),e._v("ct wit"),t("code",[e._v("h")]),e._v(" it"),t("code",[e._v("s")]),e._v(" cont"),t("code",[e._v("e")]),e._v("nt"),t("code",[e._v("s")]),e._v(", "),t("code",[e._v("r``e")]),e._v("f"),t("code",[e._v("e``r``e")]),e._v("ncing t"),t("code",[e._v("h``e")]),e._v(" v"),t("code",[e._v("a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e")]),e._v("'"),t("code",[e._v("s")]),e._v(" nod"),t("code",[e._v("e``s")]),e._v(" in t"),t("code",[e._v("h``e")]),e._v(" g"),t("code",[e._v("r``a``p``h")]),e._v(", w"),t("code",[e._v("h")]),e._v("ic"),t("code",[e._v("h")]),e._v(" mu"),t("code",[e._v("s")]),e._v("t "),t("code",[e._v("a")]),e._v("l"),t("code",[e._v("r``e``a")]),e._v("d"),t("code",[e._v("y")]),e._v(" "),t("code",[e._v("e")]),e._v("xi"),t("code",[e._v("s")]),e._v("t"),t("code",[e._v(".")]),e._v(" T"),t("code",[e._v("h``e")]),e._v(" g"),t("code",[e._v("r``a``p``h")]),e._v(" i"),t("code",[e._v("s")]),e._v(" not c"),t("code",[e._v("h``a")]),e._v("ng"),t("code",[e._v("e")]),e._v("d"),t("code",[e._v(".")]),e._v(" "),t("code",[e._v("variable_def")]),e._v(" "),t("code",[e._v("a")]),e._v("nd t"),t("code",[e._v("h``e")]),e._v(" ot"),t("code",[e._v("h``e``r")]),e._v(" "),t("code",[e._v("a``r")]),e._v("gum"),t("code",[e._v("e")]),e._v("nt"),t("code",[e._v("s")]),e._v(" "),t("code",[e._v("a``r``e")]),e._v(" mutu"),t("code",[e._v("a")]),e._v("ll"),t("code",[e._v("y")]),e._v(" "),t("code",[e._v("e")]),e._v("xclu"),t("code",[e._v("s")]),e._v("iv"),t("code",[e._v("e``.")])]),e._v(" "),t("li",[t("code",[e._v("dtype")]),e._v(": "),t("code",[e._v("I")]),e._v("f "),t("code",[e._v("s``e")]),e._v("t, "),t("code",[e._v("initial_value")]),e._v(" will b"),t("code",[e._v("e")]),e._v(" conv"),t("code",[e._v("e``r")]),e._v("t"),t("code",[e._v("e")]),e._v("d to t"),t("code",[e._v("h``e")]),e._v(" giv"),t("code",[e._v("e")]),e._v("n t"),t("code",[e._v("y``p``e``.")]),e._v(" "),t("code",[e._v("I")]),e._v("f "),t("code",[e._v("None")]),e._v(", "),t("code",[e._v("e")]),e._v("it"),t("code",[e._v("h``e``r")]),e._v(" t"),t("code",[e._v("h``e")]),e._v(" d"),t("code",[e._v("a")]),e._v("t"),t("code",[e._v("a")]),e._v("t"),t("code",[e._v("y``p``e")]),e._v(" will b"),t("code",[e._v("e")]),e._v(" k"),t("code",[e._v("e``p")]),e._v("t (if "),t("code",[e._v("initial_value")]),e._v(" i"),t("code",[e._v("s")]),e._v(" "),t("code",[e._v("a")]),e._v(" "),t("code",[e._v("Tensor")]),e._v("), o"),t("code",[e._v("r")]),e._v(" "),t("code",[e._v("convert_to_tensor")]),e._v(" will d"),t("code",[e._v("e")]),e._v("cid"),t("code",[e._v("e``.")])]),e._v(" "),t("li",[t("code",[e._v("e")]),e._v("x"),t("code",[e._v("p``e")]),e._v("ct"),t("code",[e._v("e")]),e._v("d"),t("code",[e._v("_``s``h``a``p``e")]),e._v(": "),t("code",[e._v("A")]),e._v(" "),t("code",[e._v("Tensor``S``h``a``p``e``.")]),e._v(" "),t("code",[e._v("I")]),e._v("f "),t("code",[e._v("s``e")]),e._v("t, "),t("code",[e._v("initial_value")]),e._v(" i"),t("code",[e._v("s")]),e._v(" "),t("code",[e._v("e")]),e._v("x"),t("code",[e._v("p``e")]),e._v("ct"),t("code",[e._v("e")]),e._v("d to "),t("code",[e._v("h``a")]),e._v("v"),t("code",[e._v("e")]),e._v(" t"),t("code",[e._v("h")]),e._v("i"),t("code",[e._v("s")]),e._v(" "),t("code",[e._v("s``h``a``p``e``.")])]),e._v(" "),t("li",[t("code",[e._v("import_scope")]),e._v(": "),t("code",[e._v("O``p")]),e._v("tion"),t("code",[e._v("a")]),e._v("l "),t("code",[e._v("s")]),e._v("t"),t("code",[e._v("r")]),e._v("ing"),t("code",[e._v(".")]),e._v(" N"),t("code",[e._v("a")]),e._v("m"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("s")]),e._v("co"),t("code",[e._v("p``e")]),e._v(" to "),t("code",[e._v("a")]),e._v("dd to t"),t("code",[e._v("h``e")]),e._v(" "),t("code",[e._v("V``a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e``.")]),e._v(" "),t("code",[e._v("O")]),e._v("nl"),t("code",[e._v("y")]),e._v(" u"),t("code",[e._v("s``e")]),e._v("d w"),t("code",[e._v("h``e")]),e._v("n initi"),t("code",[e._v("a")]),e._v("lizing f"),t("code",[e._v("r")]),e._v("om "),t("code",[e._v("p``r")]),e._v("otocol buff"),t("code",[e._v("e``r``.")])]),e._v(" "),t("li",[t("code",[e._v("constraint")]),e._v(": "),t("code",[e._v("A")]),e._v("n o"),t("code",[e._v("p")]),e._v("tion"),t("code",[e._v("a")]),e._v("l "),t("code",[e._v("p``r")]),e._v("oj"),t("code",[e._v("e")]),e._v("ction function to b"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("a``p``p")]),e._v("li"),t("code",[e._v("e")]),e._v("d to t"),t("code",[e._v("h``e")]),e._v(" v"),t("code",[e._v("a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("a")]),e._v("ft"),t("code",[e._v("e``r")]),e._v(" b"),t("code",[e._v("e")]),e._v("ing u"),t("code",[e._v("p")]),e._v("d"),t("code",[e._v("a")]),e._v("t"),t("code",[e._v("e")]),e._v("d b"),t("code",[e._v("y")]),e._v(" "),t("code",[e._v("a")]),e._v("n "),t("code",[e._v("Optimizer")]),e._v(" ("),t("code",[e._v("e``.")]),e._v("g"),t("code",[e._v(".")]),e._v(" u"),t("code",[e._v("s``e")]),e._v("d to im"),t("code",[e._v("p")]),e._v("l"),t("code",[e._v("e")]),e._v("m"),t("code",[e._v("e")]),e._v("nt no"),t("code",[e._v("r")]),e._v("m "),t("code",[e._v("constraint``s")]),e._v(" o"),t("code",[e._v("r")]),e._v(" v"),t("code",[e._v("a")]),e._v("lu"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("constraint``s")]),e._v(" fo"),t("code",[e._v("r")]),e._v(" l"),t("code",[e._v("a``y``e``r")]),e._v(" w"),t("code",[e._v("e")]),e._v("ig"),t("code",[e._v("h")]),e._v("t"),t("code",[e._v("s")]),e._v(")"),t("code",[e._v(".")]),e._v(" T"),t("code",[e._v("h``e")]),e._v(" function mu"),t("code",[e._v("s")]),e._v("t t"),t("code",[e._v("a")]),e._v("k"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("a``s")]),e._v(" in"),t("code",[e._v("p")]),e._v("ut t"),t("code",[e._v("h``e")]),e._v(" un"),t("code",[e._v("p``r")]),e._v("oj"),t("code",[e._v("e")]),e._v("ct"),t("code",[e._v("e")]),e._v("d "),t("code",[e._v("Tensor")]),e._v(" "),t("code",[e._v("r``e``p``r``e``s``e")]),e._v("nting t"),t("code",[e._v("h``e")]),e._v(" v"),t("code",[e._v("a")]),e._v("lu"),t("code",[e._v("e")]),e._v(" of t"),t("code",[e._v("h``e")]),e._v(" v"),t("code",[e._v("a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("a")]),e._v("nd "),t("code",[e._v("r``e")]),e._v("tu"),t("code",[e._v("r")]),e._v("n t"),t("code",[e._v("h``e")]),e._v(" "),t("code",[e._v("Tensor")]),e._v(" fo"),t("code",[e._v("r")]),e._v(" t"),t("code",[e._v("h``e")]),e._v(" "),t("code",[e._v("p``r")]),e._v("oj"),t("code",[e._v("e")]),e._v("ct"),t("code",[e._v("e")]),e._v("d v"),t("code",[e._v("a")]),e._v("lu"),t("code",[e._v("e")]),e._v(" (w"),t("code",[e._v("h")]),e._v("ic"),t("code",[e._v("h")]),e._v(" mu"),t("code",[e._v("s")]),e._v("t "),t("code",[e._v("h``a")]),e._v("v"),t("code",[e._v("e")]),e._v(" t"),t("code",[e._v("h``e")]),e._v(" "),t("code",[e._v("s``a")]),e._v("m"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("s``h``a``p``e")]),e._v(")"),t("code",[e._v(".")]),e._v(" Con"),t("code",[e._v("s")]),e._v("t"),t("code",[e._v("r``a")]),e._v("int"),t("code",[e._v("s")]),e._v(" "),t("code",[e._v("a``r``e")]),e._v(" not "),t("code",[e._v("s``a")]),e._v("f"),t("code",[e._v("e")]),e._v(" to u"),t("code",[e._v("s``e")]),e._v(" w"),t("code",[e._v("h``e")]),e._v("n doing "),t("code",[e._v("a``s``y")]),e._v("nc"),t("code",[e._v("h``r")]),e._v("onou"),t("code",[e._v("s")]),e._v(" di"),t("code",[e._v("s")]),e._v("t"),t("code",[e._v("r")]),e._v("ibut"),t("code",[e._v("e")]),e._v("d t"),t("code",[e._v("r``a")]),e._v("ining"),t("code",[e._v(".")])]),e._v(" "),t("li",[t("code",[e._v("use_resource")]),e._v(": w"),t("code",[e._v("h``e")]),e._v("t"),t("code",[e._v("h``e``r")]),e._v(" to u"),t("code",[e._v("s``e")]),e._v(" "),t("code",[e._v("r``e``s")]),e._v("ou"),t("code",[e._v("r")]),e._v("c"),t("code",[e._v("e")]),e._v(" v"),t("code",[e._v("a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e``s``.")])]),e._v(" "),t("li",[t("code",[e._v("synchronization")]),e._v(": "),t("code",[e._v("I")]),e._v("ndic"),t("code",[e._v("a")]),e._v("t"),t("code",[e._v("e``s")]),e._v(" w"),t("code",[e._v("h``e")]),e._v("n "),t("code",[e._v("a")]),e._v(" di"),t("code",[e._v("s")]),e._v("t"),t("code",[e._v("r")]),e._v("ibut"),t("code",[e._v("e")]),e._v("d "),t("code",[e._v("a")]),e._v(" v"),t("code",[e._v("a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e")]),e._v(" will b"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("a")]),e._v("gg"),t("code",[e._v("r``e")]),e._v("g"),t("code",[e._v("a")]),e._v("t"),t("code",[e._v("e")]),e._v("d"),t("code",[e._v(".")]),e._v(" "),t("code",[e._v("A")]),e._v("cc"),t("code",[e._v("e``p")]),e._v("t"),t("code",[e._v("e")]),e._v("d v"),t("code",[e._v("a")]),e._v("lu"),t("code",[e._v("e``s")]),e._v(" "),t("code",[e._v("a``r``e")]),e._v(" con"),t("code",[e._v("s")]),e._v("t"),t("code",[e._v("a")]),e._v("nt"),t("code",[e._v("s")]),e._v(" d"),t("code",[e._v("e")]),e._v("fin"),t("code",[e._v("e")]),e._v("d in t"),t("code",[e._v("h``e")]),e._v(" cl"),t("code",[e._v("a``s``s")]),e._v(" "),t("code",[e._v("tf.VariableSynchronization``.")]),e._v(" "),t("code",[e._v("B``y")]),e._v(" d"),t("code",[e._v("e")]),e._v("f"),t("code",[e._v("a")]),e._v("ult t"),t("code",[e._v("h``e")]),e._v(" "),t("code",[e._v("synchronization")]),e._v(" i"),t("code",[e._v("s")]),e._v(" "),t("code",[e._v("s``e")]),e._v("t to "),t("code",[e._v("A")]),e._v("UT"),t("code",[e._v("O")]),e._v(" "),t("code",[e._v("a")]),e._v("nd t"),t("code",[e._v("h``e")]),e._v(" cu"),t("code",[e._v("r``r``e")]),e._v("nt "),t("code",[e._v("DistributionStrategy")]),e._v(" c"),t("code",[e._v("h")]),e._v("oo"),t("code",[e._v("s``e``s")]),e._v(" w"),t("code",[e._v("h``e")]),e._v("n to "),t("code",[e._v("s``y")]),e._v("nc"),t("code",[e._v("h``r")]),e._v("oniz"),t("code",[e._v("e``.")])]),e._v(" "),t("li",[t("code",[e._v("a")]),e._v("gg"),t("code",[e._v("r``e")]),e._v("g"),t("code",[e._v("a")]),e._v("tion: "),t("code",[e._v("I")]),e._v("ndic"),t("code",[e._v("a")]),e._v("t"),t("code",[e._v("e``s")]),e._v(" "),t("code",[e._v("h")]),e._v("ow "),t("code",[e._v("a")]),e._v(" di"),t("code",[e._v("s")]),e._v("t"),t("code",[e._v("r")]),e._v("ibut"),t("code",[e._v("e")]),e._v("d v"),t("code",[e._v("a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e")]),e._v(" will b"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("a")]),e._v("gg"),t("code",[e._v("r``e")]),e._v("g"),t("code",[e._v("a")]),e._v("t"),t("code",[e._v("e")]),e._v("d"),t("code",[e._v(".")]),e._v(" "),t("code",[e._v("A")]),e._v("cc"),t("code",[e._v("e``p")]),e._v("t"),t("code",[e._v("e")]),e._v("d v"),t("code",[e._v("a")]),e._v("lu"),t("code",[e._v("e``s")]),e._v(" "),t("code",[e._v("a``r``e")]),e._v(" con"),t("code",[e._v("s")]),e._v("t"),t("code",[e._v("a")]),e._v("nt"),t("code",[e._v("s")]),e._v(" d"),t("code",[e._v("e")]),e._v("fin"),t("code",[e._v("e")]),e._v("d in t"),t("code",[e._v("h``e")]),e._v(" cl"),t("code",[e._v("a``s``s")]),e._v(" "),t("code",[e._v("tf.VariableAggregation``.")])]),e._v(" "),t("li",[t("code",[e._v("s``h``a``p``e")]),e._v(": (o"),t("code",[e._v("p")]),e._v("tion"),t("code",[e._v("a")]),e._v("l) T"),t("code",[e._v("h``e")]),e._v(" "),t("code",[e._v("s``h``a``p``e")]),e._v(" of t"),t("code",[e._v("h")]),e._v("i"),t("code",[e._v("s")]),e._v(" v"),t("code",[e._v("a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e``.")]),e._v(" "),t("code",[e._v("I")]),e._v("f "),t("code",[e._v("None")]),e._v(", t"),t("code",[e._v("h``e")]),e._v(" "),t("code",[e._v("s``h``a``p``e")]),e._v(" of "),t("code",[e._v("initial_value")]),e._v(" will b"),t("code",[e._v("e")]),e._v(" u"),t("code",[e._v("s``e")]),e._v("d"),t("code",[e._v(".")]),e._v(" W"),t("code",[e._v("h``e")]),e._v("n "),t("code",[e._v("s``e")]),e._v("tting t"),t("code",[e._v("h")]),e._v("i"),t("code",[e._v("s")]),e._v(" "),t("code",[e._v("a``r")]),e._v("gum"),t("code",[e._v("e")]),e._v("nt to tf"),t("code",[e._v(".``Tensor``S``h``a``p``e")]),e._v("("),t("code",[e._v("None")]),e._v(") ("),t("code",[e._v("r``e``p``r``e``s``e")]),e._v("nting "),t("code",[e._v("a")]),e._v("n un"),t("code",[e._v("s``p``e")]),e._v("cifi"),t("code",[e._v("e")]),e._v("d "),t("code",[e._v("s``h``a``p``e")]),e._v("), t"),t("code",[e._v("h``e")]),e._v(" v"),t("code",[e._v("a``r")]),e._v("i"),t("code",[e._v("a")]),e._v("bl"),t("code",[e._v("e")]),e._v(" c"),t("code",[e._v("a")]),e._v("n b"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("a``s``s")]),e._v("ign"),t("code",[e._v("e")]),e._v("d wit"),t("code",[e._v("h")]),e._v(" v"),t("code",[e._v("a")]),e._v("lu"),t("code",[e._v("e``s")]),e._v(" of diff"),t("code",[e._v("e``r``e")]),e._v("nt "),t("code",[e._v("s``h``a``p``e``s``.")])])]),e._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ValueError")]),e._v(": If both "),t("code",[e._v("variable_def")]),e._v(" and initial_value are specified.")]),e._v(" "),t("li",[t("code",[e._v("ValueError")]),e._v(": If the initial value is not specified, or does not have a shape and "),t("code",[e._v("validate_shape")]),e._v(" is "),t("code",[e._v("True")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("RuntimeError")]),e._v(": If eager execution is enabled.")])]),e._v(" "),t("h2",{attrs:{id:"child-classes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#child-classes","aria-hidden":"true"}},[e._v("#")]),e._v(" Child Classes")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/Variable/SaveSliceInfo",target:"_blank",rel:"noopener noreferrer"}},[e._v("class SaveSliceInfo"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),t("h3",{attrs:{id:"aggregation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aggregation","aria-hidden":"true"}},[e._v("#")]),e._v(" aggregation")]),e._v(" "),t("h3",{attrs:{id:"constraint"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constraint","aria-hidden":"true"}},[e._v("#")]),e._v(" constraint")]),e._v(" "),t("p",[e._v("Returns the constraint function associated with this variable.")]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("The constraint function that was passed to the variable constructor. Can be None if no constraint was passed.")]),e._v(" "),t("h3",{attrs:{id:"device"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#device","aria-hidden":"true"}},[e._v("#")]),e._v(" device")]),e._v(" "),t("p",[e._v("The device of this variable.")]),e._v(" "),t("h3",{attrs:{id:"dtype"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dtype","aria-hidden":"true"}},[e._v("#")]),e._v(" dtype")]),e._v(" "),t("p",[e._v("The DType of this variable.")]),e._v(" "),t("h3",{attrs:{id:"graph"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#graph","aria-hidden":"true"}},[e._v("#")]),e._v(" graph")]),e._v(" "),t("p",[e._v("The Graph of this variable.")]),e._v(" "),t("h3",{attrs:{id:"initial-value"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#initial-value","aria-hidden":"true"}},[e._v("#")]),e._v(" initial_value")]),e._v(" "),t("p",[e._v("Returns the Tensor used as the initial value for the variable.")]),e._v(" "),t("p",[e._v("Note that this is different from initialized_value() which runs the op that initializes the variable before returning its value. This method returns the tensor that is used by the op that initializes the variable.")]),e._v(" "),t("h4",{attrs:{id:"returns-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor.")]),e._v(" "),t("h3",{attrs:{id:"initializer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#initializer","aria-hidden":"true"}},[e._v("#")]),e._v(" initializer")]),e._v(" "),t("p",[e._v("The initializer operation for this variable.")]),e._v(" "),t("h3",{attrs:{id:"name"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#name","aria-hidden":"true"}},[e._v("#")]),e._v(" name")]),e._v(" "),t("p",[e._v("The name of this variable.")]),e._v(" "),t("h3",{attrs:{id:"op"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#op","aria-hidden":"true"}},[e._v("#")]),e._v(" op")]),e._v(" "),t("p",[e._v("The Operation of this variable.")]),e._v(" "),t("h3",{attrs:{id:"shape"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shape","aria-hidden":"true"}},[e._v("#")]),e._v(" shape")]),e._v(" "),t("p",[e._v("The TensorShape of this variable.")]),e._v(" "),t("h4",{attrs:{id:"returns-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A TensorShape.")]),e._v(" "),t("h3",{attrs:{id:"synchronization"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#synchronization","aria-hidden":"true"}},[e._v("#")]),e._v(" synchronization")]),e._v(" "),t("h3",{attrs:{id:"trainable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#trainable","aria-hidden":"true"}},[e._v("#")]),e._v(" trainable")]),e._v(" "),t("h2",{attrs:{id:"methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),t("h3",{attrs:{id:"abs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#abs","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("abs")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/math_ops.py#L245-L278",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __abs__(\n    x,\n    name=None\n)\n")])])]),t("p",[e._v("Computes the absolute value of a tensor.")]),e._v(" "),t("p",[e._v("Given a tensor of integer or floating-point values, this operation returns a tensor of the same type, where each element contains the absolute value of the corresponding element in the input.")]),e._v(" "),t("p",[e._v("Given a tensor x of complex numbers, this operation returns a tensor of type float32 or float64 that is the absolute value of each element in x. All elements in x must be complex numbers of the form\n. The absolute value is computed as\n. For example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" x = tf.constant([[-2.25 + 4.75j], [-3.25 + 5.75j]])\ntf.abs(x)  # [5.25594902, 6.60492229]\n")])])]),t("h4",{attrs:{id:"args-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" or "),t("code",[e._v("SparseTensor")]),e._v(" of type "),t("code",[e._v("float16")]),e._v(", "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("complex64")]),e._v(" or "),t("code",[e._v("complex128")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor or SparseTensor the same size, type, and sparsity as x with absolute values. Note, for complex64 or complex128 input, the returned Tensor will be of type float32 or float64, respectively.")]),e._v(" "),t("h3",{attrs:{id:"add"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("add")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __add__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Dispatches to add for strings and add_v2 for all other types.")]),e._v(" "),t("h3",{attrs:{id:"and"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#and","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("and")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __and__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Returns the truth value of x AND y element-wise.\n"),t("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("NOTE: math.logical_and supports broadcasting. More about broadcasting")]),e._v(" "),t("h4",{attrs:{id:"args-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of type "),t("code",[e._v("bool")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of t"),t("code",[e._v("y")]),e._v("pe "),t("code",[e._v("bool")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of type bool.")]),e._v(" "),t("h3",{attrs:{id:"div"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#div","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("div")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __div__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Divide two values using Python 2 semantics.")]),e._v(" "),t("p",[e._v("Used for Tensor.div.")]),e._v(" "),t("h4",{attrs:{id:"args-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(" numerator of real numeric type.")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(" denominator of real numeric t"),t("code",[e._v("y")]),e._v("pe.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("x / y returns the quotient of x and y.")]),e._v(" "),t("h3",{attrs:{id:"eq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eq","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("eq")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L1092-L1101",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __eq__(other)\n")])])]),t("p",[e._v("Compares two variables element-wise for equality.")]),e._v(" "),t("h3",{attrs:{id:"floordiv"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#floordiv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("floordiv")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __floordiv__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Divides x / y elementwise, rounding toward the most negative integer.\n"),t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/RaggedTensor#__div__",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.div(x,y)"),t("OutboundLink")],1),e._v("The same as  for integers, but uses tf.floor() for floating point arguments so that the result is always an integer (though possibly an integer represented as floating point). This op is generated by x // y floor division in Python 3 and in Python 2.7 with from "),t("strong",[e._v("future")]),e._v(" import division.")]),e._v(" "),t("p",[e._v("x and y must have the same type, and the result will have the same type as well.")]),e._v(" "),t("h4",{attrs:{id:"args-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(" numerator of real numeric type.")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(" denominator of real numeric t"),t("code",[e._v("y")]),e._v("pe.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("x / y rounded down.")]),e._v(" "),t("h4",{attrs:{id:"raises-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": If the inputs are complex.")])]),e._v(" "),t("h3",{attrs:{id:"ge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ge","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("ge")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L4437-L4494",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __ge__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Returns the truth value of (x >= y) element-wise.\n"),t("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("NOTE: math.greater_equal supports broadcasting. More about broadcasting")]),e._v(" "),t("h4",{attrs:{id:"args-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("uint8")]),e._v(", "),t("code",[e._v("int16")]),e._v(", "),t("code",[e._v("int8")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("bfloat16")]),e._v(", "),t("code",[e._v("uint16")]),e._v(", "),t("code",[e._v("half")]),e._v(", "),t("code",[e._v("uint32")]),e._v(", "),t("code",[e._v("uint64")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must have the same t"),t("code",[e._v("y")]),e._v("pe as "),t("code",[e._v("x")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of type bool.")]),e._v(" "),t("h3",{attrs:{id:"getitem"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getitem","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("getitem")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/array_ops.py#L1010-L1053",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __getitem__(\n    var,\n    slice_spec\n)\n")])])]),t("p",[e._v("Creates a slice helper object given a variable.\n"),t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/Tensor#__getitem__",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.Tensor.getitem"),t("OutboundLink")],1),e._v("This allows creating a sub-tensor from part of the current contents of a variable. See  for detailed examples of slicing.")]),e._v(" "),t("p",[e._v("This function in addition also allows assignment to a sliced range. This is similar to "),t("strong",[e._v("setitem")]),e._v(" functionality in Python. However, the syntax is different so that the user can capture the assignment operation for grouping or passing to sess.run(). For example,")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" import tensorflow as tf\nA = tf.Variable([[1,2,3], [4,5,6], [7,8,9]], dtype=tf.float32)\nwith tf.compat.v1.Session() as sess:\n  sess.run(tf.compat.v1.global_variables_initializer())\n  print(sess.run(A[:2, :2]))  # => [[1,2], [4,5]]\n\n  op = A[:2,:2].assign(22. * tf.ones((2, 2)))\n  print(sess.run(op))  # => [[22, 22, 3], [22, 22, 6], [7,8,9]]\n")])])]),t("p",[e._v("Note that assignments currently do not support NumPy broadcasting semantics.")]),e._v(" "),t("h4",{attrs:{id:"args-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("var")]),e._v(": An "),t("code",[e._v("ops.Variable")]),e._v(" object.")]),e._v(" "),t("li",[t("code",[e._v("slice_spec")]),e._v(": The arguments to "),t("code",[e._v("Tensor.__getitem__")]),e._v(".")])]),e._v(" "),t("h4",{attrs:{id:"returns-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v('The appropriate slice of "tensor", based on "slice_spec". As an operator. The operator also has a assign() method that can be used to generate an assignment operator.')]),e._v(" "),t("h4",{attrs:{id:"raises-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ValueError")]),e._v(": If a slice range is negative size.")]),e._v(" "),t("li",[t("code",[e._v("TypeError")]),e._v(": "),t("code",[e._v("TypeError")]),e._v(": If the slice indices aren't int, slice, ellipsis, tf.newaxis or int32/int64 tensors.")])]),e._v(" "),t("h3",{attrs:{id:"gt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gt","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("gt")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L4354-L4411",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __gt__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Returns the truth value of (x > y) element-wise.\n"),t("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("NOTE: math.greater supports broadcasting. More about broadcasting")]),e._v(" "),t("h4",{attrs:{id:"args-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("uint8")]),e._v(", "),t("code",[e._v("int16")]),e._v(", "),t("code",[e._v("int8")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("bfloat16")]),e._v(", "),t("code",[e._v("uint16")]),e._v(", "),t("code",[e._v("half")]),e._v(", "),t("code",[e._v("uint32")]),e._v(", "),t("code",[e._v("uint64")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must have the same t"),t("code",[e._v("y")]),e._v("pe as "),t("code",[e._v("x")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of type bool.")]),e._v(" "),t("h3",{attrs:{id:"invert"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#invert","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("invert")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L5922-L5975",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __invert__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Returns the truth value of NOT x element-wise.")]),e._v(" "),t("h4",{attrs:{id:"args-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of type "),t("code",[e._v("bool")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of type bool.")]),e._v(" "),t("h3",{attrs:{id:"iter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#iter","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("iter")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L1116-L1128",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __iter__()\n")])])]),t("p",[e._v("Dummy method to prevent iteration.")]),e._v(" "),t("p",[e._v("Do not call.")]),e._v(" "),t("p",[e._v("NOTE(mrry): If we register getitem as an overloaded operator, Python will valiantly attempt to iterate over the variable's Tensor from 0 to infinity. Declaring this method prevents this unintended behavior.")]),e._v(" "),t("h4",{attrs:{id:"raises-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": when invoked.")])]),e._v(" "),t("h3",{attrs:{id:"le"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#le","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("le")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L5419-L5476",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __le__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Returns the truth value of (x <= y) element-wise.\n"),t("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("NOTE: math.less_equal supports broadcasting. More about broadcasting")]),e._v(" "),t("h4",{attrs:{id:"args-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("uint8")]),e._v(", "),t("code",[e._v("int16")]),e._v(", "),t("code",[e._v("int8")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("bfloat16")]),e._v(", "),t("code",[e._v("uint16")]),e._v(", "),t("code",[e._v("half")]),e._v(", "),t("code",[e._v("uint32")]),e._v(", "),t("code",[e._v("uint64")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must have the same t"),t("code",[e._v("y")]),e._v("pe as "),t("code",[e._v("x")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of type bool.")]),e._v(" "),t("h3",{attrs:{id:"lt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lt","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("lt")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L5336-L5393",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __lt__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Returns the truth value of (x < y) element-wise.\n"),t("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("NOTE: math.less supports broadcasting. More about broadcasting")]),e._v(" "),t("h4",{attrs:{id:"args-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("uint8")]),e._v(", "),t("code",[e._v("int16")]),e._v(", "),t("code",[e._v("int8")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("bfloat16")]),e._v(", "),t("code",[e._v("uint16")]),e._v(", "),t("code",[e._v("half")]),e._v(", "),t("code",[e._v("uint32")]),e._v(", "),t("code",[e._v("uint64")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must have the same t"),t("code",[e._v("y")]),e._v("pe as "),t("code",[e._v("x")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-13"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of type bool.")]),e._v(" "),t("h3",{attrs:{id:"matmul"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#matmul","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("matmul")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __matmul__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Multiplies matrix a by matrix b, producing a * b.")]),e._v(" "),t("p",[e._v("The inputs must, following any transpositions, be tensors of rank >= 2 where the inner 2 dimensions specify valid matrix multiplication arguments, and any further outer dimensions match.")]),e._v(" "),t("p",[e._v("Both matrices must be of the same type. The supported types are: float16, float32, float64, int32, complex64, complex128.")]),e._v(" "),t("p",[e._v("Either matrix can be transposed or adjointed (conjugated and transposed) on the fly by setting one of the corresponding flag to True. These are False by default.")]),e._v(" "),t("p",[e._v("If one or both of the matrices contain a lot of zeros, a more efficient multiplication algorithm can be used by setting the corresponding a_is_sparse or b_is_sparse flag to True. These are False by default. This optimization is only available for plain matrices (rank-2 tensors) with datatypes bfloat16 or float32.")]),e._v(" "),t("h4",{attrs:{id:"for-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" # 2-D tensor `a`\n# [[1, 2, 3],\n#  [4, 5, 6]]\na = tf.constant([1, 2, 3, 4, 5, 6], shape=[2, 3])\n\n# 2-D tensor `b`\n# [[ 7,  8],\n#  [ 9, 10],\n#  [11, 12]]\nb = tf.constant([7, 8, 9, 10, 11, 12], shape=[3, 2])\n\n# `a` * `b`\n# [[ 58,  64],\n#  [139, 154]]\nc = tf.matmul(a, b)\n\n\n# 3-D tensor `a`\n# [[[ 1,  2,  3],\n#   [ 4,  5,  6]],\n#  [[ 7,  8,  9],\n#   [10, 11, 12]]]\na = tf.constant(np.arange(1, 13, dtype=np.int32),\n                shape=[2, 2, 3])\n\n# 3-D tensor `b`\n# [[[13, 14],\n#   [15, 16],\n#   [17, 18]],\n#  [[19, 20],\n#   [21, 22],\n#   [23, 24]]]\nb = tf.constant(np.arange(13, 25, dtype=np.int32),\n                shape=[2, 3, 2])\n\n# `a` * `b`\n# [[[ 94, 100],\n#   [229, 244]],\n#  [[508, 532],\n#   [697, 730]]]\nc = tf.matmul(a, b)\n\n# Since python >= 3.5 the @ operator is supported (see PEP 465).\n# In TensorFlow, it simply calls the `tf.matmul()` function, so the\n# following lines are equivalent:\nd = a @ b @ [[10.], [11.]]\nd = tf.matmul(tf.matmul(a, b), [[10.], [11.]])\n")])])]),t("h4",{attrs:{id:"args-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("a")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(" of type "),t("code",[e._v("float16")]),e._v(", "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("complex64")]),e._v(", "),t("code",[e._v("complex128")]),e._v(" "),t("code",[e._v("a")]),e._v("nd r"),t("code",[e._v("a")]),e._v("nk > 1.")]),e._v(" "),t("li",[t("code",[e._v("b")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(" with s"),t("code",[e._v("a")]),e._v("me type "),t("code",[e._v("a")]),e._v("nd r"),t("code",[e._v("a")]),e._v("nk "),t("code",[e._v("a")]),e._v("s "),t("code",[e._v("a")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("transpose_a")]),e._v(": If "),t("code",[e._v("True")]),e._v(", "),t("code",[e._v("a")]),e._v(" is tr"),t("code",[e._v("a")]),e._v("nsposed "),t("code",[e._v("b")]),e._v("efore multiplic"),t("code",[e._v("a")]),e._v("tion.")]),e._v(" "),t("li",[t("code",[e._v("transpose_b")]),e._v(": If "),t("code",[e._v("True")]),e._v(", "),t("code",[e._v("b")]),e._v(" is tr"),t("code",[e._v("a")]),e._v("nsposed "),t("code",[e._v("b")]),e._v("efore multiplic"),t("code",[e._v("a")]),e._v("tion.")]),e._v(" "),t("li",[t("code",[e._v("a")]),e._v("djoint_"),t("code",[e._v("a")]),e._v(": If "),t("code",[e._v("True")]),e._v(", "),t("code",[e._v("a")]),e._v(" is conjug"),t("code",[e._v("a")]),e._v("ted "),t("code",[e._v("a")]),e._v("nd tr"),t("code",[e._v("a")]),e._v("nsposed "),t("code",[e._v("b")]),e._v("efore multiplic"),t("code",[e._v("a")]),e._v("tion.")]),e._v(" "),t("li",[t("code",[e._v("a")]),e._v("djoint_"),t("code",[e._v("b")]),e._v(": If "),t("code",[e._v("True")]),e._v(", "),t("code",[e._v("b")]),e._v(" is conjug"),t("code",[e._v("a")]),e._v("ted "),t("code",[e._v("a")]),e._v("nd tr"),t("code",[e._v("a")]),e._v("nsposed "),t("code",[e._v("b")]),e._v("efore multiplic"),t("code",[e._v("a")]),e._v("tion.")]),e._v(" "),t("li",[t("code",[e._v("a")]),e._v("_is_sp"),t("code",[e._v("a")]),e._v("rse: If "),t("code",[e._v("True")]),e._v(", "),t("code",[e._v("a")]),e._v(" is tre"),t("code",[e._v("a")]),e._v("ted "),t("code",[e._v("a")]),e._v("s "),t("code",[e._v("a")]),e._v(" sp"),t("code",[e._v("a")]),e._v("rse m"),t("code",[e._v("a")]),e._v("trix.")]),e._v(" "),t("li",[t("code",[e._v("b")]),e._v("_is_sp"),t("code",[e._v("a")]),e._v("rse: If "),t("code",[e._v("True")]),e._v(", "),t("code",[e._v("b")]),e._v(" is tre"),t("code",[e._v("a")]),e._v("ted "),t("code",[e._v("a")]),e._v("s "),t("code",[e._v("a")]),e._v(" sp"),t("code",[e._v("a")]),e._v("rse m"),t("code",[e._v("a")]),e._v("trix.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": N"),t("code",[e._v("a")]),e._v("me for the oper"),t("code",[e._v("a")]),e._v("tion (option"),t("code",[e._v("a")]),e._v("l).")])]),e._v(" "),t("h4",{attrs:{id:"returns-14"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of the same type as a and b where each inner-most matrix is the product of the corresponding matrices in a and b, e.g. if all transpose or adjoint attributes are False:")]),e._v(" "),t("p",[e._v("output[..., i, j] = sum_k (a[..., i, k] * b[..., k, j]), for all indices i, j.")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Note")]),e._v(": This is matrix product, not element-wise product.")])]),e._v(" "),t("h4",{attrs:{id:"raises-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ValueError")]),e._v(": If transpose_a and adjoint_a, or transpose_b and adjoint_b are both set to True.")])]),e._v(" "),t("h3",{attrs:{id:"mod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mod","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("mod")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __mod__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Returns element-wise remainder of division. When x < 0 xor y < 0 is")]),e._v(" "),t("p",[e._v("true, this follows Python semantics in that the result here is consistent with a flooring divide. E.g. floor(x / y) * y + mod(x, y) = x.\n"),t("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("NOTE: math.floormod supports broadcasting. More about broadcasting")]),e._v(" "),t("h4",{attrs:{id:"args-13"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("bfloat16")]),e._v(", "),t("code",[e._v("half")]),e._v(", "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must have the same t"),t("code",[e._v("y")]),e._v("pe as "),t("code",[e._v("x")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-15"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor. Has the same type as x.")]),e._v(" "),t("h3",{attrs:{id:"mul"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mul","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("mul")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __mul__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v('Dispatches cwise mul for "DenseDense" and "DenseSparse".')]),e._v(" "),t("h3",{attrs:{id:"ne"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ne","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("ne")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L1104-L1114",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __ne__(other)\n")])])]),t("p",[e._v("Compares two variables element-wise for equality.")]),e._v(" "),t("h3",{attrs:{id:"neg"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#neg","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("neg")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L6802-L6857",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __neg__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Computes numerical negative value element-wise.")]),e._v(" "),t("p",[e._v("I.e.,\n.")]),e._v(" "),t("h4",{attrs:{id:"args-14"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),t("code",[e._v("bfloat16")]),e._v(", "),t("code",[e._v("half")]),e._v(", "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("complex64")]),e._v(", "),t("code",[e._v("complex128")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor. Has the same type as x.")]),e._v(" "),t("h3",{attrs:{id:"or"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#or","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("or")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __or__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Returns the truth value of x OR y element-wise.\n"),t("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("NOTE: math.logical_or supports broadcasting. More about broadcasting")]),e._v(" "),t("h4",{attrs:{id:"args-15"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of type "),t("code",[e._v("bool")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of t"),t("code",[e._v("y")]),e._v("pe "),t("code",[e._v("bool")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-17"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-17","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of type bool.")]),e._v(" "),t("h3",{attrs:{id:"pow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pow","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("pow")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __pow__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Computes the power of one value to another.")]),e._v(" "),t("p",[e._v("Given a tensor x and a tensor y, this operation computes\nfor corresponding elements in x and y. For example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" x = tf.constant([[2, 2], [3, 3]])\ny = tf.constant([[8, 16], [2, 3]])\ntf.pow(x, y)  # [[256, 65536], [9, 27]]\n")])])]),t("h4",{attrs:{id:"args-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of type "),t("code",[e._v("float16")]),e._v(", "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("complex64")]),e._v(", or "),t("code",[e._v("complex128")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of t"),t("code",[e._v("y")]),e._v("pe "),t("code",[e._v("float16")]),e._v(", "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("complex64")]),e._v(", or "),t("code",[e._v("complex128")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-18"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-18","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor.")]),e._v(" "),t("h3",{attrs:{id:"radd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#radd","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("radd")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __radd__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Dispatches to add for strings and add_v2 for all other types.")]),e._v(" "),t("h3",{attrs:{id:"rand"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rand","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("rand")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __rand__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Returns the truth value of x AND y element-wise.\n"),t("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("NOTE: math.logical_and supports broadcasting. More about broadcasting")]),e._v(" "),t("h4",{attrs:{id:"args-17"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-17","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of type "),t("code",[e._v("bool")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of t"),t("code",[e._v("y")]),e._v("pe "),t("code",[e._v("bool")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-19"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-19","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of type bool.")]),e._v(" "),t("h3",{attrs:{id:"rdiv"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rdiv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("rdiv")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __rdiv__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Divide two values using Python 2 semantics.")]),e._v(" "),t("p",[e._v("Used for Tensor.div.")]),e._v(" "),t("h4",{attrs:{id:"args-18"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-18","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(" numerator of real numeric type.")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(" denominator of real numeric t"),t("code",[e._v("y")]),e._v("pe.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-20"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-20","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("x / y returns the quotient of x and y.")]),e._v(" "),t("h3",{attrs:{id:"rfloordiv"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rfloordiv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("rfloordiv")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __rfloordiv__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Divides x / y elementwise, rounding toward the most negative integer.\n"),t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/RaggedTensor#__div__",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.div(x,y)"),t("OutboundLink")],1),e._v("The same as  for integers, but uses tf.floor() for floating point arguments so that the result is always an integer (though possibly an integer represented as floating point). This op is generated by x // y floor division in Python 3 and in Python 2.7 with from "),t("strong",[e._v("future")]),e._v(" import division.")]),e._v(" "),t("p",[e._v("x and y must have the same type, and the result will have the same type as well.")]),e._v(" "),t("h4",{attrs:{id:"args-19"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-19","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(" numerator of real numeric type.")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(" denominator of real numeric t"),t("code",[e._v("y")]),e._v("pe.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-21"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-21","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("x / y rounded down.")]),e._v(" "),t("h4",{attrs:{id:"raises-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": If the inputs are complex.")])]),e._v(" "),t("h3",{attrs:{id:"rmatmul"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rmatmul","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("rmatmul")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __rmatmul__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Multiplies matrix a by matrix b, producing a * b.")]),e._v(" "),t("p",[e._v("The inputs must, following any transpositions, be tensors of rank >= 2 where the inner 2 dimensions specify valid matrix multiplication arguments, and any further outer dimensions match.")]),e._v(" "),t("p",[e._v("Both matrices must be of the same type. The supported types are: float16, float32, float64, int32, complex64, complex128.")]),e._v(" "),t("p",[e._v("Either matrix can be transposed or adjointed (conjugated and transposed) on the fly by setting one of the corresponding flag to True. These are False by default.")]),e._v(" "),t("p",[e._v("If one or both of the matrices contain a lot of zeros, a more efficient multiplication algorithm can be used by setting the corresponding a_is_sparse or b_is_sparse flag to True. These are False by default. This optimization is only available for plain matrices (rank-2 tensors) with datatypes bfloat16 or float32.")]),e._v(" "),t("h4",{attrs:{id:"for-example-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-example-2","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" # 2-D tensor `a`\n# [[1, 2, 3],\n#  [4, 5, 6]]\na = tf.constant([1, 2, 3, 4, 5, 6], shape=[2, 3])\n\n# 2-D tensor `b`\n# [[ 7,  8],\n#  [ 9, 10],\n#  [11, 12]]\nb = tf.constant([7, 8, 9, 10, 11, 12], shape=[3, 2])\n\n# `a` * `b`\n# [[ 58,  64],\n#  [139, 154]]\nc = tf.matmul(a, b)\n\n\n# 3-D tensor `a`\n# [[[ 1,  2,  3],\n#   [ 4,  5,  6]],\n#  [[ 7,  8,  9],\n#   [10, 11, 12]]]\na = tf.constant(np.arange(1, 13, dtype=np.int32),\n                shape=[2, 2, 3])\n\n# 3-D tensor `b`\n# [[[13, 14],\n#   [15, 16],\n#   [17, 18]],\n#  [[19, 20],\n#   [21, 22],\n#   [23, 24]]]\nb = tf.constant(np.arange(13, 25, dtype=np.int32),\n                shape=[2, 3, 2])\n\n# `a` * `b`\n# [[[ 94, 100],\n#   [229, 244]],\n#  [[508, 532],\n#   [697, 730]]]\nc = tf.matmul(a, b)\n\n# Since python >= 3.5 the @ operator is supported (see PEP 465).\n# In TensorFlow, it simply calls the `tf.matmul()` function, so the\n# following lines are equivalent:\nd = a @ b @ [[10.], [11.]]\nd = tf.matmul(tf.matmul(a, b), [[10.], [11.]])\n")])])]),t("h4",{attrs:{id:"args-20"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-20","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("a")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(" of type "),t("code",[e._v("float16")]),e._v(", "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("complex64")]),e._v(", "),t("code",[e._v("complex128")]),e._v(" "),t("code",[e._v("a")]),e._v("nd r"),t("code",[e._v("a")]),e._v("nk > 1.")]),e._v(" "),t("li",[t("code",[e._v("b")]),e._v(": "),t("code",[e._v("Tensor")]),e._v(" with s"),t("code",[e._v("a")]),e._v("me type "),t("code",[e._v("a")]),e._v("nd r"),t("code",[e._v("a")]),e._v("nk "),t("code",[e._v("a")]),e._v("s "),t("code",[e._v("a")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("transpose_a")]),e._v(": If "),t("code",[e._v("True")]),e._v(", "),t("code",[e._v("a")]),e._v(" is tr"),t("code",[e._v("a")]),e._v("nsposed "),t("code",[e._v("b")]),e._v("efore multiplic"),t("code",[e._v("a")]),e._v("tion.")]),e._v(" "),t("li",[t("code",[e._v("transpose_b")]),e._v(": If "),t("code",[e._v("True")]),e._v(", "),t("code",[e._v("b")]),e._v(" is tr"),t("code",[e._v("a")]),e._v("nsposed "),t("code",[e._v("b")]),e._v("efore multiplic"),t("code",[e._v("a")]),e._v("tion.")]),e._v(" "),t("li",[t("code",[e._v("a")]),e._v("djoint_"),t("code",[e._v("a")]),e._v(": If "),t("code",[e._v("True")]),e._v(", "),t("code",[e._v("a")]),e._v(" is conjug"),t("code",[e._v("a")]),e._v("ted "),t("code",[e._v("a")]),e._v("nd tr"),t("code",[e._v("a")]),e._v("nsposed "),t("code",[e._v("b")]),e._v("efore multiplic"),t("code",[e._v("a")]),e._v("tion.")]),e._v(" "),t("li",[t("code",[e._v("a")]),e._v("djoint_"),t("code",[e._v("b")]),e._v(": If "),t("code",[e._v("True")]),e._v(", "),t("code",[e._v("b")]),e._v(" is conjug"),t("code",[e._v("a")]),e._v("ted "),t("code",[e._v("a")]),e._v("nd tr"),t("code",[e._v("a")]),e._v("nsposed "),t("code",[e._v("b")]),e._v("efore multiplic"),t("code",[e._v("a")]),e._v("tion.")]),e._v(" "),t("li",[t("code",[e._v("a")]),e._v("_is_sp"),t("code",[e._v("a")]),e._v("rse: If "),t("code",[e._v("True")]),e._v(", "),t("code",[e._v("a")]),e._v(" is tre"),t("code",[e._v("a")]),e._v("ted "),t("code",[e._v("a")]),e._v("s "),t("code",[e._v("a")]),e._v(" sp"),t("code",[e._v("a")]),e._v("rse m"),t("code",[e._v("a")]),e._v("trix.")]),e._v(" "),t("li",[t("code",[e._v("b")]),e._v("_is_sp"),t("code",[e._v("a")]),e._v("rse: If "),t("code",[e._v("True")]),e._v(", "),t("code",[e._v("b")]),e._v(" is tre"),t("code",[e._v("a")]),e._v("ted "),t("code",[e._v("a")]),e._v("s "),t("code",[e._v("a")]),e._v(" sp"),t("code",[e._v("a")]),e._v("rse m"),t("code",[e._v("a")]),e._v("trix.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": N"),t("code",[e._v("a")]),e._v("me for the oper"),t("code",[e._v("a")]),e._v("tion (option"),t("code",[e._v("a")]),e._v("l).")])]),e._v(" "),t("h4",{attrs:{id:"returns-22"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-22","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of the same type as a and b where each inner-most matrix is the product of the corresponding matrices in a and b, e.g. if all transpose or adjoint attributes are False:")]),e._v(" "),t("p",[e._v("output[..., i, j] = sum_k (a[..., i, k] * b[..., k, j]), for all indices i, j.")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Note")]),e._v(": This is matrix product, not element-wise product.")])]),e._v(" "),t("h4",{attrs:{id:"raises-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ValueError")]),e._v(": If transpose_a and adjoint_a, or transpose_b and adjoint_b are both set to True.")])]),e._v(" "),t("h3",{attrs:{id:"rmod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rmod","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("rmod")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __rmod__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Returns element-wise remainder of division. When x < 0 xor y < 0 is")]),e._v(" "),t("p",[e._v("true, this follows Python semantics in that the result here is consistent with a flooring divide. E.g. floor(x / y) * y + mod(x, y) = x.\n"),t("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("NOTE: math.floormod supports broadcasting. More about broadcasting")]),e._v(" "),t("h4",{attrs:{id:"args-21"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-21","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("bfloat16")]),e._v(", "),t("code",[e._v("half")]),e._v(", "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must have the same t"),t("code",[e._v("y")]),e._v("pe as "),t("code",[e._v("x")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-23"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-23","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor. Has the same type as x.")]),e._v(" "),t("h3",{attrs:{id:"rmul"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rmul","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("rmul")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __rmul__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v('Dispatches cwise mul for "DenseDense" and "DenseSparse".')]),e._v(" "),t("h3",{attrs:{id:"ror"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ror","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("ror")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __ror__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Returns the truth value of x OR y element-wise.\n"),t("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("NOTE: math.logical_or supports broadcasting. More about broadcasting")]),e._v(" "),t("h4",{attrs:{id:"args-22"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-22","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of type "),t("code",[e._v("bool")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of t"),t("code",[e._v("y")]),e._v("pe "),t("code",[e._v("bool")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-24"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-24","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of type bool.")]),e._v(" "),t("h3",{attrs:{id:"rpow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rpow","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("rpow")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __rpow__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Computes the power of one value to another.")]),e._v(" "),t("p",[e._v("Given a tensor x and a tensor y, this operation computes\nfor corresponding elements in x and y. For example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" x = tf.constant([[2, 2], [3, 3]])\ny = tf.constant([[8, 16], [2, 3]])\ntf.pow(x, y)  # [[256, 65536], [9, 27]]\n")])])]),t("h4",{attrs:{id:"args-23"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-23","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of type "),t("code",[e._v("float16")]),e._v(", "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("complex64")]),e._v(", or "),t("code",[e._v("complex128")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of t"),t("code",[e._v("y")]),e._v("pe "),t("code",[e._v("float16")]),e._v(", "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("complex64")]),e._v(", or "),t("code",[e._v("complex128")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-25"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-25","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor.")]),e._v(" "),t("h3",{attrs:{id:"rsub"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rsub","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("rsub")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __rsub__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Returns x - y element-wise.\n"),t("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("NOTE: Subtract supports broadcasting. More about broadcasting")]),e._v(" "),t("h4",{attrs:{id:"args-24"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-24","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),t("code",[e._v("bfloat16")]),e._v(", "),t("code",[e._v("half")]),e._v(", "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("uint8")]),e._v(", "),t("code",[e._v("int8")]),e._v(", "),t("code",[e._v("uint16")]),e._v(", "),t("code",[e._v("int16")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("complex64")]),e._v(", "),t("code",[e._v("complex128")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must have the same t"),t("code",[e._v("y")]),e._v("pe as "),t("code",[e._v("x")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-26"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-26","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor. Has the same type as x.")]),e._v(" "),t("h3",{attrs:{id:"rtruediv"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rtruediv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("rtruediv")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __rtruediv__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("h3",{attrs:{id:"rxor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rxor","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("rxor")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L922-L925",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __rxor__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Logical XOR function.")]),e._v(" "),t("p",[e._v("x ^ y = (x | y) & ~(x & y)")]),e._v(" "),t("p",[e._v("Inputs are tensor and if the tensors contains more than one element, an element-wise logical XOR is computed.")]),e._v(" "),t("h4",{attrs:{id:"usage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[e._v("#")]),e._v(" Usage:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' x = tf.constant([False, False, True, True], dtype = tf.bool)\ny = tf.constant([False, True, False, True], dtype = tf.bool)\nz = tf.logical_xor(x, y, name="LogicalXor")\n#  here z = [False  True  True False]\n')])])]),t("h4",{attrs:{id:"args-25"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-25","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" type bool.")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of t"),t("code",[e._v("y")]),e._v("pe bool.")])]),e._v(" "),t("h4",{attrs:{id:"returns-27"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-27","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of type bool with the same size as that of x or y.")]),e._v(" "),t("h3",{attrs:{id:"sub"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sub","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("sub")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __sub__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Returns x - y element-wise.\n"),t("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("NOTE: Subtract supports broadcasting. More about broadcasting")]),e._v(" "),t("h4",{attrs:{id:"args-26"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-26","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),t("code",[e._v("bfloat16")]),e._v(", "),t("code",[e._v("half")]),e._v(", "),t("code",[e._v("float32")]),e._v(", "),t("code",[e._v("float64")]),e._v(", "),t("code",[e._v("uint8")]),e._v(", "),t("code",[e._v("int8")]),e._v(", "),t("code",[e._v("uint16")]),e._v(", "),t("code",[e._v("int16")]),e._v(", "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("int64")]),e._v(", "),t("code",[e._v("complex64")]),e._v(", "),t("code",[e._v("complex128")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must have the same t"),t("code",[e._v("y")]),e._v("pe as "),t("code",[e._v("x")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-28"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-28","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor. Has the same type as x.")]),e._v(" "),t("h3",{attrs:{id:"truediv"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#truediv","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("truediv")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __truediv__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("h3",{attrs:{id:"xor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xor","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("xor")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L896-L912",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __xor__(\n    a,\n    *args,\n    **kwargs\n)\n")])])]),t("p",[e._v("Logical XOR function.")]),e._v(" "),t("p",[e._v("x ^ y = (x | y) & ~(x & y)")]),e._v(" "),t("p",[e._v("Inputs are tensor and if the tensors contains more than one element, an element-wise logical XOR is computed.")]),e._v(" "),t("h4",{attrs:{id:"usage-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usage-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Usage:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' x = tf.constant([False, False, True, True], dtype = tf.bool)\ny = tf.constant([False, True, False, True], dtype = tf.bool)\nz = tf.logical_xor(x, y, name="LogicalXor")\n#  here z = [False  True  True False]\n')])])]),t("h4",{attrs:{id:"args-27"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-27","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" type bool.")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(" of t"),t("code",[e._v("y")]),e._v("pe bool.")])]),e._v(" "),t("h4",{attrs:{id:"returns-29"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-29","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor of type bool with the same size as that of x or y.")]),e._v(" "),t("h3",{attrs:{id:"assign"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#assign","aria-hidden":"true"}},[e._v("#")]),e._v(" assign")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L570-L586",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" assign(\n    value,\n    use_locking=False,\n    name=None,\n    read_value=True\n)\n")])])]),t("p",[e._v("Assigns a new value to the variable.")]),e._v(" "),t("p",[e._v("This is essentially a shortcut for assign(self, value).")]),e._v(" "),t("h4",{attrs:{id:"args-28"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-28","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". The new "),t("code",[e._v("value")]),e._v(" for this variable.")]),e._v(" "),t("li",[t("code",[e._v("use_locking")]),e._v(": If "),t("code",[e._v("True")]),e._v(", use locking during the assignment.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": The "),t("code",[e._v("name")]),e._v(" of the operation to be created")]),e._v(" "),t("li",[t("code",[e._v("read_value")]),e._v(": if "),t("code",[e._v("True")]),e._v(", will return something which evaluates to the new "),t("code",[e._v("value")]),e._v(" of the variable; if False will return the assign op.")])]),e._v(" "),t("h4",{attrs:{id:"returns-30"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-30","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the assignment has completed.")]),e._v(" "),t("h3",{attrs:{id:"assign-add"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#assign-add","aria-hidden":"true"}},[e._v("#")]),e._v(" assign_add")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L588-L604",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" assign_add(\n    delta,\n    use_locking=False,\n    name=None,\n    read_value=True\n)\n")])])]),t("p",[e._v("Adds a value to this variable.")]),e._v(" "),t("p",[e._v("This is essentially a shortcut for assign_add(self, delta).")]),e._v(" "),t("h4",{attrs:{id:"args-29"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-29","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("delta")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". The value to add to this variable.")]),e._v(" "),t("li",[t("code",[e._v("use_locking")]),e._v(": If "),t("code",[e._v("True")]),e._v(", use locking during the operation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": The "),t("code",[e._v("name")]),e._v(" of the operation to be created")]),e._v(" "),t("li",[t("code",[e._v("read_value")]),e._v(": if "),t("code",[e._v("True")]),e._v(", will return something which evaluates to the new value of the variable; if False will return the assign op.")])]),e._v(" "),t("h4",{attrs:{id:"returns-31"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-31","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the addition has completed.")]),e._v(" "),t("h3",{attrs:{id:"assign-sub"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#assign-sub","aria-hidden":"true"}},[e._v("#")]),e._v(" assign_sub")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L606-L622",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" assign_sub(\n    delta,\n    use_locking=False,\n    name=None,\n    read_value=True\n)\n")])])]),t("p",[e._v("Subtracts a value from this variable.")]),e._v(" "),t("p",[e._v("This is essentially a shortcut for assign_sub(self, delta).")]),e._v(" "),t("h4",{attrs:{id:"args-30"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-30","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("delta")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". The value to subtract from this variable.")]),e._v(" "),t("li",[t("code",[e._v("use_locking")]),e._v(": If "),t("code",[e._v("True")]),e._v(", use locking during the operation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": The "),t("code",[e._v("name")]),e._v(" of the operation to be created")]),e._v(" "),t("li",[t("code",[e._v("read_value")]),e._v(": if "),t("code",[e._v("True")]),e._v(", will return something which evaluates to the new value of the variable; if False will return the assign op.")])]),e._v(" "),t("h4",{attrs:{id:"returns-32"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-32","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the subtraction has completed.")]),e._v(" "),t("h3",{attrs:{id:"batch-scatter-update"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#batch-scatter-update","aria-hidden":"true"}},[e._v("#")]),e._v(" batch_scatter_update")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L745-L790",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" batch_scatter_update(\n    sparse_delta,\n    use_locking=False,\n    name=None\n)\n")])])]),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/IndexedSlices",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.IndexedSlices"),t("OutboundLink")],1),e._v("Assigns  to this variable batch-wise.")]),e._v(" "),t("p",[e._v("Analogous to batch_gather. This assumes that this variable and the sparse_delta IndexedSlices have a series of leading dimensions that are the same for all of them, and the updates are performed on the last dimension of indices. In other words, the dimensions should be the following:")]),e._v(" "),t("p",[e._v("num_prefix_dims = sparse_delta.indices.ndims - 1 batch_dim = num_prefix_dims + 1 sparse_delta.updates.shape = sparse_delta.indices.shape + var.shape[ batch_dim:]")]),e._v(" "),t("p",[e._v("where")]),e._v(" "),t("p",[e._v("sparse_delta.updates.shape[:num_prefix_dims] == sparse_delta.indices.shape[:num_prefix_dims] == var.shape[:num_prefix_dims]")]),e._v(" "),t("p",[e._v("And the operation performed can be expressed as:")]),e._v(" "),t("p",[e._v("var[i_1, ..., i_n, sparse_delta.indices[i_1, ..., i_n, j]] = sparse_delta.updates[ i_1, ..., i_n, j]")]),e._v(" "),t("p",[e._v("When sparse_delta.indices is a 1D tensor, this operation is equivalent to scatter_update.")]),e._v(" "),t("p",[e._v("To avoid this operation one can looping over the first ndims of the variable and using scatter_update on the subtensors that result of slicing the first dimension. This is a valid option for ndims = 1, but less efficient than this implementation.")]),e._v(" "),t("h4",{attrs:{id:"args-31"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-31","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sparse_delta")]),e._v(": "),t("code",[e._v("tf.IndexedSlices")]),e._v(" to be assigned to this variable.")]),e._v(" "),t("li",[t("code",[e._v("use_locking")]),e._v(": If "),t("code",[e._v("True")]),e._v(", use locking during the operation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": the "),t("code",[e._v("name")]),e._v(" of the operation.")])]),e._v(" "),t("h4",{attrs:{id:"returns-33"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-33","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the scattered assignment has completed.")]),e._v(" "),t("h4",{attrs:{id:"raises-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": if "),t("code",[e._v("sparse_delta")]),e._v(" is not an "),t("code",[e._v("IndexedSlices")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"count-up-to"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#count-up-to","aria-hidden":"true"}},[e._v("#")]),e._v(" count_up_to")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L967-L988",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" count_up_to(limit)\n")])])]),t("p",[e._v("Increments this variable until it reaches limit. (deprecated)")]),e._v(" "),t("p",[e._v("When that Op is run it tries to increment the variable by 1. If incrementing the variable would bring it above limit then the Op raises the exception OutOfRangeError.")]),e._v(" "),t("p",[e._v("If no error is raised, the Op outputs the value of the variable before the increment.")]),e._v(" "),t("p",[e._v("This is essentially a shortcut for count_up_to(self, limit).")]),e._v(" "),t("h4",{attrs:{id:"args-32"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-32","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("limit")]),e._v(": value at which incrementing the variable raises an error.")])]),e._v(" "),t("h4",{attrs:{id:"returns-34"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-34","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the variable value before the increment. If no other Op modifies this variable, the values produced will all be distinct.")]),e._v(" "),t("h3",{attrs:{id:"eval"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eval","aria-hidden":"true"}},[e._v("#")]),e._v(" eval")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L487-L517",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" eval(session=None)\n")])])]),t("p",[e._v("In a session, computes and returns the value of this variable.")]),e._v(" "),t("p",[e._v("This is not a graph construction method, it does not add ops to the graph.\n"),t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/Session",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.Session"),t("OutboundLink")],1),e._v("This convenience method requires a session where the graph containing this variable has been launched. If no session is passed, the default session is used. See  for more information on launching a graph and on sessions.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" v = tf.Variable([1, 2])\ninit = tf.compat.v1.global_variables_initializer()\n\nwith tf.compat.v1.Session() as sess:\n    sess.run(init)\n    # Usage passing the session explicitly.\n    print(v.eval(sess))\n    # Usage with the default session.  The 'with' block\n    # above makes 'sess' the default session.\n    print(v.eval())\n")])])]),t("h4",{attrs:{id:"args-33"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-33","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("session")]),e._v(": The "),t("code",[e._v("session")]),e._v(" to use to evaluate this variable. If none, the default "),t("code",[e._v("session")]),e._v(" is used.")])]),e._v(" "),t("h4",{attrs:{id:"returns-35"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-35","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A numpy ndarray with a copy of the value of this variable.")]),e._v(" "),t("h3",{attrs:{id:"experimental-ref"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#experimental-ref","aria-hidden":"true"}},[e._v("#")]),e._v(" experimental_ref")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L1226-L1277",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" experimental_ref()\n")])])]),t("p",[e._v("Returns a hashable reference object to this Variable.")]),e._v(" "),t("p",[e._v("The primary usecase for this API is to put variables in a set/dictionary. We can't put variables in a set/dictionary as variable."),t("strong",[e._v("hash")]),e._v("() is no longer available starting Tensorflow 2.0.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" import tensorflow as tf\n\nx = tf.Variable(5)\ny = tf.Variable(10)\nz = tf.Variable(10)\n\n# The followings will raise an exception starting 2.0\n# TypeError: Variable is unhashable if Variable equality is enabled.\nvariable_set = {x, y, z}\nvariable_dict = {x: 'five', y: 'ten'}\n")])])]),t("p",[e._v("Instead, we can use variable.experimental_ref().")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" variable_set = {x.experimental_ref(),\n                y.experimental_ref(),\n                z.experimental_ref()}\n\nprint(x.experimental_ref() in variable_set)\n==> True\n\nvariable_dict = {x.experimental_ref(): 'five',\n                 y.experimental_ref(): 'ten',\n                 z.experimental_ref(): 'ten'}\n\nprint(variable_dict[y.experimental_ref()])\n==> ten\n")])])]),t("p",[e._v("Also, the reference object provides .deref() function that returns the original Variable.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" x = tf.Variable(5)\nprint(x.experimental_ref().deref())\n==> <tf.Variable 'Variable:0' shape=() dtype=int32, numpy=5>\n")])])]),t("h3",{attrs:{id:"from-proto"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#from-proto","aria-hidden":"true"}},[e._v("#")]),e._v(" from_proto")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L1210-L1213",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" from_proto(\n    variable_def,\n    import_scope=None\n)\n")])])]),t("p",[e._v("Returns a Variable object created from variable_def.")]),e._v(" "),t("h3",{attrs:{id:"gather-nd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gather-nd","aria-hidden":"true"}},[e._v("#")]),e._v(" gather_nd")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L952-L965",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" gather_nd(\n    indices,\n    name=None\n)\n")])])]),t("p",[e._v("Gather slices from params into a Tensor with shape specified by indices.")]),e._v(" "),t("p",[e._v("See tf.gather_nd for details.")]),e._v(" "),t("h4",{attrs:{id:"args-34"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-34","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("indices")]),e._v(": A "),t("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),t("code",[e._v("int32")]),e._v(", "),t("code",[e._v("int64")]),e._v(". Index tensor.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": A "),t("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),t("h4",{attrs:{id:"returns-36"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-36","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor. Has the same type as params.")]),e._v(" "),t("h3",{attrs:{id:"get-shape"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" get_shape")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L1190-L1192",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" get_shape()\n")])])]),t("p",[e._v("Alias of Variable.shape.")]),e._v(" "),t("h3",{attrs:{id:"initialized-value"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#initialized-value","aria-hidden":"true"}},[e._v("#")]),e._v(" initialized_value")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L519-L544",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" initialized_value()\n")])])]),t("p",[e._v("Returns the value of the initialized variable. (deprecated)")]),e._v(" "),t("p",[e._v("You should use this instead of the variable itself to initialize another variable with a value that depends on the value of this variable.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" # Initialize 'v' with a random tensor.\nv = tf.Variable(tf.random.truncated_normal([10, 40]))\n# Use `initialized_value` to guarantee that `v` has been\n# initialized before its value is used to initialize `w`.\n# The random values are picked only once.\nw = tf.Variable(v.initialized_value() * 2.0)\n")])])]),t("h4",{attrs:{id:"returns-37"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-37","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor holding the value of this variable after its initializer has run.")]),e._v(" "),t("h3",{attrs:{id:"load"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#load","aria-hidden":"true"}},[e._v("#")]),e._v(" load")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L990-L1033",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" load(\n    value,\n    session=None\n)\n")])])]),t("p",[e._v("Load new value into this variable. (deprecated)")]),e._v(" "),t("p",[e._v("Writes new value to variable's memory. Doesn't add ops to the graph.\n"),t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/Session",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.Session"),t("OutboundLink")],1),e._v("This convenience method requires a session where the graph containing this variable has been launched. If no session is passed, the default session is used. See  for more information on launching a graph and on sessions.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" v = tf.Variable([1, 2])\ninit = tf.compat.v1.global_variables_initializer()\n\nwith tf.compat.v1.Session() as sess:\n    sess.run(init)\n    # Usage passing the session explicitly.\n    v.load([2, 3], sess)\n    print(v.eval(sess)) # prints [2 3]\n    # Usage with the default session.  The 'with' block\n    # above makes 'sess' the default session.\n    v.load([3, 4], sess)\n    print(v.eval()) # prints [3 4]\n")])])]),t("h4",{attrs:{id:"args-35"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-35","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(": New variable "),t("code",[e._v("value")])]),e._v(" "),t("li",[t("code",[e._v("session")]),e._v(": The "),t("code",[e._v("session")]),e._v(" to use to evaluate this variable. If none, the default "),t("code",[e._v("session")]),e._v(" is used.")])]),e._v(" "),t("h4",{attrs:{id:"raises-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ValueError")]),e._v(": Session is not passed and no default session")])]),e._v(" "),t("h3",{attrs:{id:"read-value"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#read-value","aria-hidden":"true"}},[e._v("#")]),e._v(" read_value")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L456-L465",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" read_value()\n")])])]),t("p",[e._v("Returns the value of this variable, read in the current context.")]),e._v(" "),t("p",[e._v("Can be different from value() if it's on another device, with control dependencies, etc.")]),e._v(" "),t("h4",{attrs:{id:"returns-38"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-38","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor containing the value of the variable.")]),e._v(" "),t("h3",{attrs:{id:"scatter-add"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scatter-add","aria-hidden":"true"}},[e._v("#")]),e._v(" scatter_add")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L641-L656",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" scatter_add(\n    sparse_delta,\n    use_locking=False,\n    name=None\n)\n")])])]),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/IndexedSlices",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.IndexedSlices"),t("OutboundLink")],1),e._v("Adds  to this variable.")]),e._v(" "),t("h4",{attrs:{id:"args-36"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-36","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sparse_delta")]),e._v(": "),t("code",[e._v("tf.IndexedSlices")]),e._v(" to be added to this variable.")]),e._v(" "),t("li",[t("code",[e._v("use_locking")]),e._v(": If "),t("code",[e._v("True")]),e._v(", use locking during the operation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": the "),t("code",[e._v("name")]),e._v(" of the operation.")])]),e._v(" "),t("h4",{attrs:{id:"returns-39"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-39","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the scattered addition has completed.")]),e._v(" "),t("h4",{attrs:{id:"raises-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-10","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": if "),t("code",[e._v("sparse_delta")]),e._v(" is not an "),t("code",[e._v("IndexedSlices")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"scatter-div"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scatter-div","aria-hidden":"true"}},[e._v("#")]),e._v(" scatter_div")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L711-L726",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" scatter_div(\n    sparse_delta,\n    use_locking=False,\n    name=None\n)\n")])])]),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/IndexedSlices",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.IndexedSlices"),t("OutboundLink")],1),e._v("Divide this variable by .")]),e._v(" "),t("h4",{attrs:{id:"args-37"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-37","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sparse_delta")]),e._v(": "),t("code",[e._v("tf.IndexedSlices")]),e._v(" to divide this variable by.")]),e._v(" "),t("li",[t("code",[e._v("use_locking")]),e._v(": If "),t("code",[e._v("True")]),e._v(", use locking during the operation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": the "),t("code",[e._v("name")]),e._v(" of the operation.")])]),e._v(" "),t("h4",{attrs:{id:"returns-40"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-40","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the scattered division has completed.")]),e._v(" "),t("h4",{attrs:{id:"raises-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": if "),t("code",[e._v("sparse_delta")]),e._v(" is not an "),t("code",[e._v("IndexedSlices")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"scatter-max"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scatter-max","aria-hidden":"true"}},[e._v("#")]),e._v(" scatter_max")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L658-L674",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" scatter_max(\n    sparse_delta,\n    use_locking=False,\n    name=None\n)\n")])])]),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/IndexedSlices",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.IndexedSlices"),t("OutboundLink")],1),e._v("Updates this variable with the max of  and itself.")]),e._v(" "),t("h4",{attrs:{id:"args-38"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-38","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sparse_delta")]),e._v(": "),t("code",[e._v("tf.IndexedSlices")]),e._v(" to use as an argument of max with this variable.")]),e._v(" "),t("li",[t("code",[e._v("use_locking")]),e._v(": If "),t("code",[e._v("True")]),e._v(", use locking during the operation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": the "),t("code",[e._v("name")]),e._v(" of the operation.")])]),e._v(" "),t("h4",{attrs:{id:"returns-41"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-41","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the scattered maximization has completed.")]),e._v(" "),t("h4",{attrs:{id:"raises-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-12","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": if "),t("code",[e._v("sparse_delta")]),e._v(" is not an "),t("code",[e._v("IndexedSlices")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"scatter-min"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scatter-min","aria-hidden":"true"}},[e._v("#")]),e._v(" scatter_min")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L676-L692",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" scatter_min(\n    sparse_delta,\n    use_locking=False,\n    name=None\n)\n")])])]),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/IndexedSlices",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.IndexedSlices"),t("OutboundLink")],1),e._v("Updates this variable with the min of  and itself.")]),e._v(" "),t("h4",{attrs:{id:"args-39"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-39","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sparse_delta")]),e._v(": "),t("code",[e._v("tf.IndexedSlices")]),e._v(" to use as an argument of min with this variable.")]),e._v(" "),t("li",[t("code",[e._v("use_locking")]),e._v(": If "),t("code",[e._v("True")]),e._v(", use locking during the operation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": the "),t("code",[e._v("name")]),e._v(" of the operation.")])]),e._v(" "),t("h4",{attrs:{id:"returns-42"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-42","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the scattered minimization has completed.")]),e._v(" "),t("h4",{attrs:{id:"raises-13"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-13","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": if "),t("code",[e._v("sparse_delta")]),e._v(" is not an "),t("code",[e._v("IndexedSlices")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"scatter-mul"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scatter-mul","aria-hidden":"true"}},[e._v("#")]),e._v(" scatter_mul")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L694-L709",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" scatter_mul(\n    sparse_delta,\n    use_locking=False,\n    name=None\n)\n")])])]),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/IndexedSlices",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.IndexedSlices"),t("OutboundLink")],1),e._v("Multiply this variable by .")]),e._v(" "),t("h4",{attrs:{id:"args-40"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-40","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sparse_delta")]),e._v(": "),t("code",[e._v("tf.IndexedSlices")]),e._v(" to multiply this variable by.")]),e._v(" "),t("li",[t("code",[e._v("use_locking")]),e._v(": If "),t("code",[e._v("True")]),e._v(", use locking during the operation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": the "),t("code",[e._v("name")]),e._v(" of the operation.")])]),e._v(" "),t("h4",{attrs:{id:"returns-43"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-43","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the scattered multiplication has completed.")]),e._v(" "),t("h4",{attrs:{id:"raises-14"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-14","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": if "),t("code",[e._v("sparse_delta")]),e._v(" is not an "),t("code",[e._v("IndexedSlices")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"scatter-nd-add"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scatter-nd-add","aria-hidden":"true"}},[e._v("#")]),e._v(" scatter_nd_add")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L840-L886",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" scatter_nd_add(\n    indices,\n    updates,\n    name=None\n)\n")])])]),t("p",[e._v("Applies sparse addition to individual values or slices in a Variable.")]),e._v(" "),t("p",[e._v("The Variable has rank P and indices is a Tensor of rank Q.")]),e._v(" "),t("p",[e._v("indices must be integer tensor, containing indices into self. It must be shape [d_0, ..., d_{Q-2}, K] where 0 < K <= P.")]),e._v(" "),t("p",[e._v("The innermost dimension of indices (with length K) corresponds to indices into elements (if K = P) or slices (if K < P) along the Kth dimension of self.")]),e._v(" "),t("p",[e._v("updates is Tensor of rank Q-1+P-K with shape:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" [d_0, ..., d_{Q-2}, self.shape[K], ..., self.shape[P-1]].\n")])])]),t("p",[e._v("For example, say we want to add 4 scattered elements to a rank-1 tensor to 8 elements. In Python, that update would look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("     v = tf.Variable([1, 2, 3, 4, 5, 6, 7, 8])\n    indices = tf.constant([[4], [3], [1] ,[7]])\n    updates = tf.constant([9, 10, 11, 12])\n    add = v.scatter_nd_add(indices, updates)\n    with tf.compat.v1.Session() as sess:\n      print sess.run(add)\n")])])]),t("p",[e._v("The resulting update to v would look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" [1, 13, 3, 14, 14, 6, 7, 20]\n")])])]),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/scatter_nd",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.scatter_nd"),t("OutboundLink")],1),e._v("See  for more details about how to make updates to slices.")]),e._v(" "),t("h4",{attrs:{id:"args-41"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-41","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("indices")]),e._v(": The "),t("code",[e._v("indices")]),e._v(" to be used in the operation.")]),e._v(" "),t("li",[t("code",[e._v("updates")]),e._v(": The values to be used in the operation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": the "),t("code",[e._v("name")]),e._v(" of the operation.")])]),e._v(" "),t("h4",{attrs:{id:"returns-44"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-44","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the scattered addition has completed.")]),e._v(" "),t("h3",{attrs:{id:"scatter-nd-sub"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scatter-nd-sub","aria-hidden":"true"}},[e._v("#")]),e._v(" scatter_nd_sub")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L792-L838",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" scatter_nd_sub(\n    indices,\n    updates,\n    name=None\n)\n")])])]),t("p",[e._v("Applies sparse subtraction to individual values or slices in a Variable.")]),e._v(" "),t("p",[e._v("Assuming the variable has rank P and indices is a Tensor of rank Q.")]),e._v(" "),t("p",[e._v("indices must be integer tensor, containing indices into self. It must be shape [d_0, ..., d_{Q-2}, K] where 0 < K <= P.")]),e._v(" "),t("p",[e._v("The innermost dimension of indices (with length K) corresponds to indices into elements (if K = P) or slices (if K < P) along the Kth dimension of self.")]),e._v(" "),t("p",[e._v("updates is Tensor of rank Q-1+P-K with shape:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" [d_0, ..., d_{Q-2}, self.shape[K], ..., self.shape[P-1]].\n")])])]),t("p",[e._v("For example, say we want to add 4 scattered elements to a rank-1 tensor to 8 elements. In Python, that update would look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("     v = tf.Variable([1, 2, 3, 4, 5, 6, 7, 8])\n    indices = tf.constant([[4], [3], [1] ,[7]])\n    updates = tf.constant([9, 10, 11, 12])\n    op = v.scatter_nd_sub(indices, updates)\n    with tf.compat.v1.Session() as sess:\n      print sess.run(op)\n")])])]),t("p",[e._v("The resulting update to v would look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" [1, -9, 3, -6, -6, 6, 7, -4]\n")])])]),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/scatter_nd",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.scatter_nd"),t("OutboundLink")],1),e._v("See  for more details about how to make updates to slices.")]),e._v(" "),t("h4",{attrs:{id:"args-42"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-42","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("indices")]),e._v(": The "),t("code",[e._v("indices")]),e._v(" to be used in the operation.")]),e._v(" "),t("li",[t("code",[e._v("updates")]),e._v(": The values to be used in the operation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": the "),t("code",[e._v("name")]),e._v(" of the operation.")])]),e._v(" "),t("h4",{attrs:{id:"returns-45"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-45","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the scattered subtraction has completed.")]),e._v(" "),t("h3",{attrs:{id:"scatter-nd-update"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scatter-nd-update","aria-hidden":"true"}},[e._v("#")]),e._v(" scatter_nd_update")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L888-L934",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" scatter_nd_update(\n    indices,\n    updates,\n    name=None\n)\n")])])]),t("p",[e._v("Applies sparse assignment to individual values or slices in a Variable.")]),e._v(" "),t("p",[e._v("The Variable has rank P and indices is a Tensor of rank Q.")]),e._v(" "),t("p",[e._v("indices must be integer tensor, containing indices into self. It must be shape [d_0, ..., d_{Q-2}, K] where 0 < K <= P.")]),e._v(" "),t("p",[e._v("The innermost dimension of indices (with length K) corresponds to indices into elements (if K = P) or slices (if K < P) along the Kth dimension of self.")]),e._v(" "),t("p",[e._v("updates is Tensor of rank Q-1+P-K with shape:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" [d_0, ..., d_{Q-2}, self.shape[K], ..., self.shape[P-1]].\n")])])]),t("p",[e._v("For example, say we want to add 4 scattered elements to a rank-1 tensor to 8 elements. In Python, that update would look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("     v = tf.Variable([1, 2, 3, 4, 5, 6, 7, 8])\n    indices = tf.constant([[4], [3], [1] ,[7]])\n    updates = tf.constant([9, 10, 11, 12])\n    op = v.scatter_nd_assign(indices, updates)\n    with tf.compat.v1.Session() as sess:\n      print sess.run(op)\n")])])]),t("p",[e._v("The resulting update to v would look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" [1, 11, 3, 10, 9, 6, 7, 12]\n")])])]),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/scatter_nd",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.scatter_nd"),t("OutboundLink")],1),e._v("See  for more details about how to make updates to slices.")]),e._v(" "),t("h4",{attrs:{id:"args-43"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-43","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("indices")]),e._v(": The "),t("code",[e._v("indices")]),e._v(" to be used in the operation.")]),e._v(" "),t("li",[t("code",[e._v("updates")]),e._v(": The values to be used in the operation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": the "),t("code",[e._v("name")]),e._v(" of the operation.")])]),e._v(" "),t("h4",{attrs:{id:"returns-46"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-46","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the scattered assignment has completed.")]),e._v(" "),t("h3",{attrs:{id:"scatter-sub"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scatter-sub","aria-hidden":"true"}},[e._v("#")]),e._v(" scatter_sub")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L624-L639",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" scatter_sub(\n    sparse_delta,\n    use_locking=False,\n    name=None\n)\n")])])]),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/IndexedSlices",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.IndexedSlices"),t("OutboundLink")],1),e._v("Subtracts  from this variable.")]),e._v(" "),t("h4",{attrs:{id:"args-44"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-44","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sparse_delta")]),e._v(": "),t("code",[e._v("tf.IndexedSlices")]),e._v(" to be subtracted from this variable.")]),e._v(" "),t("li",[t("code",[e._v("use_locking")]),e._v(": If "),t("code",[e._v("True")]),e._v(", use locking during the operation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": the "),t("code",[e._v("name")]),e._v(" of the operation.")])]),e._v(" "),t("h4",{attrs:{id:"returns-47"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-47","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the scattered subtraction has completed.")]),e._v(" "),t("h4",{attrs:{id:"raises-15"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-15","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": if "),t("code",[e._v("sparse_delta")]),e._v(" is not an "),t("code",[e._v("IndexedSlices")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"scatter-update"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scatter-update","aria-hidden":"true"}},[e._v("#")]),e._v(" scatter_update")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L728-L743",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" scatter_update(\n    sparse_delta,\n    use_locking=False,\n    name=None\n)\n")])])]),t("p",[t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/IndexedSlices",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.IndexedSlices"),t("OutboundLink")],1),e._v("Assigns  to this variable.")]),e._v(" "),t("h4",{attrs:{id:"args-45"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-45","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sparse_delta")]),e._v(": "),t("code",[e._v("tf.IndexedSlices")]),e._v(" to be assigned to this variable.")]),e._v(" "),t("li",[t("code",[e._v("use_locking")]),e._v(": If "),t("code",[e._v("True")]),e._v(", use locking during the operation.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": the "),t("code",[e._v("name")]),e._v(" of the operation.")])]),e._v(" "),t("h4",{attrs:{id:"returns-48"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-48","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor that will hold the new value of this variable after the scattered assignment has completed.")]),e._v(" "),t("h4",{attrs:{id:"raises-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises-16","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": if "),t("code",[e._v("sparse_delta")]),e._v(" is not an "),t("code",[e._v("IndexedSlices")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"set-shape"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" set_shape")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L467-L473",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" set_shape(shape)\n")])])]),t("p",[e._v("Overrides the shape for this variable.")]),e._v(" "),t("h4",{attrs:{id:"args-46"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-46","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("shape")]),e._v(": the "),t("code",[e._v("TensorShape")]),e._v(" representing the overridden "),t("code",[e._v("shape")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"sparse-read"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sparse-read","aria-hidden":"true"}},[e._v("#")]),e._v(" sparse_read")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L936-L950",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" sparse_read(\n    indices,\n    name=None\n)\n")])])]),t("p",[e._v("Gather slices from params axis axis according to indices.")]),e._v(" "),t("p",[e._v("This function supports a subset of tf.gather, see tf.gather for details on usage.")]),e._v(" "),t("h4",{attrs:{id:"args-47"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-47","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("h4",{attrs:{id:"returns-49"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-49","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor. Has the same type as params.")]),e._v(" "),t("h3",{attrs:{id:"to-proto"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#to-proto","aria-hidden":"true"}},[e._v("#")]),e._v(" to_proto")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L1198-L1208",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" to_proto(export_scope=None)\n")])])]),t("p",[e._v("Converts a Variable to a VariableDef protocol buffer.")]),e._v(" "),t("h4",{attrs:{id:"args-48"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-48","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("export_scope")]),e._v(": Optional "),t("code",[e._v("string")]),e._v(". Name scope to remove.")])]),e._v(" "),t("h4",{attrs:{id:"returns-50"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-50","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A VariableDef protocol buffer, or None if the Variable is not in the specified name scope.")]),e._v(" "),t("h3",{attrs:{id:"value"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#value","aria-hidden":"true"}},[e._v("#")]),e._v(" value")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/variables.py#L437-L454",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" value()\n")])])]),t("p",[e._v("Returns the last snapshot of this variable.")]),e._v(" "),t("p",[e._v("You usually do not need to call this method as all ops that need the value of the variable call it automatically through a convert_to_tensor() call.")]),e._v(" "),t("p",[e._v("Returns a Tensor which holds the value of the variable. You can not assign a new value to this tensor as it is not a reference to the variable.")]),e._v(" "),t("p",[e._v("To avoid copies, if the consumer of the returned value is on the same device as the variable, this actually returns the live value of the variable, not a copy. Updates to the variable are seen by the consumer. If the consumer is on a different device it will get a copy of the variable.")]),e._v(" "),t("h4",{attrs:{id:"returns-51"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-51","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A Tensor containing the value of the variable.")])])}),[],!1,null,null,null);a.default=s.exports}}]);