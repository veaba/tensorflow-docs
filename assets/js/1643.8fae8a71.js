(window.webpackJsonp=window.webpackJsonp||[]).push([[1643],{1834:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Transposes a tensor and returns it.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.keras.backend.transpose")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.keras.backend.transpose")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.keras.backend.transpose(x)\n")])])]),t("h4",{attrs:{id:"arguments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": Tensor or variable.")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A tensor.")]),e._v(" "),t("h4",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' <pre class="devsite-click-to-copy prettyprint lang-py">\n<code class="devsite-terminal" data-terminal-prefix="&gt;&gt;&gt;">var = K.variable([[1, 2, 3], [4, 5, 6]])</code>\n<code class="no-select nocode">    &gt;&gt;&gt; K.eval(var)</code>\n<code class="no-select nocode">    array([[ 1.,  2.,  3.],</code>\n<code class="no-select nocode">           [ 4.,  5.,  6.]], dtype=float32)</code>\n<code class="no-select nocode">    &gt;&gt;&gt; var_transposed = K.transpose(var)</code>\n<code class="no-select nocode">    &gt;&gt;&gt; K.eval(var_transposed)</code>\n<code class="no-select nocode">    array([[ 1.,  4.],</code>\n<code class="no-select nocode">           [ 2.,  5.],</code>\n<code class="no-select nocode">           [ 3.,  6.]], dtype=float32)</code>\n</pre>\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("     >>> input = K.placeholder((2, 3))\n    >>> input\n    <tf.Tensor 'Placeholder_11:0' shape=(2, 3) dtype=float32>\n    >>> input_transposed = K.transpose(input)\n    >>> input_transposed\n    <tf.Tensor 'transpose_4:0' shape=(3, 2) dtype=float32>\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);