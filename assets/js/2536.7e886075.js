(window.webpackJsonp=window.webpackJsonp||[]).push([[2536],{2727:function(a,e,t){"use strict";t.r(e);var r=t(0),s=Object(r.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("Creates a grad-pass-through op with the forward behavior provided in f.")]),a._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("tf.compat.v1.grad_pass_through")])]),a._v(" "),t("li",[t("code",[a._v("tf.compat.v2.grad_pass_through")])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" tf.grad_pass_through(f)\n")])])]),t("p",[a._v("Use this function to wrap any op, maintaining its behavior in the forward pass, but replacing the original op in the backward graph with an identity. For example:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(' x = tf.Variable(1.0, name="x")\nz = tf.Variable(3.0, name="z")\n\nwith tf.GradientTape() as tape:\n  # y will evaluate to 9.0\n  y = tf.grad_pass_through(x.assign)(z**2)\n# grads will evaluate to 6.0\ngrads = tape.gradient(y, z)\n')])])]),t("p",[a._v("Another example is a 'differentiable' moving average approximation, where gradients are allowed to flow into the last value fed to the moving average, but the moving average is still used for the forward pass:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" x = ... # Some scalar value\n# A moving average object, we don't need to know how this is implemented\nmoving_average = MovingAverage()\nwith backprop.GradientTape() as tape:\n  # mavg_x will evaluate to the current running average value\n  mavg_x = tf.grad_pass_through(moving_average)(x)\ngrads = tape.gradient(mavg_x, x) # grads will evaluate to 1.0\n")])])]),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[a._v("#")]),a._v(" Args:")]),a._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns:")]),a._v(" "),t("p",[a._v("A function h(x) which returns the same values as f(x) and whose gradients are the same as those of an identity function.")])])}),[],!1,null,null,null);e.default=s.exports}}]);