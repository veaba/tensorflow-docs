(window.webpackJsonp=window.webpackJsonp||[]).push([[1207],{1396:function(t,e,a){"use strict";a.r(e);var s=a(0),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Performs a safe saturating cast of value to dtype.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("tf.compat.v1.dtypes.saturate_cast")])]),t._v(" "),a("li",[a("code",[t._v("tf.compat.v1.saturate_cast")])]),t._v(" "),a("li",[a("code",[t._v("tf.compat.v2.dtypes.saturate_cast")])]),t._v(" "),a("li",[a("code",[t._v("tf.compat.v2.saturate_cast")])]),t._v(" "),a("li",[a("code",[t._v("tf.saturate_cast")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" tf.dtypes.saturate_cast(\n    value,\n    dtype,\n    name=None\n)\n")])])]),a("p",[t._v("This function casts the input to dtype without applying any scaling. If there is a danger that values would over or underflow in the cast, this op applies the appropriate clamping before the cast.")]),t._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("value")]),t._v(": A "),a("code",[t._v("Tensor")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("dtype")]),t._v(": The desired output "),a("code",[t._v("DType")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("name")]),t._v(": A "),a("code",[t._v("name")]),t._v(" for the operation (optional).")])]),t._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),a("p",[t._v("value safely cast to dtype.")])])}),[],!1,null,null,null);e.default=r.exports}}]);