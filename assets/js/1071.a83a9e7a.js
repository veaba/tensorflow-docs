(window.webpackJsonp=window.webpackJsonp||[]).push([[1071],{1260:function(e,i,t){"use strict";t.r(i);var n=t(0),a=Object(n.a)({},(function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Set the virtual device configuration for a PhysicalDevice.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.config.experimental.set_virtual_device_configuration")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.config.experimental.set_virtual_device_configuration")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.config.experimental.set_virtual_device_configuration(\n    device,\n    virtual_devices\n)\n")])])]),t("h3",{attrs:{id:"used-in-the-guide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("U")]),e._v("s"),t("code",[e._v("e")]),e._v(" "),t("code",[e._v("a")]),e._v(" "),t("code",[e._v("G")]),e._v("P"),t("code",[e._v("U")])])]),e._v(" "),t("p",[e._v("A PhysicalDevice marked as visible will by default have a single LogicalDevice allocated to it once the runtime is configured. Specifying a list of tf.config.experimental.VirtualDeviceConfiguration objects allows multiple devices to be configured that utilize the same PhysicalDevice.")]),e._v(" "),t("p",[e._v("The following example splits the CPU into 2 virtual devices:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" physical_devices = tf.config.experimental.list_physical_devices('CPU')\nassert len(physical_devices) == 1, \"No CPUs found\"\n# Specify 2 virtual CPUs. Note currently memory limit is not supported.\ntf.config.experimental.set_virtual_device_configuration(\n  physical_devices[0],\n  [tf.config.experimental.VirtualDeviceConfiguration(),\n   tf.config.experimental.VirtualDeviceConfiguration()])\nlogical_devices = tf.config.experimental.list_logical_devices('CPU')\nassert len(logical_devices) == 2\n\ntry:\n  tf.config.experimental.set_virtual_device_configuration(\n    physical_devices[0],\n    [tf.config.experimental.VirtualDeviceConfiguration(),\n     tf.config.experimental.VirtualDeviceConfiguration(),\n     tf.config.experimental.VirtualDeviceConfiguration(),\n     tf.config.experimental.VirtualDeviceConfiguration()])\nexcept:\n  print('Cannot modify the virtual devices once they have been initialized.')\n")])])]),t("p",[e._v("The following example splits the GPU into 2 virtual devices with 100 MB each:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" physical_devices = tf.config.experimental.list_physical_devices('GPU')\nassert len(physical_devices) > 0, \"No GPUs found\"\ntf.config.experimental.set_virtual_device_configuration(\n  physical_devices[0],\n  [tf.config.experimental.VirtualDeviceConfiguration(memory_limit=100),\n   tf.config.experimental.VirtualDeviceConfiguration(memory_limit=100)])\n\ntry:\n  tf.config.experimental.set_memory_growth(physical_devices[0], True)\nexcept:\n  print('Cannot set memory growth when virtual devices configured')\n\nlogical_devices = tf.config.experimental.list_logical_devices('GPU')\nassert len(logical_devices) == len(physical_devices) + 1\n\ntry:\n  tf.config.experimental.set_virtual_device_configuration(\n    physical_devices[0],\n    [tf.config.experimental.VirtualDeviceConfiguration(memory_limit=10),\n     tf.config.experimental.VirtualDeviceConfiguration(memory_limit=10)])\nexcept:\n  print('Cannot modify the virtual devices once they have been initialized.')\n")])])]),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("device")]),e._v(": (optional) Need to update")]),e._v(" "),t("li",[t("code",[e._v("virtual_devices")]),e._v(": (optional) Need to update")])])])}),[],!1,null,null,null);i.default=a.exports}}]);