(window.webpackJsonp=window.webpackJsonp||[]).push([[1327],{1516:function(e,r,o){"use strict";o.r(r);var t=o(0),n=Object(t.a)({},(function(){var e=this,r=e.$createElement,o=e._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("Image processing and decoding ops.\n"),o("a",{attrs:{href:"https://tensorflow.org/api_guides/python/image",target:"_blank",rel:"noopener noreferrer"}},[e._v("Images"),o("OutboundLink")],1),e._v("See the  guide.")]),e._v(" "),o("h2",{attrs:{id:"classes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#classes","aria-hidden":"true"}},[e._v("#")]),e._v(" Classes")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/ResizeMethod",target:"_blank",rel:"noopener noreferrer"}},[e._v("class ResizeMethod"),o("OutboundLink")],1)]),e._v(" "),o("h2",{attrs:{id:"functions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#functions","aria-hidden":"true"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/adjust_brightness",target:"_blank",rel:"noopener noreferrer"}},[e._v("adjust_brightness(...)"),o("OutboundLink")],1),e._v(": Adjust the brightness of RGB or Grayscale images.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/adjust_contrast",target:"_blank",rel:"noopener noreferrer"}},[e._v("adjust_contrast(...)"),o("OutboundLink")],1),e._v(": Adjust contrast of RGB or grayscale images.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/adjust_gamma",target:"_blank",rel:"noopener noreferrer"}},[e._v("adjust_gamma(...)"),o("OutboundLink")],1),e._v(": Performs Gamma Correction on the input image.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/adjust_hue",target:"_blank",rel:"noopener noreferrer"}},[e._v("adjust_hue(...)"),o("OutboundLink")],1),e._v(": Adjust hue of RGB images.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/adjust_jpeg_quality",target:"_blank",rel:"noopener noreferrer"}},[e._v("adjust_jpeg_quality(...)"),o("OutboundLink")],1),e._v(": Adjust jpeg encoding quality of an RGB image.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/adjust_saturation",target:"_blank",rel:"noopener noreferrer"}},[e._v("adjust_saturation(...)"),o("OutboundLink")],1),e._v(": Adjust saturation of RGB images.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/central_crop",target:"_blank",rel:"noopener noreferrer"}},[e._v("central_crop(...)"),o("OutboundLink")],1),e._v(": Crop the central region of the image(s).")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/combined_non_max_suppression",target:"_blank",rel:"noopener noreferrer"}},[e._v("combined_non_max_suppression(...)"),o("OutboundLink")],1),e._v(": Greedily selects a subset of bounding boxes in descending order of score.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/convert_image_dtype",target:"_blank",rel:"noopener noreferrer"}},[e._v("convert_image_dtype(...)"),o("OutboundLink")],1),e._v(": Convert image to dtype, scaling its values if needed.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/crop_and_resize",target:"_blank",rel:"noopener noreferrer"}},[e._v("crop_and_resize(...)"),o("OutboundLink")],1),e._v(": Extracts crops from the input image tensor and resizes them.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/crop_to_bounding_box",target:"_blank",rel:"noopener noreferrer"}},[e._v("crop_to_bounding_box(...)"),o("OutboundLink")],1),e._v(": Crops an image to a specified bounding box.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_and_crop_jpeg",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_and_crop_jpeg(...)"),o("OutboundLink")],1),e._v(": Decode and Crop a JPEG-encoded image to a uint8 tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_bmp",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_bmp(...)"),o("OutboundLink")],1),e._v(": Decode the first frame of a BMP-encoded image to a uint8 tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_gif",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_gif(...)"),o("OutboundLink")],1),e._v(": Decode the frame(s) of a GIF-encoded image to a uint8 tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_image",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_image(...)"),o("OutboundLink")],1),e._v(": Function for decode_bmp, decode_gif, decode_jpeg, and decode_png.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_jpeg",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_jpeg(...)"),o("OutboundLink")],1),e._v(": Decode a JPEG-encoded image to a uint8 tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/decode_png",target:"_blank",rel:"noopener noreferrer"}},[e._v("decode_png(...)"),o("OutboundLink")],1),e._v(": Decode a PNG-encoded image to a uint8 or uint16 tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/draw_bounding_boxes",target:"_blank",rel:"noopener noreferrer"}},[e._v("draw_bounding_boxes(...)"),o("OutboundLink")],1),e._v(": Draw bounding boxes on a batch of images.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/encode_jpeg",target:"_blank",rel:"noopener noreferrer"}},[e._v("encode_jpeg(...)"),o("OutboundLink")],1),e._v(": JPEG-encode an image.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/encode_png",target:"_blank",rel:"noopener noreferrer"}},[e._v("encode_png(...)"),o("OutboundLink")],1),e._v(": PNG-encode an image.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/extract_glimpse",target:"_blank",rel:"noopener noreferrer"}},[e._v("extract_glimpse(...)"),o("OutboundLink")],1),e._v(": Extracts a glimpse from the input tensor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/extract_jpeg_shape",target:"_blank",rel:"noopener noreferrer"}},[e._v("extract_jpeg_shape(...)"),o("OutboundLink")],1),e._v(": Extract the shape information of a JPEG-encoded image.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/extract_patches",target:"_blank",rel:"noopener noreferrer"}},[e._v("extract_patches(...)"),o("OutboundLink")],1),e._v(": Extract patches from images.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/flip_left_right",target:"_blank",rel:"noopener noreferrer"}},[e._v("flip_left_right(...)"),o("OutboundLink")],1),e._v(": Flip an image horizontally (left to right).")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/flip_up_down",target:"_blank",rel:"noopener noreferrer"}},[e._v("flip_up_down(...)"),o("OutboundLink")],1),e._v(": Flip an image vertically (upside down).")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/grayscale_to_rgb",target:"_blank",rel:"noopener noreferrer"}},[e._v("grayscale_to_rgb(...)"),o("OutboundLink")],1),e._v(": Converts one or more images from Grayscale to RGB.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/hsv_to_rgb",target:"_blank",rel:"noopener noreferrer"}},[e._v("hsv_to_rgb(...)"),o("OutboundLink")],1),e._v(": Convert one or more images from HSV to RGB.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/image_gradients",target:"_blank",rel:"noopener noreferrer"}},[e._v("image_gradients(...)"),o("OutboundLink")],1),e._v(": Returns image gradients (dy, dx) for each color channel.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/io/is_jpeg",target:"_blank",rel:"noopener noreferrer"}},[e._v("is_jpeg(...)"),o("OutboundLink")],1),e._v(": Convenience function to check if the 'contents' encodes a JPEG image.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/non_max_suppression",target:"_blank",rel:"noopener noreferrer"}},[e._v("non_max_suppression(...)"),o("OutboundLink")],1),e._v(": Greedily selects a subset of bounding boxes in descending order of score.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/non_max_suppression_overlaps",target:"_blank",rel:"noopener noreferrer"}},[e._v("non_max_suppression_overlaps(...)"),o("OutboundLink")],1),e._v(": Greedily selects a subset of bounding boxes in descending order of score.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/non_max_suppression_padded",target:"_blank",rel:"noopener noreferrer"}},[e._v("non_max_suppression_padded(...)"),o("OutboundLink")],1),e._v(": Greedily selects a subset of bounding boxes in descending order of score.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/non_max_suppression_with_scores",target:"_blank",rel:"noopener noreferrer"}},[e._v("non_max_suppression_with_scores(...)"),o("OutboundLink")],1),e._v(": Greedily selects a subset of bounding boxes in descending order of score.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/pad_to_bounding_box",target:"_blank",rel:"noopener noreferrer"}},[e._v("pad_to_bounding_box(...)"),o("OutboundLink")],1),e._v(": Pad image with zeros to the specified height and width.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/per_image_standardization",target:"_blank",rel:"noopener noreferrer"}},[e._v("per_image_standardization(...)"),o("OutboundLink")],1),e._v(": Linearly scales each image in image to have mean 0 and variance 1.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/psnr",target:"_blank",rel:"noopener noreferrer"}},[e._v("psnr(...)"),o("OutboundLink")],1),e._v(": Returns the Peak Signal-to-Noise Ratio between a and b.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/random_brightness",target:"_blank",rel:"noopener noreferrer"}},[e._v("random_brightness(...)"),o("OutboundLink")],1),e._v(": Adjust the brightness of images by a random factor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/random_contrast",target:"_blank",rel:"noopener noreferrer"}},[e._v("random_contrast(...)"),o("OutboundLink")],1),e._v(": Adjust the contrast of an image or images by a random factor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/random_crop",target:"_blank",rel:"noopener noreferrer"}},[e._v("random_crop(...)"),o("OutboundLink")],1),e._v(": Randomly crops a tensor to a given size.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/random_flip_left_right",target:"_blank",rel:"noopener noreferrer"}},[e._v("random_flip_left_right(...)"),o("OutboundLink")],1),e._v(": Randomly flip an image horizontally (left to right).")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/random_flip_up_down",target:"_blank",rel:"noopener noreferrer"}},[e._v("random_flip_up_down(...)"),o("OutboundLink")],1),e._v(": Randomly flips an image vertically (upside down).")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/random_hue",target:"_blank",rel:"noopener noreferrer"}},[e._v("random_hue(...)"),o("OutboundLink")],1),e._v(": Adjust the hue of RGB images by a random factor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/random_jpeg_quality",target:"_blank",rel:"noopener noreferrer"}},[e._v("random_jpeg_quality(...)"),o("OutboundLink")],1),e._v(": Randomly changes jpeg encoding quality for inducing jpeg noise.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/random_saturation",target:"_blank",rel:"noopener noreferrer"}},[e._v("random_saturation(...)"),o("OutboundLink")],1),e._v(": Adjust the saturation of RGB images by a random factor.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/resize",target:"_blank",rel:"noopener noreferrer"}},[e._v("resize(...)"),o("OutboundLink")],1),e._v(": Resize images to size using the specified method.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/resize_with_crop_or_pad",target:"_blank",rel:"noopener noreferrer"}},[e._v("resize_with_crop_or_pad(...)"),o("OutboundLink")],1),e._v(": Crops and/or pads an image to a target width and height.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/resize_with_pad",target:"_blank",rel:"noopener noreferrer"}},[e._v("resize_with_pad(...)"),o("OutboundLink")],1),e._v(": Resizes and pads an image to a target width and height.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/rgb_to_grayscale",target:"_blank",rel:"noopener noreferrer"}},[e._v("rgb_to_grayscale(...)"),o("OutboundLink")],1),e._v(": Converts one or more images from RGB to Grayscale.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/rgb_to_hsv",target:"_blank",rel:"noopener noreferrer"}},[e._v("rgb_to_hsv(...)"),o("OutboundLink")],1),e._v(": Converts one or more images from RGB to HSV.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/rgb_to_yiq",target:"_blank",rel:"noopener noreferrer"}},[e._v("rgb_to_yiq(...)"),o("OutboundLink")],1),e._v(": Converts one or more images from RGB to YIQ.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/rgb_to_yuv",target:"_blank",rel:"noopener noreferrer"}},[e._v("rgb_to_yuv(...)"),o("OutboundLink")],1),e._v(": Converts one or more images from RGB to YUV.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/rot90",target:"_blank",rel:"noopener noreferrer"}},[e._v("rot90(...)"),o("OutboundLink")],1),e._v(": Rotate image(s) counter-clockwise by 90 degrees.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/sample_distorted_bounding_box",target:"_blank",rel:"noopener noreferrer"}},[e._v("sample_distorted_bounding_box(...)"),o("OutboundLink")],1),e._v(": Generate a single randomly distorted bounding box for an image.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/sobel_edges",target:"_blank",rel:"noopener noreferrer"}},[e._v("sobel_edges(...)"),o("OutboundLink")],1),e._v(": Returns a tensor holding Sobel edge maps.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/ssim",target:"_blank",rel:"noopener noreferrer"}},[e._v("ssim(...)"),o("OutboundLink")],1),e._v(": Computes SSIM index between img1 and img2.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/ssim_multiscale",target:"_blank",rel:"noopener noreferrer"}},[e._v("ssim_multiscale(...)"),o("OutboundLink")],1),e._v(": Computes the MS-SSIM between img1 and img2.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/total_variation",target:"_blank",rel:"noopener noreferrer"}},[e._v("total_variation(...)"),o("OutboundLink")],1),e._v(": Calculate and return the total variation for one or more images.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/transpose",target:"_blank",rel:"noopener noreferrer"}},[e._v("transpose(...)"),o("OutboundLink")],1),e._v(": Transpose image(s) by swapping the height and width dimension.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/yiq_to_rgb",target:"_blank",rel:"noopener noreferrer"}},[e._v("yiq_to_rgb(...)"),o("OutboundLink")],1),e._v(": Converts one or more images from YIQ to RGB.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/image/yuv_to_rgb",target:"_blank",rel:"noopener noreferrer"}},[e._v("yuv_to_rgb(...)"),o("OutboundLink")],1),e._v(": Converts one or more images from YUV to RGB.")])])}),[],!1,null,null,null);r.default=n.exports}}]);