(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{341:function(e,t,a){"use strict";a.r(t);var n=a(0),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Increments 'ref' until it reaches 'limit'. (deprecated)")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.compat.v1.count_up_to(\n    ref,\n    limit,\n    name=None\n)\n")])])]),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ref")]),e._v(": A "),a("code",[e._v("Variable")]),e._v(". Must be one of the following types: "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(". Should be from a scalar "),a("code",[e._v("Variable")]),e._v(" node.")]),e._v(" "),a("li",[a("code",[e._v("limit")]),e._v(": An "),a("code",[e._v("int")]),e._v(". If incrementing "),a("code",[e._v("ref")]),e._v(" would bring it above "),a("code",[e._v("limit")]),e._v(", instead generates an 'OutOfRange' error.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A Tensor. Has the same type as ref. A copy of the input before increment. If nothing else modifies the input, the values produced will all be distinct.")])])}),[],!1,null,null,null);t.default=r.exports}}]);