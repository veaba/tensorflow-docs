(window.webpackJsonp=window.webpackJsonp||[]).push([[738],{926:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"class-builder"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-builder","aria-hidden":"true"}},[e._v("#")]),e._v(" Class Builder")]),e._v(" "),t("p",[e._v("Builds the SavedModel protocol buffer and saves variables and assets.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[e._v("Class "),t("code",[e._v("tf.compat.v1.saved_model.builder.SavedModelBuilder")])])]),e._v(" "),t("p",[e._v("The SavedModelBuilder class provides functionality to build a SavedModel protocol buffer. Specifically, this allows multiple meta graphs to be saved as part of a single language-neutral SavedModel, while sharing variables and assets.")]),e._v(" "),t("p",[e._v("To build a SavedModel, the first meta graph must be saved with variables. Subsequent meta graphs will simply be saved with their graph definitions. If assets need to be saved and written or copied to disk, they can be provided when the meta graph def is added. If multiple meta graph defs are associated an asset of the same name, only the first version is retained.")]),e._v(" "),t("p",[e._v("Each meta graph added to the SavedModel must be annotated with tags. The tags provide a means to identify the specific meta graph to load and restore, along with the shared set of variables and assets.")]),e._v(" "),t("p",[e._v("Typical usage for the SavedModelBuilder:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' ...\nbuilder = tf.compat.v1.saved_model.Builder(export_dir)\n\nwith tf.compat.v1.Session(graph=tf.Graph()) as sess:\n  ...\n  builder.add_meta_graph_and_variables(sess,\n                                  ["foo-tag"],\n                                  signature_def_map=foo_signatures,\n                                  assets_collection=foo_assets)\n...\n\nwith tf.compat.v1.Session(graph=tf.Graph()) as sess:\n  ...\n  builder.add_meta_graph(["bar-tag", "baz-tag"])\n...\n\nbuilder.save()\n')])])]),t("h2",{attrs:{id:"init"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("init")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/saved_model/builder_impl.py#L432-L433",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __init__(export_dir)\n")])])]),t("p",[e._v("Initialize self. See help(type(self)) for accurate signature.")]),e._v(" "),t("h2",{attrs:{id:"methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),t("h3",{attrs:{id:"add-meta-graph"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-meta-graph","aria-hidden":"true"}},[e._v("#")]),e._v(" add_meta_graph")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/saved_model/builder_impl.py#L509-L551",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" add_meta_graph(\n    tags,\n    signature_def_map=None,\n    assets_collection=None,\n    legacy_init_op=None,\n    clear_devices=False,\n    main_op=None,\n    strip_default_attrs=False,\n    saver=None\n)\n")])])]),t("p",[e._v("Adds the current meta graph to the SavedModel.")]),e._v(" "),t("p",[e._v("Creates a Saver in the current scope and uses the Saver to export the meta graph def. Invoking this API requires the add_meta_graph_and_variables() API to have been invoked before.")]),e._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tags")]),e._v(": The set of "),t("code",[e._v("tags")]),e._v(" to annotate the meta graph def with.")]),e._v(" "),t("li",[t("code",[e._v("signature_def_map")]),e._v(": The map of signature defs to be added to the meta graph def.")]),e._v(" "),t("li",[t("code",[e._v("assets_collection")]),e._v(": Assets to be saved with SavedModel. Note that this list should be a subset of the assets saved as part of the first meta graph in the SavedModel.")]),e._v(" "),t("li",[t("code",[e._v("clear_devices")]),e._v(": Set to true if the device info on the default graph should be cleared.")]),e._v(" "),t("li",[t("code",[e._v("init_op")]),e._v(": Op or group of ops to execute when the graph is loaded. Note that when the "),t("code",[e._v("init_op")]),e._v(" is specified it is run after the restore op at load-time.")]),e._v(" "),t("li",[t("code",[e._v("train_op")]),e._v(": Op or group of opts that trains the model when run. This will not be run automatically when the graph is loaded, instead saved in a SignatureDef accessible through the exported MetaGraph.")]),e._v(" "),t("li",[t("code",[e._v("saver")]),e._v(": An instance of tf.compat.v1.train.Saver that will be used to export the metagraph. If None, a sharded Saver that restores all variables will be used.")])]),e._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("AssertionError")]),e._v(": If the variables for the SavedModel have not been saved yet, or if the graph already contains one or more legacy init ops.")])]),e._v(" "),t("h3",{attrs:{id:"add-meta-graph-and-variables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-meta-graph-and-variables","aria-hidden":"true"}},[e._v("#")]),e._v(" add_meta_graph_and_variables")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/saved_model/builder_impl.py#L553-L611",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" add_meta_graph_and_variables(\n    sess,\n    tags,\n    signature_def_map=None,\n    assets_collection=None,\n    legacy_init_op=None,\n    clear_devices=False,\n    main_op=None,\n    strip_default_attrs=False,\n    saver=None\n)\n")])])]),t("p",[e._v("Adds the current meta graph to the SavedModel and saves variables.")]),e._v(" "),t("p",[e._v("Creates a Saver to save the variables from the provided session. Exports the corresponding meta graph def. This function assumes that the variables to be saved have been initialized. For a given SavedModelBuilder, this API must be called exactly once and for the first meta graph to save. For subsequent meta graph defs to be added, the add_meta_graph() API must be used.")]),e._v(" "),t("h4",{attrs:{id:"args-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sess")]),e._v(": The TensorFlow "),t("code",[e._v("sess")]),e._v("ion from which to save the meta graph and variables.")]),e._v(" "),t("li",[t("code",[e._v("tags")]),e._v(": The set of "),t("code",[e._v("tags")]),e._v(" with which to save the meta graph.")]),e._v(" "),t("li",[t("code",[e._v("signature_def_map")]),e._v(": The map of signature def map to add to the meta graph def.")]),e._v(" "),t("li",[t("code",[e._v("assets_collection")]),e._v(": Assets to be saved with SavedModel.")]),e._v(" "),t("li",[t("code",[e._v("clear_devices")]),e._v(": Set to true if the device info on the default graph should be cleared.")]),e._v(" "),t("li",[t("code",[e._v("init_op")]),e._v(": Op or group of ops to execute when the graph is loaded. Note that when the "),t("code",[e._v("init_op")]),e._v(" is specified it is run after the restore op at load-time.")]),e._v(" "),t("li",[t("code",[e._v("train_op")]),e._v(": Op or group of ops that trains the model when run. This will not be run automatically when the graph is loaded, instead saved in a SignatureDef accessible through the exported MetaGraph.")]),e._v(" "),t("li",[t("code",[e._v("strip_default_attrs")]),e._v(": Boolean. If "),t("code",[e._v("True")]),e._v(", default-valued attributes will be removed from the NodeDefs. For a detailed guide, see Stripping Default-Valued Attributes.")]),e._v(" "),t("li",[t("code",[e._v("saver")]),e._v(": An instance of tf.compat.v1.train.Saver that will be used to export the metagraph and save variables. If None, a sharded Saver that restores all variables will be used.")])]),e._v(" "),t("h3",{attrs:{id:"save"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#save","aria-hidden":"true"}},[e._v("#")]),e._v(" save")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/saved_model/builder_impl.py#L392-L424",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" save(as_text=False)\n")])])]),t("p",[e._v("Writes a SavedModel protocol buffer to disk.")]),e._v(" "),t("p",[e._v("The function writes the SavedModel protocol buffer to the export directory in serialized format.")]),e._v(" "),t("h4",{attrs:{id:"args-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("as_text")]),e._v(": Writes the SavedModel protocol buffer in text format to disk. Protocol buffers in text format are useful for debugging, but parsing fails when it encounters an unknown field and so is not forward compatible. This means changes to TensorFlow may prevent deployment of new text format SavedModels to existing serving binaries. Do not deploy "),t("code",[e._v("as_text")]),e._v(" SavedModels to production.")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("The path to which the SavedModel protocol buffer was written.")])])}),[],!1,null,null,null);a.default=r.exports}}]);