(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{320:function(_,e,v){"use strict";v.r(e);var o=v(0),c=Object(o.a)({},(function(){var _=this,e=_.$createElement,v=_._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("p",[_._v("Defined in generated file: python/ops/gen_array_ops.py")]),_._v(" "),v("p",[_._v("BatchToSpace for N-D tensors of type T.")]),_._v(" "),v("h3",{attrs:{id:"aliases"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[_._v("#")]),_._v(" Aliases:")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("tf.compat.v1.manip.batch_to_space_nd")])])]),_._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v(" tf.compat.v1.batch_to_space_nd(\n    input,\n    block_shape,\n    crops,\n    name=None\n)\n")])])]),v("p",[_._v('This operation reshapes the "batch" dimension 0 into M + 1 dimensions of shape block_shape + [batch], interleaves these blocks back into the grid defined by the spatial dimensions [1, ..., M], to obtain a result with the same rank as the input. The spatial dimensions of this intermediate result are then optionally cropped according to crops to produce the output. This is the reverse of SpaceToBatch. See below for a precise description.')]),_._v(" "),v("h4",{attrs:{id:"args"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[_._v("#")]),_._v(" Args:")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("input")]),_._v(": A "),v("code",[_._v("Tensor")]),_._v(". N-D with shape "),v("code",[_._v("input")]),_._v("_shape = [batch] + spatial_shape + remaining_shape, where spatial_shape has M dimensions.")]),_._v(" "),v("li",[v("code",[_._v("block_shape")]),_._v(": A "),v("code",[_._v("Tensor")]),_._v(". "),v("code",[_._v("M")]),_._v("ust be one of the following types: "),v("code",[_._v("int32")]),_._v(", "),v("code",[_._v("int64")]),_._v(". 1-D with shape ["),v("code",[_._v("M")]),_._v("], all values must be >= 1.")]),_._v(" "),v("li",[v("code",[_._v("crops")]),_._v(":"),v("code"),_._v("A"),v("code",[_._v("``Tensor``.`` ``M")]),_._v("ust"),v("code"),_._v("be"),v("code"),_._v("one"),v("code"),_._v("of"),v("code"),_._v("the"),v("code"),_._v("follow"),v("code",[_._v("i")]),_._v("ng"),v("code"),_._v("types:"),v("code",[_._v("``int32``,`` ``int64``.`` ``2")]),_._v("-D"),v("code"),_._v("w"),v("code",[_._v("i")]),_._v("th"),v("code"),_._v("shape"),v("code"),_._v("["),v("code",[_._v("M``,`` ``2")]),_._v("]"),v("code",[_._v(",``")]),_._v("all"),v("code"),_._v("values"),v("code"),_._v("must"),v("code"),_._v("be"),v("code"),_._v(">="),v("code"),_._v("0"),v("code",[_._v(".`` ``crops")]),_._v("["),v("code",[_._v("i")]),_._v("]"),v("code"),_._v("="),v("code"),_._v("[crop_start"),v("code",[_._v(",``")]),_._v("crop_end]"),v("code"),_._v("spec"),v("code",[_._v("i")]),_._v("f"),v("code",[_._v("i")]),_._v("es"),v("code"),_._v("the"),v("code"),_._v("amount"),v("code"),_._v("to"),v("code"),_._v("crop"),v("code"),_._v("from"),v("code",[_._v("``input``")]),_._v("d"),v("code",[_._v("i")]),_._v("mens"),v("code",[_._v("i")]),_._v("on"),v("code",[_._v("``i``")]),_._v("+"),v("code",[_._v("``1``,``")]),_._v("wh"),v("code",[_._v("i")]),_._v("ch"),v("code"),_._v("corresponds"),v("code"),_._v("to"),v("code"),_._v("spat"),v("code",[_._v("i")]),_._v("al"),v("code"),_._v("d"),v("code",[_._v("i")]),_._v("mens"),v("code",[_._v("i")]),_._v("on"),v("code",[_._v("``i``.``")]),_._v("It"),v("code",[_._v("``i")]),_._v("s"),v("code"),_._v("requ"),v("code",[_._v("i")]),_._v("red"),v("code"),_._v("that"),v("code"),_._v("crop_start["),v("code",[_._v("i")]),_._v("]"),v("code"),_._v("+"),v("code"),_._v("crop_end["),v("code",[_._v("i")]),_._v("]"),v("code"),_._v("<="),v("code",[_._v("``block_shape")]),_._v("["),v("code",[_._v("i")]),_._v("]"),v("code"),v("em",[v("code",[_._v("``input")]),_._v("_shape["),v("code",[_._v("i``")]),_._v("+"),v("code",[_._v("``1")]),_._v("]"),v("code",[_._v(".")]),_._v("\nTh"),v("code",[_._v("i")]),_._v("s"),v("code"),_._v("operat"),v("code",[_._v("i")]),_._v("on"),v("code",[_._v("``i")]),_._v("s"),v("code"),_._v("equ"),v("code",[_._v("i")]),_._v("valent"),v("code"),_._v("to"),v("code"),_._v("the"),v("code"),_._v("follow"),v("code",[_._v("i")]),_._v("ng"),v("code"),_._v("steps:\nReshape"),v("code",[_._v("``input``")]),_._v("to"),v("code",[_._v("``reshaped``")]),_._v("of"),v("code"),_._v("shape:"),v("code"),_._v("["),v("code",[_._v("block_shape")]),_._v("[0]"),v("code",[_._v(",`` ``.``.``.``,`` ``block_shape")]),_._v("["),v("code",[_._v("M")]),_._v("-"),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",``")]),_._v("batch"),v("code"),_._v("/"),v("code"),_._v("prod("),v("code",[_._v("block_shape")]),_._v(")"),v("code",[_._v(",`` ``input")]),_._v("_shape["),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),_._v("_shape[N-"),v("code",[_._v("1")]),_._v("]]\nPermute"),v("code"),_._v("d"),v("code",[_._v("i")]),_._v("mens"),v("code",[_._v("i")]),_._v("ons"),v("code"),_._v("of"),v("code",[_._v("``reshaped``")]),_._v("to"),v("code"),_._v("produce"),v("code",[_._v("``permuted``")]),_._v("of"),v("code"),_._v("shape"),v("code"),_._v("[batch"),v("code"),_._v("/"),v("code"),_._v("prod("),v("code",[_._v("block_shape")]),_._v(")"),v("code",[_._v(",")]),_._v(" "),v("code",[_._v("input")]),_._v("_shape["),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",`` ``block_shape")]),_._v("[0]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),_._v("_shape["),v("code",[_._v("M")]),_._v("]"),v("code",[_._v(",`` ``block_shape")]),_._v("["),v("code",[_._v("M")]),_._v("-"),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",")]),_._v(" "),v("code",[_._v("input")]),_._v("_shape["),v("code",[_._v("M")]),_._v("+"),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),v("em",[_._v("shape[N-"),v("code",[_._v("1")]),_._v("]]\nReshape"),v("code",[_._v("``permuted``")]),_._v("to"),v("code"),_._v("produce"),v("code",[_._v("``reshaped")])]),v("code",[_._v("permuted``")]),_._v("of"),v("code"),_._v("shape"),v("code"),_._v("[batch"),v("code"),_._v("/"),v("code"),_._v("prod("),v("code",[_._v("block_shape")]),_._v(")"),v("code",[_._v(",")]),_._v(" "),v("code",[_._v("input")]),_._v("_shape["),v("code",[_._v("1")]),_._v("]"),v("code")]),v("code",[_._v("``block_shape")]),_._v("[0]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),_._v("_shape["),v("code",[_._v("M")]),_._v("]"),v("code"),v("em",[v("code",[_._v("``block_shape")]),_._v("["),v("code",[_._v("M")]),_._v("-"),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",")]),_._v(" "),v("code",[_._v("input")]),_._v("_shape["),v("code",[_._v("M")]),_._v("+"),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),v("em",[_._v("shape[N-"),v("code",[_._v("1")]),_._v("]]\nCrop"),v("code"),_._v("the"),v("code"),_._v("start"),v("code"),_._v("and"),v("code"),_._v("end"),v("code"),_._v("of"),v("code"),_._v("d"),v("code",[_._v("i")]),_._v("mens"),v("code",[_._v("i")]),_._v("ons"),v("code"),_._v("["),v("code",[_._v("1``,`` ``.``.``.``,`` ``M")]),_._v("]"),v("code"),_._v("of"),v("code",[_._v("``reshaped")])]),v("code",[_._v("permuted``")]),_._v("accord"),v("code",[_._v("i")]),_._v("ng"),v("code"),_._v("to"),v("code",[_._v("``crops``")]),_._v("to"),v("code"),_._v("produce"),v("code"),_._v("the"),v("code"),_._v("output"),v("code"),_._v("of"),v("code"),_._v("shape:"),v("code"),_._v("[batch"),v("code"),_._v("/"),v("code"),_._v("prod("),v("code",[_._v("block_shape")]),_._v(")"),v("code",[_._v(",")]),_._v(" "),v("code",[_._v("input")]),_._v("_shape["),v("code",[_._v("1")]),_._v("]"),v("code")]),v("code",[_._v("``block_shape")]),_._v("[0]"),v("code"),_._v("-"),v("code",[_._v("``crops")]),_._v("[0"),v("code",[_._v(",")]),_._v("0]"),v("code"),_._v("-"),v("code",[_._v("``crops")]),_._v("[0"),v("code",[_._v(",``1")]),_._v("]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),_._v("_shape["),v("code",[_._v("M")]),_._v("]"),v("code"),_._v("*"),v("code",[_._v("``block_shape")]),_._v("["),v("code",[_._v("M")]),_._v("-"),v("code",[_._v("1")]),_._v("]"),v("code"),_._v("-"),v("code",[_._v("``crops")]),_._v("["),v("code",[_._v("M")]),_._v("-"),v("code",[_._v("1``,")]),_._v("0]"),v("code"),_._v("-"),v("code",[_._v("``crops")]),_._v("["),v("code",[_._v("M")]),_._v("-"),v("code",[_._v("1``,``1")]),_._v("]"),v("code",[_._v(",")]),_._v(" "),v("code",[_._v("input")]),_._v("_shape["),v("code",[_._v("M")]),_._v("+"),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),_._v("_shape[N-"),v("code",[_._v("1")]),_._v("]]\nSome"),v("code"),_._v("examples:\n("),v("code",[_._v("1")]),_._v(")"),v("code"),_._v("For"),v("code"),_._v("the"),v("code"),_._v("follow"),v("code",[_._v("i")]),_._v("ng"),v("code",[_._v("``input``")]),_._v("of"),v("code"),_._v("shape"),v("code"),_._v("["),v("code",[_._v("4``,`` ``1``,`` ``1``,`` ``1")]),_._v("]"),v("code",[_._v(",`` ``block_shape``")]),_._v("="),v("code"),_._v("["),v("code",[_._v("2``,`` ``2")]),_._v("]"),v("code",[_._v(",``")]),_._v("and"),v("code",[_._v("``crops``")]),_._v("="),v("code"),_._v("[[0"),v("code",[_._v(",``")]),_._v("0]"),v("code",[_._v(",``")]),_._v("[0"),v("code",[_._v(",``")]),_._v("0]]:")]),_._v(" "),v("li",[_._v("Reshape"),v("code",[_._v("``input``")]),_._v("to"),v("code",[_._v("``reshaped``")]),_._v("of"),v("code"),_._v("shape:"),v("code"),_._v("["),v("code",[_._v("block_shape")]),_._v("[0]"),v("code",[_._v(",`` ``.``.``.``,`` ``block_shape")]),_._v("["),v("code",[_._v("M")]),_._v("-"),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",``")]),_._v("batch"),v("code"),_._v("/"),v("code"),_._v("prod("),v("code",[_._v("block_shape")]),_._v(")"),v("code",[_._v(",`` ``input")]),_._v("_shape["),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),_._v("_shape[N-"),v("code",[_._v("1")]),_._v("]]")]),_._v(" "),v("li",[_._v("Permute"),v("code"),_._v("d"),v("code",[_._v("i")]),_._v("mens"),v("code",[_._v("i")]),_._v("ons"),v("code"),_._v("of"),v("code",[_._v("``reshaped``")]),_._v("to"),v("code"),_._v("produce"),v("code",[_._v("``permuted``")]),_._v("of"),v("code"),_._v("shape"),v("code"),_._v("[batch"),v("code"),_._v("/"),v("code"),_._v("prod("),v("code",[_._v("block_shape")]),_._v(")"),v("code",[_._v(",")]),_._v(" "),v("code",[_._v("input")]),_._v("_shape["),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",`` ``block_shape")]),_._v("[0]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),_._v("_shape["),v("code",[_._v("M")]),_._v("]"),v("code",[_._v(",`` ``block_shape")]),_._v("["),v("code",[_._v("M")]),_._v("-"),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",")]),_._v(" "),v("code",[_._v("input")]),_._v("_shape["),v("code",[_._v("M")]),_._v("+"),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),_._v("_shape[N-"),v("code",[_._v("1")]),_._v("]]")]),_._v(" "),v("li",[_._v("Reshape"),v("code",[_._v("``permuted``")]),_._v("to"),v("code"),_._v("produce"),v("code",[_._v("``reshaped")]),_._v("_"),v("code",[_._v("permuted``")]),_._v("of"),v("code"),_._v("shape"),v("code"),_._v("[batch"),v("code"),_._v("/"),v("code"),_._v("prod("),v("code",[_._v("block_shape")]),_._v(")"),v("code",[_._v(",")]),_._v(" "),v("code",[_._v("input")]),_._v("_shape["),v("code",[_._v("1")]),_._v("]"),v("code"),v("em",[v("code",[_._v("``block_shape")]),_._v("[0]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),_._v("_shape["),v("code",[_._v("M")]),_._v("]"),v("code")]),v("code",[_._v("``block_shape")]),_._v("["),v("code",[_._v("M")]),_._v("-"),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",")]),_._v(" "),v("code",[_._v("input")]),_._v("_shape["),v("code",[_._v("M")]),_._v("+"),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),_._v("_shape[N-"),v("code",[_._v("1")]),_._v("]]")]),_._v(" "),v("li",[_._v("Crop"),v("code"),_._v("the"),v("code"),_._v("start"),v("code"),_._v("and"),v("code"),_._v("end"),v("code"),_._v("of"),v("code"),_._v("d"),v("code",[_._v("i")]),_._v("mens"),v("code",[_._v("i")]),_._v("ons"),v("code"),_._v("["),v("code",[_._v("1``,`` ``.``.``.``,`` ``M")]),_._v("]"),v("code"),_._v("of"),v("code",[_._v("``reshaped")]),_._v("_"),v("code",[_._v("permuted``")]),_._v("accord"),v("code",[_._v("i")]),_._v("ng"),v("code"),_._v("to"),v("code",[_._v("``crops``")]),_._v("to"),v("code"),_._v("produce"),v("code"),_._v("the"),v("code"),_._v("output"),v("code"),_._v("of"),v("code"),_._v("shape:"),v("code"),_._v("[batch"),v("code"),_._v("/"),v("code"),_._v("prod("),v("code",[_._v("block_shape")]),_._v(")"),v("code",[_._v(",")]),_._v(" "),v("code",[_._v("input")]),_._v("_shape["),v("code",[_._v("1")]),_._v("]"),v("code"),v("em",[v("code",[_._v("``block_shape")]),_._v("[0]"),v("code"),_._v("-"),v("code",[_._v("``crops")]),_._v("[0"),v("code",[_._v(",")]),_._v("0]"),v("code"),_._v("-"),v("code",[_._v("``crops")]),_._v("[0"),v("code",[_._v(",``1")]),_._v("]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),_._v("_shape["),v("code",[_._v("M")]),_._v("]"),v("code")]),v("code",[_._v("``block_shape")]),_._v("["),v("code",[_._v("M")]),_._v("-"),v("code",[_._v("1")]),_._v("]"),v("code"),_._v("-"),v("code",[_._v("``crops")]),_._v("["),v("code",[_._v("M")]),_._v("-"),v("code",[_._v("1``,")]),_._v("0]"),v("code"),_._v("-"),v("code",[_._v("``crops")]),_._v("["),v("code",[_._v("M")]),_._v("-"),v("code",[_._v("1``,``1")]),_._v("]"),v("code",[_._v(",")]),_._v(" "),v("code",[_._v("input")]),_._v("_shape["),v("code",[_._v("M")]),_._v("+"),v("code",[_._v("1")]),_._v("]"),v("code",[_._v(",`` ``.``.``.``,`` ``input")]),_._v("_shape[N-"),v("code",[_._v("1")]),_._v("]]")])]),_._v(" "),v("p",[_._v("The output tensor has shape [1, 2, 2, 1] and value:")]),_._v(" "),v("p",[_._v("(2) For the following input of shape [4, 1, 1, 3], block_shape = [2, 2], and crops = [[0, 0], [0, 0]]:")]),_._v(" "),v("p",[_._v("The output tensor has shape [1, 2, 2, 3] and value:")]),_._v(" "),v("p",[_._v("(3) For the following input of shape [4, 2, 2, 1], block_shape = [2, 2], and crops = [[0, 0], [0, 0]]:")]),_._v(" "),v("p",[_._v("The output tensor has shape [1, 4, 4, 1] and value:")]),_._v(" "),v("p",[_._v("(4) For the following input of shape [8, 1, 3, 1], block_shape = [2, 2], and crops = [[0, 0], [2, 0]]:")]),_._v(" "),v("p",[_._v("The output tensor has shape [2, 2, 4, 1] and value:")]),_._v(" "),v("h4",{attrs:{id:"returns"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[_._v("#")]),_._v(" Returns:")]),_._v(" "),v("p",[_._v("A Tensor. Has the same type as input.")])])}),[],!1,null,null,null);e.default=c.exports}}]);