(window.webpackJsonp=window.webpackJsonp||[]).push([[2577],{2768:function(e,v,_){"use strict";_.r(v);var o=_(0),t=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[e._v("Reshapes a tensor.")]),e._v(" "),_("h3",{attrs:{id:"aliases"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("tf.compat.v1.manip.reshape")])]),e._v(" "),_("li",[_("code",[e._v("tf.compat.v1.reshape")])]),e._v(" "),_("li",[_("code",[e._v("tf.compat.v2.reshape")])])]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" tf.reshape(\n    tensor,\n    shape,\n    name=None\n)\n")])])]),_("h3",{attrs:{id:"used-in-the-guide"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("T")]),e._v("r"),_("code",[e._v("a")]),e._v("i"),_("code",[e._v("n")]),e._v(" "),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("d")]),e._v(" "),_("code",[e._v("e")]),e._v("v"),_("code",[e._v("a")]),e._v("l"),_("code",[e._v("u")]),e._v("a"),_("code",[e._v("t")]),e._v("e"),_("code"),e._v("w"),_("code",[e._v("i")]),e._v("t"),_("code",[e._v("h")]),e._v(" "),_("code",[e._v("K")]),e._v("e"),_("code",[e._v("r")]),e._v("a"),_("code",[e._v("s")])])]),e._v(" "),_("h3",{attrs:{id:"used-in-the-tutorials"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("I")]),e._v("m"),_("code",[e._v("a")]),e._v("g"),_("code",[e._v("e")]),e._v(" "),_("code",[e._v("c")]),e._v("a"),_("code",[e._v("p")]),e._v("t"),_("code",[e._v("i")]),e._v("o"),_("code",[e._v("n")]),e._v("i"),_("code",[e._v("n")]),e._v("g"),_("code"),e._v("w"),_("code",[e._v("i")]),e._v("t"),_("code",[e._v("h")]),e._v(" "),_("code",[e._v("v")]),e._v("i"),_("code",[e._v("s")]),e._v("u"),_("code",[e._v("a")]),e._v("l"),_("code"),e._v("a"),_("code",[e._v("t")]),e._v("t"),_("code",[e._v("e")]),e._v("n"),_("code",[e._v("t")]),e._v("i"),_("code",[e._v("o")]),e._v("n``")]),e._v(" "),_("li",[_("code",[e._v("N")]),e._v("e"),_("code",[e._v("u")]),e._v("r"),_("code",[e._v("a")]),e._v("l"),_("code"),e._v("m"),_("code",[e._v("a")]),e._v("c"),_("code",[e._v("h")]),e._v("i"),_("code",[e._v("n")]),e._v("e"),_("code"),e._v("t"),_("code",[e._v("r")]),e._v("a"),_("code",[e._v("n")]),e._v("s"),_("code",[e._v("l")]),e._v("a"),_("code",[e._v("t")]),e._v("i"),_("code",[e._v("o")]),e._v("n"),_("code"),e._v("w"),_("code",[e._v("i")]),e._v("t"),_("code",[e._v("h")]),e._v(" "),_("code",[e._v("a")]),e._v("t"),_("code",[e._v("t")]),e._v("e"),_("code",[e._v("n")]),e._v("t"),_("code",[e._v("i")]),e._v("o"),_("code",[e._v("n")])]),e._v(" "),_("li",[_("code",[e._v("T")]),e._v("F"),_("code",[e._v("R")]),e._v("e"),_("code",[e._v("c")]),e._v("o"),_("code",[e._v("r")]),e._v("d"),_("code"),e._v("a"),_("code",[e._v("n")]),e._v("d"),_("code"),e._v("t"),_("code",[e._v("f")]),e._v("."),_("code",[e._v("E")]),e._v("x"),_("code",[e._v("a")]),e._v("m"),_("code",[e._v("p")]),e._v("l"),_("code",[e._v("e")])]),e._v(" "),_("li",[_("code",[e._v("T")]),e._v("r"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("s")]),e._v("f"),_("code",[e._v("o")]),e._v("r"),_("code",[e._v("m")]),e._v("e"),_("code",[e._v("r")]),e._v(" "),_("code",[e._v("m")]),e._v("o"),_("code",[e._v("d")]),e._v("e"),_("code",[e._v("l")]),e._v(" "),_("code",[e._v("f")]),e._v("o"),_("code",[e._v("r")]),e._v(" "),_("code",[e._v("l")]),e._v("a"),_("code",[e._v("n")]),e._v("g"),_("code",[e._v("u")]),e._v("a"),_("code",[e._v("g")]),e._v("e"),_("code"),e._v("u"),_("code",[e._v("n")]),e._v("d"),_("code",[e._v("e")]),e._v("r"),_("code",[e._v("s")]),e._v("t"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("d")]),e._v("i"),_("code",[e._v("n")]),e._v("g``\nGiven "),_("code",[e._v("tensor")]),e._v(", this operation returns a "),_("code",[e._v("tensor")]),e._v(" that has the same values as "),_("code",[e._v("tensor")]),e._v(" with "),_("code",[e._v("shape")]),e._v(" "),_("code",[e._v("shape")]),e._v(".\nIf one component of "),_("code",[e._v("shape")]),e._v(" is the special value -1, the size of that dimension is computed so that the total size remains constant. In particular, a "),_("code",[e._v("shape")]),e._v(" of "),_("code",[e._v("[-1]")]),e._v(" flattens into 1-D. At most one component of "),_("code",[e._v("shape")]),e._v(" can be -1.\nIf "),_("code",[e._v("shape")]),e._v(" is 1-D or higher, then the operation returns a "),_("code",[e._v("tensor")]),e._v(" with "),_("code",[e._v("shape")]),e._v(" "),_("code",[e._v("shape")]),e._v(" filled with the values of "),_("code",[e._v("tensor")]),e._v(". In this case, the number of elements implied by "),_("code",[e._v("shape")]),e._v(" must be the same as the number of elements in "),_("code",[e._v("tensor")]),e._v(".")])]),e._v(" "),_("h4",{attrs:{id:"for-example"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" # tensor 't' is [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# tensor 't' has shape [9]\nreshape(t, [3, 3]) ==> [[1, 2, 3],\n                        [4, 5, 6],\n                        [7, 8, 9]]\n\n# tensor 't' is [[[1, 1], [2, 2]],\n#                [[3, 3], [4, 4]]]\n# tensor 't' has shape [2, 2, 2]\nreshape(t, [2, 4]) ==> [[1, 1, 2, 2],\n                        [3, 3, 4, 4]]\n\n# tensor 't' is [[[1, 1, 1],\n#                 [2, 2, 2]],\n#                [[3, 3, 3],\n#                 [4, 4, 4]],\n#                [[5, 5, 5],\n#                 [6, 6, 6]]]\n# tensor 't' has shape [3, 2, 3]\n# pass '[-1]' to flatten 't'\nreshape(t, [-1]) ==> [1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6]\n\n# -1 can also be used to infer the shape\n\n# -1 is inferred to be 9:\nreshape(t, [2, -1]) ==> [[1, 1, 1, 2, 2, 2, 3, 3, 3],\n                         [4, 4, 4, 5, 5, 5, 6, 6, 6]]\n# -1 is inferred to be 2:\nreshape(t, [-1, 9]) ==> [[1, 1, 1, 2, 2, 2, 3, 3, 3],\n                         [4, 4, 4, 5, 5, 5, 6, 6, 6]]\n# -1 is inferred to be 3:\nreshape(t, [ 2, -1, 3]) ==> [[[1, 1, 1],\n                              [2, 2, 2],\n                              [3, 3, 3]],\n                             [[4, 4, 4],\n                              [5, 5, 5],\n                              [6, 6, 6]]]\n\n# tensor 't' is [7]\n# shape `[]` reshapes to a scalar\nreshape(t, []) ==> 7\n")])])]),_("h4",{attrs:{id:"args"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("tensor")]),e._v(": A "),_("code",[e._v("Tensor")]),e._v(".")]),e._v(" "),_("li",[_("code",[e._v("shape")]),e._v(": A "),_("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),_("code",[e._v("int32")]),e._v(", "),_("code",[e._v("int64")]),e._v(". Defines the "),_("code",[e._v("shape")]),e._v(" of the output "),_("code",[e._v("tensor")]),e._v(".")]),e._v(" "),_("li",[_("code",[e._v("name")]),e._v(": A "),_("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),_("h4",{attrs:{id:"returns"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),_("p",[e._v("A "),_("code",[e._v("Tensor")]),e._v(". Has the same type as "),_("code",[e._v("tensor")]),e._v(".")])])}),[],!1,null,null,null);v.default=t.exports}}]);