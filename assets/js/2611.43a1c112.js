(window.webpackJsonp=window.webpackJsonp||[]).push([[2611],{2802:function(e,a,t){"use strict";t.r(a);var s=t(0),v=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Unpacks the given dimension of a rank-"),t("code",[e._v("R")]),e._v(" tensor into rank-("),t("code",[e._v("R")]),e._v("-1) tensors.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.unstack")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.unstack")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.unstack(\n    value,\n    num=None,\n    axis=0,\n    name='unstack'\n)\n")])])]),t("p",[e._v("Unpacks "),t("code",[e._v("num")]),e._v(" tensors from "),t("code",[e._v("value")]),e._v(" by chipping it along the "),t("code",[e._v("axis")]),e._v(" dimension. If "),t("code",[e._v("num")]),e._v(" is not specified (the default), it is inferred from "),t("code",[e._v("value")]),e._v("'s shape. If "),t("code",[e._v("value")]),e._v(".shape["),t("code",[e._v("axis")]),e._v("] is not known, "),t("code",[e._v("ValueError")]),e._v(" is raised.\nFor example, given a tensor of shape ("),t("code",[e._v("A, B, C, D")]),e._v(");\nIf "),t("code",[e._v("axis == 0")]),e._v(" then the i'th tensor in "),t("code",[e._v("output")]),e._v(" is the slice "),t("code",[e._v("value[i, :, :, :]")]),e._v(" and each tensor in "),t("code",[e._v("output")]),e._v(" will have shape ("),t("code",[e._v("B, C, DB, C, D")]),e._v("). (Note that the dimension unpacked along is gone, unlike ``).\nIf "),t("code",[e._v("axis == 1")]),e._v(" then the i'th tensor in "),t("code",[e._v("output")]),e._v(" is the slice "),t("code",[e._v("value[:, i, :, :]")]),e._v(" and each tensor in "),t("code",[e._v("output")]),e._v(" will have shape ("),t("code",[e._v("A, C, D")]),e._v("). Etc.\nThis is the opposite of stack.")]),e._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(": A rank "),t("code",[e._v("R > 0")]),e._v(" "),t("code",[e._v("Tensor")]),e._v(" to be unstacked.")]),e._v(" "),t("li",[t("code",[e._v("num")]),e._v(": An "),t("code",[e._v("int")]),e._v(". The length of the dimension "),t("code",[e._v("axis")]),e._v(". Automatically inferred if "),t("code",[e._v("None")]),e._v(" (the default).")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("The list of "),t("code",[e._v("Tensor")]),e._v(" objects unstacked from "),t("code",[e._v("value")]),e._v(".")]),e._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ValueError")]),e._v(": If "),t("code",[e._v("num")]),e._v(" is unspecified and cannot be inferred.")]),e._v(" "),t("li",[t("code",[e._v("ValueError")]),e._v(": If "),t("code",[e._v("axis")]),e._v(" is out of the range [-R, R).")])])])}),[],!1,null,null,null);a.default=v.exports}}]);