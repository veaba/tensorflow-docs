(window.webpackJsonp=window.webpackJsonp||[]).push([[1925],{2116:function(e,a,t){"use strict";t.r(a);var r=t(0),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"class-numpyarrayiterator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-numpyarrayiterator","aria-hidden":"true"}},[e._v("#")]),e._v(" Class NumpyArrayIterator")]),e._v(" "),t("p",[e._v("Iterator yielding data from a Numpy array.\n"),t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/keras/preprocessing/image/Iterator",target:"_blank",rel:"noopener noreferrer"}},[e._v("Iterator"),t("OutboundLink")],1),e._v("Inherits From:")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[e._v("Class "),t("code",[e._v("tf.compat.v1.keras.preprocessing.image.NumpyArrayIterator")])]),e._v(" "),t("li",[e._v("Class "),t("code",[e._v("tf.compat.v2.keras.preprocessing.image.NumpyArrayIterator")])])]),e._v(" "),t("h4",{attrs:{id:"arguments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": Numpy array of input data or tuple. If tuple, the second elements is either another numpy array or a list of numpy arrays, each of which gets passed through as an output without any modifications.")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": Nump"),t("code",[e._v("y")]),e._v(" arra"),t("code",[e._v("y")]),e._v(" of targets data.")]),e._v(" "),t("li",[t("code",[e._v("image_data_generator")]),e._v(": Instance of "),t("code",[e._v("ImageDataGenerator")]),e._v(" to use for random transformations and normalization.")]),e._v(" "),t("li",[t("code",[e._v("batch_size")]),e._v(": Integer, size of a batch.")]),e._v(" "),t("li",[t("code",[e._v("shuffle")]),e._v(": Boolean, whether to "),t("code",[e._v("shuffle")]),e._v(" the data between epochs.")]),e._v(" "),t("li",[t("code",[e._v("sample_weight")]),e._v(": Nump"),t("code",[e._v("y")]),e._v(" arra"),t("code",[e._v("y")]),e._v(" of sample weights.")]),e._v(" "),t("li",[t("code",[e._v("seed")]),e._v(": Random "),t("code",[e._v("seed")]),e._v(" for data shuffling.")]),e._v(" "),t("li",[t("code",[e._v("data_format")]),e._v(": String, one of "),t("code",[e._v("channels_first")]),e._v(", "),t("code",[e._v("channels_last")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("save_to_dir")]),e._v(": Optional director"),t("code",[e._v("y")]),e._v(" where to save the pictures being "),t("code",[e._v("y")]),e._v("ielded, in a viewable format. This is useful for visualizing the random transformations being applied, for debugging purposes.")]),e._v(" "),t("li",[t("code",[e._v("save_prefix")]),e._v(": String prefi"),t("code",[e._v("x")]),e._v(" to use for saving sample images (if "),t("code",[e._v("save_to_dir")]),e._v(" is set).")]),e._v(" "),t("li",[t("code",[e._v("save_format")]),e._v(": Format to use for saving sample images (if "),t("code",[e._v("save_to_dir")]),e._v(" is set).")]),e._v(" "),t("li",[t("code",[e._v("subset")]),e._v(": Subset of data ("),t("code",[e._v('"training"')]),e._v(" or "),t("code",[e._v('"validation"')]),e._v(") if validation_split is set in "),t("code",[e._v("ImageDataGenerator")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("dtype")]),e._v(": Dt"),t("code",[e._v("y")]),e._v("pe to use for the generated arra"),t("code",[e._v("y")]),e._v("s.")])]),e._v(" "),t("h2",{attrs:{id:"init"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("init")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/preprocessing/image.py#L261-L291",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __init__(\n    x,\n    y,\n    image_data_generator,\n    batch_size=32,\n    shuffle=False,\n    sample_weight=None,\n    seed=None,\n    data_format=None,\n    save_to_dir=None,\n    save_prefix='',\n    save_format='png',\n    subset=None,\n    dtype=None\n)\n")])])]),t("p",[e._v("Initialize self. See help(type(self)) for accurate signature.")]),e._v(" "),t("h2",{attrs:{id:"methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),t("h3",{attrs:{id:"getitem"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getitem","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("getitem")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __getitem__(idx)\n")])])]),t("p",[e._v("Gets batch at position index.")]),e._v(" "),t("h4",{attrs:{id:"arguments-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arguments-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("index")]),e._v(": position of the batch in the Sequence.")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A batch")]),e._v(" "),t("h3",{attrs:{id:"iter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#iter","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("iter")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __iter__()\n")])])]),t("p",[e._v("Create a generator that iterate over the Sequence.")]),e._v(" "),t("h3",{attrs:{id:"len"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#len","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("len")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __len__()\n")])])]),t("p",[e._v("Number of batch in the Sequence.")]),e._v(" "),t("h4",{attrs:{id:"returns-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("The number of batches in the Sequence.")]),e._v(" "),t("h3",{attrs:{id:"next"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#next","aria-hidden":"true"}},[e._v("#")]),e._v(" next")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" next()\n")])])]),t("p",[e._v("For python 2.x.")]),e._v(" "),t("h1",{attrs:{id:"returns-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" The next batch.\n")])])]),t("h3",{attrs:{id:"on-epoch-end"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#on-epoch-end","aria-hidden":"true"}},[e._v("#")]),e._v(" on_epoch_end")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" on_epoch_end()\n")])])]),t("p",[e._v("Method called at the end of every epoch.")]),e._v(" "),t("h3",{attrs:{id:"reset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reset","aria-hidden":"true"}},[e._v("#")]),e._v(" reset")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" reset()\n")])])]),t("h2",{attrs:{id:"class-members"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-members","aria-hidden":"true"}},[e._v("#")]),e._v(" Class Members")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("white_list_formats")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);