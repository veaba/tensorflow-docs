(window.webpackJsonp=window.webpackJsonp||[]).push([[460],{649:function(e,t,r){"use strict";r.r(t);var a=r(0),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"class-cudnngru"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#class-cudnngru","aria-hidden":"true"}},[e._v("#")]),e._v(" Class CuDNNGRU")]),e._v(" "),r("p",[e._v("Fast GRU implementation backed by cuDNN.\n"),r("a",{attrs:{href:"https://developer.nvidia.com/cudnn",target:"_blank",rel:"noopener noreferrer"}},[e._v("NVIDIA developer website"),r("OutboundLink")],1),e._v("More information about cuDNN can be found on the . Can only be run on GPU.")]),e._v(" "),r("h4",{attrs:{id:"arguments"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("units")]),e._v(": Positive integer, dimensionality of the output space.")]),e._v(" "),r("li",[r("code",[e._v("kernel_initializer")]),e._v(": Initializer for the "),r("code",[e._v("kernel")]),e._v(" weights matrix, used for the linear transformation of the inputs.")]),e._v(" "),r("li",[r("code",[e._v("recurrent_initializer")]),e._v(": Initializer for the "),r("code",[e._v("recurrent_kernel")]),e._v(" weights matrix, used for the linear transformation of the recurrent state.")]),e._v(" "),r("li",[r("code",[e._v("bias_initializer")]),e._v(": Initializer for the bias vector.")]),e._v(" "),r("li",[r("code",[e._v("kernel")]),e._v("_regularizer: Regularizer function applied to the "),r("code",[e._v("kernel")]),e._v(" weights matrix.")]),e._v(" "),r("li",[r("code",[e._v("recurrent_regularizer")]),e._v(": Regularizer function applied to the "),r("code",[e._v("recurrent_kernel")]),e._v(" weights matrix.")]),e._v(" "),r("li",[r("code",[e._v("bias_regularizer")]),e._v(": Regularizer function applied to the bias vector.")]),e._v(" "),r("li",[r("code",[e._v("activity_regularizer")]),e._v(': Regularizer function applied to the output of the layer (its "activation").')]),e._v(" "),r("li",[r("code",[e._v("kernel")]),e._v("_constraint: Constraint function applied to the "),r("code",[e._v("kernel")]),e._v(" weights matrix.")]),e._v(" "),r("li",[r("code",[e._v("recurrent_constraint")]),e._v(": Constraint function applied to the "),r("code",[e._v("recurrent_kernel")]),e._v(" weights matrix.")]),e._v(" "),r("li",[r("code",[e._v("bias_constraint")]),e._v(": Constraint function applied to the bias vector.")]),e._v(" "),r("li",[r("code",[e._v("return_sequences")]),e._v(": Boolean. Whether to return the last output in the output sequence, or the full sequence.")]),e._v(" "),r("li",[r("code",[e._v("return_state")]),e._v(": Boolean. Whether to return the last state in addition to the output.")]),e._v(" "),r("li",[r("code",[e._v("go_backwards")]),e._v(": Boolean (default False). If True, process the input sequence backwards and return the reversed sequence.")]),e._v(" "),r("li",[r("code",[e._v("stateful")]),e._v(": Boolean (default False). If True, the last state for each sample at index i in a batch will be used as initial state for the sample of index i in the following batch.")])]),e._v(" "),r("h2",{attrs:{id:"init"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("init")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/cudnn_recurrent.py#L198-L236",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __init__(\n    units,\n    kernel_initializer='glorot_uniform',\n    recurrent_initializer='orthogonal',\n    bias_initializer='zeros',\n    kernel_regularizer=None,\n    recurrent_regularizer=None,\n    bias_regularizer=None,\n    activity_regularizer=None,\n    kernel_constraint=None,\n    recurrent_constraint=None,\n    bias_constraint=None,\n    return_sequences=False,\n    return_state=False,\n    go_backwards=False,\n    stateful=False,\n    **kwargs\n)\n")])])]),r("h2",{attrs:{id:"properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),r("h3",{attrs:{id:"cell"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cell","aria-hidden":"true"}},[e._v("#")]),e._v(" cell")]),e._v(" "),r("h3",{attrs:{id:"states"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#states","aria-hidden":"true"}},[e._v("#")]),e._v(" states")]),e._v(" "),r("h2",{attrs:{id:"methods"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),r("h3",{attrs:{id:"get-initial-state"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#get-initial-state","aria-hidden":"true"}},[e._v("#")]),e._v(" get_initial_state")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/recurrent.py#L593-L614",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" get_initial_state(inputs)\n")])])]),r("h3",{attrs:{id:"reset-states"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reset-states","aria-hidden":"true"}},[e._v("#")]),e._v(" reset_states")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/recurrent.py#L806-L858",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" reset_states(states=None)\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);