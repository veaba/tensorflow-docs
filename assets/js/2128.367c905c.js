(window.webpackJsonp=window.webpackJsonp||[]).push([[2128],{2316:function(a,e,t){"use strict";t.r(e);var r=t(0),s=Object(r.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("Returns the real part of a complex (or real) tensor.")]),a._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("tf.compat.v1.math.real")])]),a._v(" "),t("li",[t("code",[a._v("tf.compat.v1.real")])]),a._v(" "),t("li",[t("code",[a._v("tf.compat.v2.math.real")])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" tf.math.real(\n    input,\n    name=None\n)\n")])])]),t("p",[a._v("Given a tensor input, this operation returns a tensor of type float that is the real part of each element in input considered as a complex number.")]),a._v(" "),t("h4",{attrs:{id:"for-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[a._v("#")]),a._v(" For example:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" x = tf.constant([-2.25 + 4.75j, 3.25 + 5.75j])\ntf.math.real(x)  # [-2.25, 3.25]\n")])])]),t("p",[a._v("If input is already real, it is returned unchanged.")]),a._v(" "),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[a._v("#")]),a._v(" Args:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("input")]),a._v(": A "),t("code",[a._v("Tensor")]),a._v(". Must have numeric type.")]),a._v(" "),t("li",[t("code",[a._v("name")]),a._v(": A "),t("code",[a._v("name")]),a._v(" for the operation (optional).")])]),a._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns:")]),a._v(" "),t("p",[a._v("A Tensor of type float32 or float64.")])])}),[],!1,null,null,null);e.default=s.exports}}]);