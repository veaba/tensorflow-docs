(window.webpackJsonp=window.webpackJsonp||[]).push([[1295],{1487:function(t,e,a){"use strict";a.r(e);var s=a(0),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"class-exportoutput"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-exportoutput","aria-hidden":"true"}},[t._v("#")]),t._v(" Class ExportOutput")]),t._v(" "),a("p",[t._v("Represents an output of a model that can be served.")]),t._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),a("ul",[a("li",[t._v("Class "),a("code",[t._v("tf.compat.v1.estimator.export.ExportOutput")])]),t._v(" "),a("li",[t._v("Class "),a("code",[t._v("tf.compat.v2.estimator.export.ExportOutput")])])]),t._v(" "),a("p",[t._v("These typically correspond to model heads.")]),t._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),a("h3",{attrs:{id:"as-signature-def"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#as-signature-def","aria-hidden":"true"}},[t._v("#")]),t._v(" as_signature_def")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/saved_model/model_utils/export_output.py#L42-L53",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" as_signature_def(receiver_tensors)\n")])])]),a("p",[t._v("Generate a SignatureDef proto for inclusion in a MetaGraphDef.")]),t._v(" "),a("p",[t._v("The SignatureDef will specify outputs as described in this ExportOutput, and will use the provided receiver_tensors as inputs.")]),t._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("receiver_tensors")]),t._v(": a "),a("code",[t._v("Tensor")]),t._v(", or a dict of string to "),a("code",[t._v("Tensor")]),t._v(", specifying input nodes that will be fed.")])])])}),[],!1,null,null,null);e.default=r.exports}}]);