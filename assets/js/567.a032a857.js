(window.webpackJsonp=window.webpackJsonp||[]).push([[567],{755:function(e,o,s){"use strict";s.r(o);var t=s(0),_=Object(t.a)({},(function(){var e=this,o=e.$createElement,s=e._self._c||o;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Adds a pairwise-errors-squared loss to the training procedure.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.compat.v1.losses.mean_pairwise_squared_error(\n    labels,\n    predictions,\n    weights=1.0,\n    scope=None,\n    loss_collection=tf.GraphKeys.LOSSES\n)\n")])])]),s("p",[e._v("Unlike mean_squared_error, which is a measure of the differences between corresponding elements of predictions and labels, mean_pairwise_squared_error is a measure of the differences between pairs of corresponding elements of predictions and labels.")]),e._v(" "),s("p",[e._v("For example, if labels=[a, b, c] and predictions=[x, y, z], there are three pairs of differences are summed to compute the loss: loss = [ ((a-b) - (x-y)).^2 + ((a-c) - (x-z)).^2 + ((b-c) - (y-z)).^2 ] / 3")]),e._v(" "),s("p",[e._v("Note that since the inputs are of shape [batch_size, d0, ... dN], the corresponding pairs are computed within each batch sample but not across samples within a batch. For example, if predictions represents a batch of 16 grayscale images of dimension [batch_size, 100, 200], then the set of pairs is drawn from each image, but not across images.")]),e._v(" "),s("p",[e._v("weights acts as a coefficient for the loss. If a scalar is provided, then the loss is simply scaled by the given value. If weights is a tensor of size [batch_size], then the total loss for each sample of the batch is rescaled by the corresponding element in the weights vector.")]),e._v(" "),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("labels")]),e._v(": The ground truth output tensor, whose shape must match the shape of "),s("code",[e._v("predictions")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("predictions")]),e._v(":"),s("code"),e._v("T"),s("code",[e._v("h``e``")]),e._v("pr"),s("code",[e._v("e``d``i``c``t``e``d``")]),e._v("ou"),s("code",[e._v("t")]),e._v("pu"),s("code",[e._v("t``s``,`` ``a`` ``t``e")]),e._v("n"),s("code",[e._v("s")]),e._v("or"),s("code"),e._v("of"),s("code",[e._v("``s``i``z``e``")]),e._v("["),s("code",[e._v("b``a``t``c``h``_``s``i``z``e``,`` ``d``0``,`` ``.``.`` ``d``N")]),e._v("]"),s("code"),e._v("w"),s("code",[e._v("h``e")]),e._v("r"),s("code",[e._v("e`` ``N")]),e._v("+1"),s("code",[e._v("``i``s`` ``t``h``e`` ``t")]),e._v("o"),s("code",[e._v("t``a")]),e._v("l"),s("code"),e._v("num"),s("code",[e._v("b``e")]),e._v("r"),s("code"),e._v("of"),s("code",[e._v("``d``i")]),e._v("m"),s("code",[e._v("e")]),e._v("n"),s("code",[e._v("s``i")]),e._v("on"),s("code",[e._v("s`` ``i")]),e._v("n"),s("code",[e._v("``predictions``.")])]),e._v(" "),s("li",[s("code",[e._v("weights")]),e._v(":"),s("code"),e._v("Co"),s("code",[e._v("e")]),e._v("ff"),s("code",[e._v("i``c``i``e")]),e._v("n"),s("code",[e._v("t``s``")]),e._v("for"),s("code",[e._v("``t``h``e``")]),e._v("lo"),s("code",[e._v("s``s`` ``a`` ``s``c``a")]),e._v("l"),s("code",[e._v("a")]),e._v("r"),s("code",[e._v(",`` ``a`` ``t``e")]),e._v("n"),s("code",[e._v("s")]),e._v("or"),s("code"),e._v("of"),s("code",[e._v("``s``h``a")]),e._v("p"),s("code",[e._v("e``")]),e._v("["),s("code",[e._v("b``a``t``c``h``_``s``i``z``e")]),e._v("]"),s("code"),e._v("or"),s("code",[e._v("``a`` ``t``e")]),e._v("n"),s("code",[e._v("s")]),e._v("or"),s("code"),e._v("w"),s("code",[e._v("h")]),e._v("o"),s("code",[e._v("s``e`` ``s``h``a")]),e._v("p"),s("code",[e._v("e``")]),e._v("m"),s("code",[e._v("a``t``c``h``e``s`` ``predictions``.")])]),e._v(" "),s("li",[s("code",[e._v("s``c")]),e._v("op"),s("code",[e._v("e")]),e._v(":"),s("code"),e._v("T"),s("code",[e._v("h``e`` ``s``c")]),e._v("op"),s("code",[e._v("e``")]),e._v("for"),s("code",[e._v("``t``h``e``")]),e._v("op"),s("code",[e._v("e")]),e._v("r"),s("code",[e._v("a``t``i")]),e._v("on"),s("code",[e._v("s``")]),e._v("p"),s("code",[e._v("e")]),e._v("rform"),s("code",[e._v("e``d`` ``i")]),e._v("n"),s("code",[e._v("``c")]),e._v("ompu"),s("code",[e._v("t``i")]),e._v("ng"),s("code",[e._v("``t``h``e``")]),e._v("lo"),s("code",[e._v("s``s``.")])]),e._v(" "),s("li",[s("code",[e._v("loss_collection")]),e._v(":"),s("code",[e._v("``c")]),e._v("oll"),s("code",[e._v("e``c``t``i")]),e._v("on"),s("code",[e._v("``t")]),e._v("o"),s("code"),e._v("w"),s("code",[e._v("h``i``c``h`` ``t``h``e``")]),e._v("lo"),s("code",[e._v("s``s``")]),e._v("w"),s("code",[e._v("i")]),e._v("ll"),s("code",[e._v("``b``e`` ``a``d``d``e``d``.")])])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("A scalar Tensor that returns the weighted loss.")]),e._v(" "),s("h4",{attrs:{id:"raises"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("ValueError")]),e._v(": If the shape of "),s("code",[e._v("predictions")]),e._v(" doesn't match that of "),s("code",[e._v("labels")]),e._v(" or if the shape of "),s("code",[e._v("weights")]),e._v(" is invalid. Also if "),s("code",[e._v("labels")]),e._v(" or "),s("code",[e._v("predictions")]),e._v(" is None.")])]),e._v(" "),s("h4",{attrs:{id:"eager-compatibility"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eager-compatibility","aria-hidden":"true"}},[e._v("#")]),e._v(" Eager Compatibility")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/keras/Model",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.keras.Model"),s("OutboundLink")],1),e._v("The loss_collection argument is ignored when executing eagerly. Consider holding on to the return value or collecting losses via a .")])])}),[],!1,null,null,null);o.default=_.exports}}]);