(window.webpackJsonp=window.webpackJsonp||[]).push([[291],{479:function(e,a,s){"use strict";s.r(a);var t=s(0),l=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Registers a flag whose value can be the name of enum members.")]),e._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tf.compat.v1.app.flags.DEFINE_enum_class")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.compat.v1.flags.DEFINE_enum_class(\n    name,\n    default,\n    enum_class,\n    help,\n    flag_values=_flagvalues.FLAGS,\n    module_name=None,\n    **args\n)\n")])])]),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("name")]),e._v(": str, the flag "),s("code",[e._v("name")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("default")]),e._v(": Enum|str|None, the "),s("code",[e._v("default")]),e._v(" value of the flag.")]),e._v(" "),s("li",[s("code",[e._v("enum_class")]),e._v(": class, the Enum class with all the possible values for the flag.")]),e._v(" "),s("li",[s("code",[e._v("help")]),e._v(": str, the "),s("code",[e._v("help")]),e._v(" message.")]),e._v(" "),s("li",[s("code",[e._v("flag_values")]),e._v(": FlagValues, the FlagValues instance with which the flag will be registered. This should almost never need to be overridden.")]),e._v(" "),s("li",[s("code",[e._v("module_name")]),e._v(": str, the "),s("code",[e._v("name")]),e._v(" of the Python module declaring this flag. If not provided, it will be computed using the stack trace of this call.")])])])}),[],!1,null,null,null);a.default=l.exports}}]);