(window.webpackJsonp=window.webpackJsonp||[]).push([[1750],{1941:function(t,e,a){"use strict";a.r(e);var s=a(0),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"class-dot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-dot","aria-hidden":"true"}},[t._v("#")]),t._v(" Class Dot")]),t._v(" "),a("p",[t._v("Layer that computes a dot product between samples in two tensors.")]),t._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),a("ul",[a("li",[t._v("Class "),a("code",[t._v("tf.compat.v1.keras.layers.Dot")])]),t._v(" "),a("li",[t._v("Class "),a("code",[t._v("tf.compat.v2.keras.layers.Dot")])])]),t._v(" "),a("p",[t._v("E.g. if applied to a list of two tensors a and b of shape (batch_size, n), the output will be a tensor of shape (batch_size, 1) where each entry i will be the dot product between a[i] and b[i].")]),t._v(" "),a("h4",{attrs:{id:"arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[t._v("#")]),t._v(" Arguments:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("axes")]),t._v(": Integer or tuple of integers, axis or "),a("code",[t._v("axes")]),t._v(" along which to take the dot product.")]),t._v(" "),a("li",[a("code",[t._v("normalize")]),t._v(": Whether to L2-"),a("code",[t._v("normalize")]),t._v(" samples along the dot product axis before taking the dot product. If set to True, then the output of the dot product is the cosine proximity between the two samples.")])]),t._v(" "),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("init")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/merge.py#L465-L480",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" __init__(\n    axes,\n    normalize=False,\n    **kwargs\n)\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);