(window.webpackJsonp=window.webpackJsonp||[]).push([[1177],{1366:function(e,t,r){"use strict";r.r(t);var a=r(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"class-reductiontoonedevice"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#class-reductiontoonedevice","aria-hidden":"true"}},[e._v("#")]),e._v(" Class ReductionToOneDevice")]),e._v(" "),r("p",[e._v("Always do reduction to one device first and then do broadcasting.\n"),r("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/distribute/CrossDeviceOps",target:"_blank",rel:"noopener noreferrer"}},[e._v("CrossDeviceOps"),r("OutboundLink")],1),e._v("Inherits From:")]),e._v(" "),r("h3",{attrs:{id:"aliases"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),r("ul",[r("li",[e._v("Class "),r("code",[e._v("tf.compat.v1.distribute.ReductionToOneDevice")])]),e._v(" "),r("li",[e._v("Class "),r("code",[e._v("tf.compat.v2.distribute.ReductionToOneDevice")])])]),e._v(" "),r("p",[e._v("Batch reduction is done by reduction on each element one by one.")]),e._v(" "),r("h2",{attrs:{id:"init"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("strong",[e._v("init")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/distribute/cross_device_ops.py#L406-L417",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" __init__(\n    reduce_to_device=None,\n    accumulation_fn=None\n)\n")])])]),r("p",[e._v("Constructor.")]),e._v(" "),r("h4",{attrs:{id:"args"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("reduce_to_device")]),e._v(": the intermediate device to reduce to. If None, reduce to the first device in "),r("code",[e._v("destinations")]),e._v(" of the reduce() method.")]),e._v(" "),r("li",[r("code",[e._v("accumulation_fn")]),e._v(": a function that does accumulation. If None, then "),r("code",[e._v("tf.math.add_n")]),e._v(" is used.")])]),e._v(" "),r("h2",{attrs:{id:"methods"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),r("h3",{attrs:{id:"batch-reduce"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#batch-reduce","aria-hidden":"true"}},[e._v("#")]),e._v(" batch_reduce")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/distribute/cross_device_ops.py#L284-L324",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" batch_reduce(\n    reduce_op,\n    value_destination_pairs\n)\n")])])]),r("p",[e._v("Reduce PerReplica objects in a batch.")]),e._v(" "),r("p",[e._v("Reduce each first element in value_destination_pairs to each second element which indicates the destinations.")]),e._v(" "),r("h4",{attrs:{id:"args-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("reduce_op")]),e._v(": Indicates how per_replica_value will be reduced. Accepted values are "),r("code",[e._v("tf.distribute.ReduceOp.SUM")]),e._v(", "),r("code",[e._v("tf.distribute.ReduceOp.MEAN")]),e._v(".")]),e._v(" "),r("li",[r("code",[e._v("value_destination_pairs")]),e._v(": a list or a tuple of tuples of PerReplica objects (or tensors with device set if there is one device) and destinations.")])]),e._v(" "),r("h4",{attrs:{id:"returns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("a list of Mirrored objects.")]),e._v(" "),r("h4",{attrs:{id:"raises"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("ValueError")]),e._v(": if "),r("code",[e._v("value_destination_pairs")]),e._v(" is not a list or a tuple of tuples of PerReplica objects and destinations")])]),e._v(" "),r("h3",{attrs:{id:"broadcast"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#broadcast","aria-hidden":"true"}},[e._v("#")]),e._v(" broadcast")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/distribute/cross_device_ops.py#L326-L337",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" broadcast(\n    tensor,\n    destinations\n)\n")])])]),r("p",[e._v("Broadcast the tensor to destinations.")]),e._v(" "),r("h4",{attrs:{id:"args-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("tensor")]),e._v(": the "),r("code",[e._v("tensor")]),e._v(" to broadcast.")]),e._v(" "),r("li",[r("code",[e._v("destinations")]),e._v(": the broadcast "),r("code",[e._v("destinations")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"returns-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("a Mirrored object.")]),e._v(" "),r("h3",{attrs:{id:"reduce"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reduce","aria-hidden":"true"}},[e._v("#")]),e._v(" reduce")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/distribute/cross_device_ops.py#L248-L282",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),r("OutboundLink")],1)]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" reduce(\n    reduce_op,\n    per_replica_value,\n    destinations\n)\n")])])]),r("p",[e._v("Reduce per_replica_value to destinations.")]),e._v(" "),r("p",[e._v("It runs the reduction operation defined by reduce_op and put the result on destinations.")]),e._v(" "),r("h4",{attrs:{id:"args-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("reduce_op")]),e._v(": Indicates how per_replica_value will be reduced. Accepted values are "),r("code",[e._v("tf.distribute.ReduceOp.SUM")]),e._v(", "),r("code",[e._v("tf.distribute.ReduceOp.MEAN")]),e._v(".")]),e._v(" "),r("li",[r("code",[e._v("per_replica_value")]),e._v(": a PerReplica object or a tensor with device set.")]),e._v(" "),r("li",[r("code",[e._v("destinations")]),e._v(": the reduction "),r("code",[e._v("destinations")]),e._v(".")])]),e._v(" "),r("h4",{attrs:{id:"returns-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("a Mirrored object.")]),e._v(" "),r("h4",{attrs:{id:"raises-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raises-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("ValueError")]),e._v(": if per_replica_value can't be converted to a PerReplica object.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);