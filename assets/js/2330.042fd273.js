(window.webpackJsonp=window.webpackJsonp||[]).push([[2330],{2518:function(e,a,s){"use strict";s.r(a);var t=s(0),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Reconstructs a signal from a framed representation.")]),e._v(" "),s("h3",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("tf.compat.v1.signal.overlap_and_add")])]),e._v(" "),s("li",[s("code",[e._v("tf.compat.v2.signal.overlap_and_add")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.signal.overlap_and_add(\n    signal,\n    frame_step,\n    name=None\n)\n")])])]),s("p",[e._v("Adds potentially overlapping frames of a signal with shape [..., frames, frame_length], offsetting subsequent frames by frame_step. The resulting tensor has shape [..., output_size] where")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" output_size = (frames - 1) * frame_step + frame_length\n")])])]),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("signal")]),e._v(": A [..., frames, frame_length] "),s("code",[e._v("Tensor")]),e._v(". All dimensions may be unknown, and rank must be at least 2.")]),e._v(" "),s("li",[s("code",[e._v("frame_step")]),e._v(": An integer or scalar "),s("code",[e._v("Tensor")]),e._v(" denoting overlap offsets. Must be less than or equal to "),s("code",[e._v("frame_length")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("name")]),e._v(": An optional "),s("code",[e._v("name")]),e._v(" for the operation.")])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("A Tensor with shape [..., output_size] containing the overlap-added frames of signal's inner-most two dimensions.")]),e._v(" "),s("h4",{attrs:{id:"raises"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("ValueError")]),e._v(": If "),s("code",[e._v("signal")]),e._v("'s rank is less than 2, or "),s("code",[e._v("frame_step")]),e._v(" is not a scalar integer.")])])])}),[],!1,null,null,null);a.default=r.exports}}]);