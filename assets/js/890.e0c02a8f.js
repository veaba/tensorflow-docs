(window.webpackJsonp=window.webpackJsonp||[]).push([[890],{1078:function(e,t,r){"use strict";r.r(t);var a=r(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("Checks whether a V1 or V2 checkpoint exists with the specified prefix. (deprecated)")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" tf.compat.v1.train.checkpoint_exists(checkpoint_prefix)\n")])])]),r("p",[e._v("This is the recommended way to check if a checkpoint exists, since it takes into account the naming difference between V1 and V2 formats.")]),e._v(" "),r("h4",{attrs:{id:"args"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("checkpoint_prefix")]),e._v(": the prefix of a V1 or V2 checkpoint, with V2 taking priority. Typically the result of "),r("code",[e._v("Saver.save")]),e._v("() or that of "),r("code",[e._v("tf.train.latest_checkpoint")]),e._v("(), regardless of sharded/non-sharded or V1/V2.")])]),e._v(" "),r("h4",{attrs:{id:"returns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),r("p",[e._v("A bool, true if a checkpoint referred to by checkpoint_prefix exists.")])])}),[],!1,null,null,null);t.default=s.exports}}]);