(window.webpackJsonp=window.webpackJsonp||[]).push([[2156],{2344:function(v,_,e){"use strict";e.r(_);var o=e(0),d=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[v._v("Defined in generated file: python/ops/gen_math_ops.py")]),v._v(" "),e("p",[v._v("Computes square of x element-wise.")]),v._v(" "),e("h3",{attrs:{id:"aliases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[v._v("#")]),v._v(" Aliases:")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("tf.compat.v1.math.square")])]),v._v(" "),e("li",[e("code",[v._v("tf.compat.v1.square")])]),v._v(" "),e("li",[e("code",[v._v("tf.compat.v2.math.square")])]),v._v(" "),e("li",[e("code",[v._v("tf.compat.v2.square")])]),v._v(" "),e("li",[e("code",[v._v("tf.square")])])]),v._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v(" tf.math.square(\n    x,\n    name=None\n)\n")])])]),e("h3",{attrs:{id:"used-in-the-guide"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[v._v("#")]),v._v(" Used in the guide:")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("E")]),v._v("a"),e("code",[v._v("g")]),v._v("e"),e("code",[v._v("r")]),v._v(" "),e("code",[v._v("e")]),v._v("x"),e("code",[v._v("e")]),v._v("c"),e("code",[v._v("u")]),v._v("t"),e("code",[v._v("i")]),v._v("o"),e("code",[v._v("n")])]),v._v(" "),e("li",[e("code",[v._v("W")]),v._v("r"),e("code",[v._v("i")]),v._v("t"),e("code",[v._v("i")]),v._v("n"),e("code",[v._v("g")]),v._v(" "),e("code",[v._v("c")]),v._v("u"),e("code",[v._v("s")]),v._v("t"),e("code",[v._v("o")]),v._v("m"),e("code"),v._v("l"),e("code",[v._v("a")]),v._v("y"),e("code",[v._v("e")]),v._v("r"),e("code",[v._v("s")]),v._v(" "),e("code",[v._v("a")]),v._v("n"),e("code",[v._v("d")]),v._v(" "),e("code",[v._v("m")]),v._v("o"),e("code",[v._v("d")]),v._v("e"),e("code",[v._v("l")]),v._v("s"),e("code"),v._v("w"),e("code",[v._v("i")]),v._v("t"),e("code",[v._v("h")]),v._v(" "),e("code",[v._v("K")]),v._v("e"),e("code",[v._v("r")]),v._v("a"),e("code",[v._v("s")])])]),v._v(" "),e("h3",{attrs:{id:"used-in-the-tutorials"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[v._v("#")]),v._v(" Used in the tutorials:")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("C")]),v._v("u"),e("code",[v._v("s")]),v._v("t"),e("code",[v._v("o")]),v._v("m"),e("code"),v._v("t"),e("code",[v._v("r")]),v._v("a"),e("code",[v._v("i")]),v._v("n"),e("code",[v._v("i")]),v._v("n"),e("code",[v._v("g")]),v._v(" "),e("code",[v._v("w")]),v._v("i"),e("code",[v._v("t")]),v._v("h"),e("code"),v._v("t"),e("code",[v._v("f")]),v._v("."),e("code",[v._v("d")]),v._v("i"),e("code",[v._v("s")]),v._v("t"),e("code",[v._v("r")]),v._v("i"),e("code",[v._v("b")]),v._v("u"),e("code",[v._v("t")]),v._v("e"),e("code",[v._v(".")]),v._v("S"),e("code",[v._v("t")]),v._v("r"),e("code",[v._v("a")]),v._v("t"),e("code",[v._v("e")]),v._v("g"),e("code",[v._v("y")])]),v._v(" "),e("li",[e("code",[v._v("C")]),v._v("u"),e("code",[v._v("s")]),v._v("t"),e("code",[v._v("o")]),v._v("m"),e("code"),v._v("t"),e("code",[v._v("r")]),v._v("a"),e("code",[v._v("i")]),v._v("n"),e("code",[v._v("i")]),v._v("n"),e("code",[v._v("g")]),v._v(":"),e("code"),v._v("b"),e("code",[v._v("a")]),v._v("s"),e("code",[v._v("i")]),v._v("c"),e("code",[v._v("s")])]),v._v(" "),e("li",[e("code",[v._v("C")]),v._v("u"),e("code",[v._v("s")]),v._v("t"),e("code",[v._v("o")]),v._v("m"),e("code",[v._v("i")]),v._v("z"),e("code",[v._v("a")]),v._v("t"),e("code",[v._v("i")]),v._v("o"),e("code",[v._v("n")]),v._v(" "),e("code",[v._v("b")]),v._v("a"),e("code",[v._v("s")]),v._v("i"),e("code",[v._v("c")]),v._v("s"),e("code",[v._v(":")]),v._v(" "),e("code",[v._v("t")]),v._v("e"),e("code",[v._v("n")]),v._v("s"),e("code",[v._v("o")]),v._v("r"),e("code",[v._v("s")]),v._v(" "),e("code",[v._v("a")]),v._v("n"),e("code",[v._v("d")]),v._v(" "),e("code",[v._v("o")]),v._v("p"),e("code",[v._v("e")]),v._v("r"),e("code",[v._v("a")]),v._v("t"),e("code",[v._v("i")]),v._v("o"),e("code",[v._v("n")]),v._v("s``")])]),v._v(" "),e("p",[v._v("I.e.,\n.")]),v._v(" "),e("h4",{attrs:{id:"args"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[v._v("#")]),v._v(" Args:")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("x")]),v._v(": A "),e("code",[v._v("Tensor")]),v._v(". Must be one of the following types: "),e("code",[v._v("bfloat16")]),v._v(", "),e("code",[v._v("half")]),v._v(", "),e("code",[v._v("float32")]),v._v(", "),e("code",[v._v("float64")]),v._v(", "),e("code",[v._v("int32")]),v._v(", "),e("code",[v._v("int64")]),v._v(", "),e("code",[v._v("complex64")]),v._v(", "),e("code",[v._v("complex128")]),v._v(".")]),v._v(" "),e("li",[e("code",[v._v("name")]),v._v(": A "),e("code",[v._v("name")]),v._v(" for the operation (optional).")])]),v._v(" "),e("h4",{attrs:{id:"returns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[v._v("#")]),v._v(" Returns:")]),v._v(" "),e("p",[v._v("A Tensor. Has the same type as x.")]),v._v(" "),e("p",[v._v("If x is a SparseTensor, returns SparseTensor(x.indices, tf.math.square(x.values, ...), x.dense_shape)")])])}),[],!1,null,null,null);_.default=d.exports}}]);