(window.webpackJsonp=window.webpackJsonp||[]).push([[225],{413:function(e,t,s){"use strict";s.r(t);var i=s(0),r=Object(i.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Get the KL-divergence KL(distribution_a || distribution_b). (deprecated)")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" tf.compat.v1.distributions.kl_divergence(\n    distribution_a,\n    distribution_b,\n    allow_nan_stats=True,\n    name=None\n)\n")])])]),s("p",[e._v("If there is no KL method registered specifically for type(distribution_a) and type(distribution_b), then the class hierarchies of these types are searched.")]),e._v(" "),s("p",[e._v("If one KL method is registered between any pairs of classes in these two parent hierarchies, it is used.")]),e._v(" "),s("p",[e._v("If more than one such registered method exists, the method whose registered classes have the shortest sum MRO paths to the input types is used.")]),e._v(" "),s("p",[e._v("If more than one such shortest path exists, the first method identified in the search is used (favoring a shorter MRO distance to type(distribution_a)).")]),e._v(" "),s("h4",{attrs:{id:"args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("distribution_a")]),e._v(": The first distribution.")]),e._v(" "),s("li",[s("code",[e._v("distribution_b")]),e._v(": The second distribution.")]),e._v(" "),s("li",[s("code",[e._v("allow_nan_stats")]),e._v(": Python "),s("code",[e._v("bool")]),e._v(", default "),s("code",[e._v("True")]),e._v(". When "),s("code",[e._v("True")]),e._v(', statistics (e.g., mean, mode, variance) use the value "'),s("code",[e._v("NaN")]),e._v('" to indicate the result is undefined. When '),s("code",[e._v("False")]),e._v(", an exception is raised if one or more of the statistic's batch members are undefined.")]),e._v(" "),s("li",[s("code",[e._v("name")]),e._v(": Python "),s("code",[e._v("str")]),e._v(" "),s("code",[e._v("name")]),e._v(" prefixed to Ops created by this class.")])]),e._v(" "),s("h4",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),s("p",[e._v("A Tensor with the batchwise KL-divergence between distribution_a and distribution_b.")]),e._v(" "),s("h4",{attrs:{id:"raises"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("NotImplementedError")]),e._v(": If no KL method is defined for distribution types of "),s("code",[e._v("distribution_a")]),e._v(" and "),s("code",[e._v("distribution_b")]),e._v(".")])])])}),[],!1,null,null,null);t.default=r.exports}}]);