(window.webpackJsonp=window.webpackJsonp||[]).push([[2518],{2709:function(t,a,e){"use strict";e.r(a);var s=e(0),i=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Defined in generated file: "),e("code",[t._v("python/ops/gen_data_flow_ops.py")]),t._v("\nPartitions "),e("code",[t._v("data")]),t._v(" into "),e("code",[t._v("num_partitions")]),t._v(" tensors using indices from "),e("code",[t._v("partitions")]),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"aliases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("tf.compat.v1.dynamic_partition")])]),t._v(" "),e("li",[e("code",[t._v("tf.compat.v2.dynamic_partition")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" tf.dynamic_partition(\n    data,\n    partitions,\n    num_partitions,\n    name=None\n)\n")])])]),e("p",[t._v("For each "),e("code",[t._v("i")]),t._v("ndex tuple "),e("code",[t._v("js")]),t._v(" of s"),e("code",[t._v("i")]),t._v("ze "),e("code",[t._v("partitions.ndim")]),t._v(", the sl"),e("code",[t._v("i")]),t._v("ce "),e("code",[t._v("data[js, ...]")]),t._v(" becomes part of "),e("code",[t._v("outputs[partitions[js]]")]),t._v(". The sl"),e("code",[t._v("i")]),t._v("ces w"),e("code",[t._v("i")]),t._v("th "),e("code",[t._v("partitions[js] = i")]),t._v(" are placed "),e("code",[t._v("i")]),t._v("n "),e("code",[t._v("outputs[i]")]),t._v(" "),e("code",[t._v("i")]),t._v("n lex"),e("code",[t._v("i")]),t._v("cograph"),e("code",[t._v("i")]),t._v("c order of "),e("code",[t._v("js")]),t._v(", and the f"),e("code",[t._v("i")]),t._v("rst d"),e("code",[t._v("i")]),t._v("mens"),e("code",[t._v("i")]),t._v("on of "),e("code",[t._v("outputs[i]")]),t._v(" "),e("code",[t._v("i")]),t._v("s the number of entr"),e("code",[t._v("i")]),t._v("es "),e("code",[t._v("i")]),t._v("n "),e("code",[t._v("partitions")]),t._v(" equal to "),e("code",[t._v("i")]),t._v(". In deta"),e("code",[t._v("i")]),t._v("l,")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("     outputs[i].shape = [sum(partitions == i)] + data.shape[partitions.ndim:]\n\n    outputs[i] = pack([data[js, ...] for js if partitions[js] == i])\n")])])]),e("p",[e("code",[t._v("data.shape")]),t._v(" must start with "),e("code",[t._v("partitions.shape")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"for-example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[t._v("#")]),t._v(" For example:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("     # Scalar partitions.\n    partitions = 1\n    num_partitions = 2\n    data = [10, 20]\n    outputs[0] = []  # Empty with shape [0, 2]\n    outputs[1] = [[10, 20]]\n\n    # Vector partitions.\n    partitions = [0, 0, 1, 1, 0]\n    num_partitions = 2\n    data = [10, 20, 30, 40, 50]\n    outputs[0] = [10, 20, 50]\n    outputs[1] = [30, 40]\n")])])]),e("p",[t._v("See "),e("code",[t._v("dynamic_stitch")]),t._v(" for an example on how to merge partitions back.")]),t._v(" "),e("h4",{attrs:{id:"args"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("data")]),t._v(": A "),e("code",[t._v("Tensor")]),t._v(".")])]),t._v(" "),e("h4",{attrs:{id:"returns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),e("p",[t._v("A list of "),e("code",[t._v("num_partitions")]),t._v(" "),e("code",[t._v("Tensor")]),t._v(" objects with the same type as "),e("code",[t._v("data")]),t._v(".")])])}),[],!1,null,null,null);a.default=i.exports}}]);