(window.webpackJsonp=window.webpackJsonp||[]).push([[1566],{1757:function(a,t,e){"use strict";e.r(t);var r=e(0),n=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("Selects x in train phase, and alt otherwise.")]),a._v(" "),e("h3",{attrs:{id:"aliases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[a._v("#")]),a._v(" Aliases:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("tf.compat.v1.keras.backend.in_train_phase")])]),a._v(" "),e("li",[e("code",[a._v("tf.compat.v2.keras.backend.in_train_phase")])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(" tf.keras.backend.in_train_phase(\n    x,\n    alt,\n    training=None\n)\n")])])]),e("p",[a._v("Note that alt should have the same shape as x.")]),a._v(" "),e("h4",{attrs:{id:"arguments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[a._v("#")]),a._v(" Arguments:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("x")]),a._v(": What to return in train phase (tensor or callable that returns a tensor).")]),a._v(" "),e("li",[e("code",[a._v("alt")]),a._v(": What to return otherwise (tensor or callable that returns a tensor).")]),a._v(" "),e("li",[e("code",[a._v("training")]),a._v(": Optional scalar tensor (or Python boolean, or Python integer) specifying the learning phase.")])]),a._v(" "),e("h4",{attrs:{id:"returns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns:")]),a._v(" "),e("p",[a._v("Either x or alt based on the training flag. the training flag defaults to K.learning_phase().")])])}),[],!1,null,null,null);t.default=n.exports}}]);