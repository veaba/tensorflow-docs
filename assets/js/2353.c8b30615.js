(window.webpackJsonp=window.webpackJsonp||[]).push([[2353],{2541:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Retains specified non-empty values within a SparseTensor.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.sparse.retain")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v1.sparse_retain")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.sparse.retain")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.sparse.retain(\n    sp_input,\n    to_retain\n)\n")])])]),t("p",[e._v("For example, if sp_input has shape [4, 5] and 4 non-empty string values:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" [0, 1]: a\n[0, 3]: b\n[2, 0]: c\n[3, 1]: d\n")])])]),t("p",[e._v("and to_retain = [True, False, False, True], then the output will be a SparseTensor of shape [4, 5] with 2 non-empty values:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" [0, 1]: a\n[3, 1]: d\n")])])]),t("h4",{attrs:{id:"args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sp_input")]),e._v(": The input "),t("code",[e._v("SparseTensor")]),e._v(" with "),t("code",[e._v("N")]),e._v(" non-empty elements.")]),e._v(" "),t("li",[t("code",[e._v("to_retain")]),e._v(": A bool vector of length "),t("code",[e._v("N")]),e._v(" with "),t("code",[e._v("M")]),e._v(" true values.")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A SparseTensor with the same shape as the input and M non-empty elements corresponding to the true positions in to_retain.")]),e._v(" "),t("h4",{attrs:{id:"raises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeError")]),e._v(": If "),t("code",[e._v("sp_input")]),e._v(" is not a "),t("code",[e._v("SparseTensor")]),e._v(".")])])])}),[],!1,null,null,null);a.default=r.exports}}]);