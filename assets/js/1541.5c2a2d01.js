(window.webpackJsonp=window.webpackJsonp||[]).push([[1541],{1732:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Multiplies 2 tensors (and/or variables) and returns a tensor.")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("tf.compat.v1.keras.backend.dot")])]),e._v(" "),t("li",[t("code",[e._v("tf.compat.v2.keras.backend.dot")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" tf.keras.backend.dot(\n    x,\n    y\n)\n")])])]),t("p",[e._v("When attempting to multiply a nD tensor with a nD tensor, it reproduces the Theano behavior. (e.g. (2, 3) * (4, 3, 5) -> (2, 4, 5))")]),e._v(" "),t("h4",{attrs:{id:"arguments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(": Tensor or variable.")]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v(": Tensor or variable.")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),t("p",[e._v("A tensor, dot product of x and y.")]),e._v(" "),t("h4",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("     # dot product between tensors\n    >>> x = K.placeholder(shape=(2, 3))\n    >>> y = K.placeholder(shape=(3, 4))\n    >>> xy = K.dot(x, y)\n    >>> xy\n    <tf.Tensor 'MatMul_9:0' shape=(2, 4) dtype=float32>\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("     # dot product between tensors\n    >>> x = K.placeholder(shape=(32, 28, 3))\n    >>> y = K.placeholder(shape=(3, 4))\n    >>> xy = K.dot(x, y)\n    >>> xy\n    <tf.Tensor 'MatMul_9:0' shape=(32, 28, 4) dtype=float32>\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("     # Theano-like behavior example\n    >>> x = K.random_uniform_variable(shape=(2, 3), low=0, high=1)\n    >>> y = K.ones((4, 3, 5))\n    >>> xy = K.dot(x, y)\n    >>> K.int_shape(xy)\n    (2, 4, 5)\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);