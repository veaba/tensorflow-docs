(window.webpackJsonp=window.webpackJsonp||[]).push([[2158],{2346:function(t,e,a){"use strict";a.r(e);var _=a(0),v=Object(_.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Returns x - y element-wise.")]),t._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("tf.RaggedTensor.__sub__")])]),t._v(" "),a("li",[a("code",[t._v("tf.compat.v1.RaggedTensor.__sub__")])]),t._v(" "),a("li",[a("code",[t._v("tf.compat.v1.math.subtract")])]),t._v(" "),a("li",[a("code",[t._v("tf.compat.v1.subtract")])]),t._v(" "),a("li",[a("code",[t._v("tf.compat.v2.RaggedTensor.__sub__")])]),t._v(" "),a("li",[a("code",[t._v("tf.compat.v2.math.subtract")])]),t._v(" "),a("li",[a("code",[t._v("tf.compat.v2.subtract")])]),t._v(" "),a("li",[a("code",[t._v("tf.subtract")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" tf.math.subtract(\n    x,\n    y,\n    name=None\n)\n")])])]),a("p",[a("a",{attrs:{href:"http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v("NOTE: Subtract supports broadcasting. More about broadcasting")]),t._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("x")]),t._v(": A "),a("code",[t._v("Tensor")]),t._v(". Must be one of the following types: "),a("code",[t._v("bfloat16")]),t._v(", "),a("code",[t._v("half")]),t._v(", "),a("code",[t._v("float32")]),t._v(", "),a("code",[t._v("float64")]),t._v(", "),a("code",[t._v("uint8")]),t._v(", "),a("code",[t._v("int8")]),t._v(", "),a("code",[t._v("uint16")]),t._v(", "),a("code",[t._v("int16")]),t._v(", "),a("code",[t._v("int32")]),t._v(", "),a("code",[t._v("int64")]),t._v(", "),a("code",[t._v("complex64")]),t._v(", "),a("code",[t._v("complex128")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("y")]),t._v(": A "),a("code",[t._v("Tensor")]),t._v(". Must have the same t"),a("code",[t._v("y")]),t._v("pe as "),a("code",[t._v("x")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("name")]),t._v(": A "),a("code",[t._v("name")]),t._v(" for the operation (optional).")])]),t._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns:")]),t._v(" "),a("p",[t._v("A Tensor. Has the same type as x.")])])}),[],!1,null,null,null);e.default=v.exports}}]);