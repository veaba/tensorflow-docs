(window.webpackJsonp=window.webpackJsonp||[]).push([[2183],{2371:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"class-rnncellresidualwrapper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-rnncellresidualwrapper","aria-hidden":"true"}},[t._v("#")]),t._v(" Class RNNCellResidualWrapper")]),t._v(" "),a("p",[t._v("RNNCell wrapper that ensures cell inputs are added to the outputs.")]),t._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases:")]),t._v(" "),a("ul",[a("li",[t._v("Class "),a("code",[t._v("tf.compat.v2.nn.RNNCellResidualWrapper")])])]),t._v(" "),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("init")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/rnn_cell_wrapper_v2.py#L108-L109",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" __init__(\n    *args,\n    **kwargs\n)\n")])])]),a("p",[t._v("Constructs a ResidualWrapper for cell.")]),t._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[t._v("#")]),t._v(" Args:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("cell")]),t._v(": An instance of "),a("code",[t._v("RNNCell")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("residual_fn")]),t._v(": (Optional) The function to map raw "),a("code",[t._v("cell")]),t._v(" inputs and raw "),a("code",[t._v("cell")]),t._v(" outputs to the actual "),a("code",[t._v("cell")]),t._v(" outputs of the residual network. Defaults to calling nest.map_structure on (lambda i, o: i + o), inputs and outputs.")])]),t._v(" "),a("h2",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),a("h3",{attrs:{id:"output-size"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-size","aria-hidden":"true"}},[t._v("#")]),t._v(" output_size")]),t._v(" "),a("h3",{attrs:{id:"state-size"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state-size","aria-hidden":"true"}},[t._v("#")]),t._v(" state_size")]),t._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),a("h3",{attrs:{id:"get-initial-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-initial-state","aria-hidden":"true"}},[t._v("#")]),t._v(" get_initial_state")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/recurrent.py#L976-L977",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" get_initial_state(\n    inputs=None,\n    batch_size=None,\n    dtype=None\n)\n")])])]),a("h3",{attrs:{id:"zero-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zero-state","aria-hidden":"true"}},[t._v("#")]),t._v(" zero_state")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/ops/rnn_cell_wrapper_impl.py#L344-L346",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" zero_state(\n    batch_size,\n    dtype\n)\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);