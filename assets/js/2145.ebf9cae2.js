(window.webpackJsonp=window.webpackJsonp||[]).push([[2145],{2333:function(e,t,a){"use strict";a.r(t);var s=a(0),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Defined in generated file: python/ops/gen_math_ops.py")]),e._v(" "),a("p",[e._v("Computes the maximum along segments of a tensor.")]),e._v(" "),a("h3",{attrs:{id:"aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("tf.compat.v1.math.segment_max")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v1.segment_max")])]),e._v(" "),a("li",[a("code",[e._v("tf.compat.v2.math.segment_max")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.math.segment_max(\n    data,\n    segment_ids,\n    name=None\n)\n")])])]),a("p",[a("a",{attrs:{href:"https://tensorflow.org/api_docs/python/tf/math#Segmentation",target:"_blank",rel:"noopener noreferrer"}},[e._v("the section on segmentation"),a("OutboundLink")],1),e._v("Read  for an explanation of segments.")]),e._v(" "),a("p",[e._v("Computes a tensor such that outputi=maxj(dataj) where max is over j such that segment_ids[j] == i.")]),e._v(" "),a("p",[e._v("If the max is empty for a given segment ID i, output[i] = 0.")]),e._v(" "),a("h4",{attrs:{id:"for-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" c = tf.constant([[1,2,3,4], [4, 3, 2, 1], [5,6,7,8]])\ntf.segment_max(c, tf.constant([0, 0, 1]))\n# ==> [[4, 3, 3, 4],\n#      [5, 6, 7, 8]]\n")])])]),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("data")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("float32")]),e._v(", "),a("code",[e._v("float64")]),e._v(", "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("uint8")]),e._v(", "),a("code",[e._v("int16")]),e._v(", "),a("code",[e._v("int8")]),e._v(", "),a("code",[e._v("int64")]),e._v(", "),a("code",[e._v("bfloat16")]),e._v(", "),a("code",[e._v("uint16")]),e._v(", "),a("code",[e._v("half")]),e._v(", "),a("code",[e._v("uint32")]),e._v(", "),a("code",[e._v("uint64")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("segment_ids")]),e._v(": A "),a("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),a("code",[e._v("int32")]),e._v(", "),a("code",[e._v("int64")]),e._v(". A 1-D tensor whose size is equal to the size of "),a("code",[e._v("data")]),e._v("'s first dimension. Values should be sorted and can be repeated.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": A "),a("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("A Tensor. Has the same type as data.")])])}),[],!1,null,null,null);t.default=n.exports}}]);