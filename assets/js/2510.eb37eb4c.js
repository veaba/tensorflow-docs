(window.webpackJsonp=window.webpackJsonp||[]).push([[2510],{2701:function(e,v,_){"use strict";_.r(v);var t=_(0),a=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[e._v("Concatenates tensors along one dimension.")]),e._v(" "),_("h3",{attrs:{id:"aliases"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("tf.compat.v1.concat")])]),e._v(" "),_("li",[_("code",[e._v("tf.compat.v2.concat")])])]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" tf.concat(\n    values,\n    axis,\n    name='concat'\n)\n")])])]),_("h3",{attrs:{id:"used-in-the-guide"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("R")]),e._v("a"),_("code",[e._v("g")]),e._v("g"),_("code",[e._v("e")]),e._v("d"),_("code"),e._v("t"),_("code",[e._v("e")]),e._v("n"),_("code",[e._v("s")]),e._v("o"),_("code",[e._v("r")]),e._v("s``")])]),e._v(" "),_("h3",{attrs:{id:"used-in-the-tutorials"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("B")]),e._v("e"),_("code",[e._v("t")]),e._v("t"),_("code",[e._v("e")]),e._v("r"),_("code"),e._v("p"),_("code",[e._v("e")]),e._v("r"),_("code",[e._v("f")]),e._v("o"),_("code",[e._v("r")]),e._v("m"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("c")]),e._v("e"),_("code"),e._v("w"),_("code",[e._v("i")]),e._v("t"),_("code",[e._v("h")]),e._v(" "),_("code",[e._v("t")]),e._v("f"),_("code",[e._v(".")]),e._v("f"),_("code",[e._v("u")]),e._v("n"),_("code",[e._v("c")]),e._v("t"),_("code",[e._v("i")]),e._v("o"),_("code",[e._v("n")])]),e._v(" "),_("li",[_("code",[e._v("I")]),e._v("m"),_("code",[e._v("a")]),e._v("g"),_("code",[e._v("e")]),e._v(" "),_("code",[e._v("c")]),e._v("a"),_("code",[e._v("p")]),e._v("t"),_("code",[e._v("i")]),e._v("o"),_("code",[e._v("n")]),e._v("i"),_("code",[e._v("n")]),e._v("g"),_("code"),e._v("w"),_("code",[e._v("i")]),e._v("t"),_("code",[e._v("h")]),e._v(" "),_("code",[e._v("v")]),e._v("i"),_("code",[e._v("s")]),e._v("u"),_("code",[e._v("a")]),e._v("l"),_("code"),e._v("a"),_("code",[e._v("t")]),e._v("t"),_("code",[e._v("e")]),e._v("n"),_("code",[e._v("t")]),e._v("i"),_("code",[e._v("o")]),e._v("n``")]),e._v(" "),_("li",[_("code",[e._v("N")]),e._v("e"),_("code",[e._v("u")]),e._v("r"),_("code",[e._v("a")]),e._v("l"),_("code"),e._v("m"),_("code",[e._v("a")]),e._v("c"),_("code",[e._v("h")]),e._v("i"),_("code",[e._v("n")]),e._v("e"),_("code"),e._v("t"),_("code",[e._v("r")]),e._v("a"),_("code",[e._v("n")]),e._v("s"),_("code",[e._v("l")]),e._v("a"),_("code",[e._v("t")]),e._v("i"),_("code",[e._v("o")]),e._v("n"),_("code"),e._v("w"),_("code",[e._v("i")]),e._v("t"),_("code",[e._v("h")]),e._v(" "),_("code",[e._v("a")]),e._v("t"),_("code",[e._v("t")]),e._v("e"),_("code",[e._v("n")]),e._v("t"),_("code",[e._v("i")]),e._v("o"),_("code",[e._v("n")])]),e._v(" "),_("li",[_("code",[e._v("T")]),e._v("r"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("s")]),e._v("f"),_("code",[e._v("o")]),e._v("r"),_("code",[e._v("m")]),e._v("e"),_("code",[e._v("r")]),e._v(" "),_("code",[e._v("m")]),e._v("o"),_("code",[e._v("d")]),e._v("e"),_("code",[e._v("l")]),e._v(" "),_("code",[e._v("f")]),e._v("o"),_("code",[e._v("r")]),e._v(" "),_("code",[e._v("l")]),e._v("a"),_("code",[e._v("n")]),e._v("g"),_("code",[e._v("u")]),e._v("a"),_("code",[e._v("g")]),e._v("e"),_("code"),e._v("u"),_("code",[e._v("n")]),e._v("d"),_("code",[e._v("e")]),e._v("r"),_("code",[e._v("s")]),e._v("t"),_("code",[e._v("a")]),e._v("n"),_("code",[e._v("d")]),e._v("i"),_("code",[e._v("n")]),e._v("g``")]),e._v(" "),_("li",[_("code",[e._v("U")]),e._v("n"),_("code",[e._v("i")]),e._v("c"),_("code",[e._v("o")]),e._v("d"),_("code",[e._v("e")]),e._v(" "),_("code",[e._v("s")]),e._v("t"),_("code",[e._v("r")]),e._v("i"),_("code",[e._v("n")]),e._v("g"),_("code",[e._v("s")]),e._v("\nConcatenates the list of tensors "),_("code",[e._v("values")]),e._v(" along dimension "),_("code",[e._v("axis")]),e._v(". If "),_("code",[e._v("values")]),e._v("[i].shape = [D0, D1, ... D"),_("code",[e._v("axis")]),e._v("(i), ...Dn], the concatenated result has shape")])]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" [D0, D1, ... Raxis, ...Dn]\n")])])]),_("p",[e._v("where")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" Raxis = sum(Daxis(i))\n")])])]),_("p",[e._v("That is, the data from the input tensors is joined along the "),_("code",[e._v("axis")]),e._v(" dimension.\nThe number of dimensions of the input tensors must match, and all dimensions except "),_("code",[e._v("axis")]),e._v(" must be equal.")]),e._v(" "),_("h4",{attrs:{id:"for-example"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#for-example","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" t1 = [[1, 2, 3], [4, 5, 6]]\nt2 = [[7, 8, 9], [10, 11, 12]]\ntf.concat([t1, t2], 0)  # [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]]\ntf.concat([t1, t2], 1)  # [[1, 2, 3, 7, 8, 9], [4, 5, 6, 10, 11, 12]]\n\n# tensor t3 with shape [2, 3]\n# tensor t4 with shape [2, 3]\ntf.shape(tf.concat([t3, t4], 0))  # [4, 3]\ntf.shape(tf.concat([t3, t4], 1))  # [2, 6]\n")])])]),_("p",[e._v("As in Python, the "),_("code",[e._v("axis")]),e._v(" could also be negative numbers. Negative "),_("code",[e._v("axis")]),e._v(" are interpreted as counting from the end of the rank, i.e., "),_("code",[e._v("axis")]),e._v(" + rank(values)-th dimension.")]),e._v(" "),_("h4",{attrs:{id:"for-example-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#for-example-2","aria-hidden":"true"}},[e._v("#")]),e._v(" For example:")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" t1 = [[[1, 2], [2, 3]], [[4, 4], [5, 3]]]\nt2 = [[[7, 4], [8, 4]], [[2, 10], [15, 11]]]\ntf.concat([t1, t2], -1)\n")])])]),_("p",[e._v("would produce:")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" [[[ 1,  2,  7,  4],\n  [ 2,  3,  8,  4]],\n\n [[ 4,  4,  2, 10],\n  [ 5,  3, 15, 11]]]\n")])])]),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" tf.concat([tf.expand_dims(t, axis) for t in tensors], axis)\n")])])]),_("p",[e._v("can be rewritten as")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" tf.stack(tensors, axis=axis)\n")])])]),_("h4",{attrs:{id:"args"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("values")]),e._v(": A list of "),_("code",[e._v("Tensor")]),e._v(" objects or a single "),_("code",[e._v("Tensor")]),e._v(".")])]),e._v(" "),_("h4",{attrs:{id:"returns"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),_("p",[e._v("A "),_("code",[e._v("Tensor")]),e._v(" resulting from concatenation of the input tensors.")])])}),[],!1,null,null,null);v.default=a.exports}}]);