(window.webpackJsonp=window.webpackJsonp||[]).push([[2058],{2246:function(e,_,v){"use strict";v.r(_);var o=v(0),d=Object(o.a)({},(function(){var e=this,_=e.$createElement,v=e._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("p",[e._v("Defined in generated file: python/ops/gen_math_ops.py")]),e._v(" "),v("p",[e._v("Returns x + y element-wise.")]),e._v(" "),v("h3",{attrs:{id:"aliases"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("tf.RaggedTensor.__add__")])]),e._v(" "),v("li",[v("code",[e._v("tf.add")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v1.RaggedTensor.__add__")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v1.add")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v1.math.add")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v2.RaggedTensor.__add__")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v2.add")])]),e._v(" "),v("li",[v("code",[e._v("tf.compat.v2.math.add")])])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v(" tf.math.add(\n    x,\n    y,\n    name=None\n)\n")])])]),v("h3",{attrs:{id:"used-in-the-guide"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the guide:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("E")]),e._v("a"),v("code",[e._v("g")]),e._v("e"),v("code",[e._v("r")]),e._v(" "),v("code",[e._v("e")]),e._v("x"),v("code",[e._v("e")]),e._v("c"),v("code",[e._v("u")]),e._v("t"),v("code",[e._v("i")]),e._v("o"),v("code",[e._v("n")])]),e._v(" "),v("li",[v("code",[e._v("R")]),e._v("a"),v("code",[e._v("g")]),e._v("g"),v("code",[e._v("e")]),e._v("d"),v("code"),e._v("t"),v("code",[e._v("e")]),e._v("n"),v("code",[e._v("s")]),e._v("o"),v("code",[e._v("r")]),e._v("s``")]),e._v(" "),v("li",[v("code",[e._v("T")]),e._v("r"),v("code",[e._v("a")]),e._v("i"),v("code",[e._v("n")]),e._v(" "),v("code",[e._v("a")]),e._v("n"),v("code",[e._v("d")]),e._v(" "),v("code",[e._v("e")]),e._v("v"),v("code",[e._v("a")]),e._v("l"),v("code",[e._v("u")]),e._v("a"),v("code",[e._v("t")]),e._v("e"),v("code"),e._v("w"),v("code",[e._v("i")]),e._v("t"),v("code",[e._v("h")]),e._v(" "),v("code",[e._v("K")]),e._v("e"),v("code",[e._v("r")]),e._v("a"),v("code",[e._v("s")])])]),e._v(" "),v("h3",{attrs:{id:"used-in-the-tutorials"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("C")]),e._v("u"),v("code",[e._v("s")]),e._v("t"),v("code",[e._v("o")]),e._v("m"),v("code",[e._v("i")]),e._v("z"),v("code",[e._v("a")]),e._v("t"),v("code",[e._v("i")]),e._v("o"),v("code",[e._v("n")]),e._v(" "),v("code",[e._v("b")]),e._v("a"),v("code",[e._v("s")]),e._v("i"),v("code",[e._v("c")]),e._v("s"),v("code",[e._v(":")]),e._v(" "),v("code",[e._v("t")]),e._v("e"),v("code",[e._v("n")]),e._v("s"),v("code",[e._v("o")]),e._v("r"),v("code",[e._v("s")]),e._v(" "),v("code",[e._v("a")]),e._v("n"),v("code",[e._v("d")]),e._v(" "),v("code",[e._v("o")]),e._v("p"),v("code",[e._v("e")]),e._v("r"),v("code",[e._v("a")]),e._v("t"),v("code",[e._v("i")]),e._v("o"),v("code",[e._v("n")]),e._v("s``\n"),v("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/math/add",target:"_blank",rel:"noopener noreferrer"}},[e._v("math.add"),v("OutboundLink")],1),e._v("NOTE:  supports broadcasting. AddN does not. More about broadcasting here")])]),e._v(" "),v("h4",{attrs:{id:"args"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("x")]),e._v(": A "),v("code",[e._v("Tensor")]),e._v(". Must be one of the following types: "),v("code",[e._v("bfloat16")]),e._v(", "),v("code",[e._v("half")]),e._v(", "),v("code",[e._v("float32")]),e._v(", "),v("code",[e._v("float64")]),e._v(", "),v("code",[e._v("uint8")]),e._v(", "),v("code",[e._v("int8")]),e._v(", "),v("code",[e._v("int16")]),e._v(", "),v("code",[e._v("int32")]),e._v(", "),v("code",[e._v("int64")]),e._v(", "),v("code",[e._v("complex64")]),e._v(", "),v("code",[e._v("complex128")]),e._v(", "),v("code",[e._v("string")]),e._v(".")]),e._v(" "),v("li",[v("code",[e._v("y")]),e._v(": A "),v("code",[e._v("Tensor")]),e._v(". Must have the same t"),v("code",[e._v("y")]),e._v("pe as "),v("code",[e._v("x")]),e._v(".")]),e._v(" "),v("li",[v("code",[e._v("name")]),e._v(": A "),v("code",[e._v("name")]),e._v(" for the operation (optional).")])]),e._v(" "),v("h4",{attrs:{id:"returns"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),v("p",[e._v("A Tensor. Has the same type as x.")])])}),[],!1,null,null,null);_.default=d.exports}}]);