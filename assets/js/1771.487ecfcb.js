(window.webpackJsonp=window.webpackJsonp||[]).push([[1771],{1962:function(e,a,t){"use strict";t.r(a);var r=t(0),i=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"class-layernormalization"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-layernormalization","aria-hidden":"true"}},[e._v("#")]),e._v(" Class LayerNormalization")]),e._v(" "),t("p",[e._v("Layer normalization layer (Ba et al., 2016).\n"),t("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/keras/layers/Layer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Layer"),t("OutboundLink")],1),e._v("Inherits From:")]),e._v(" "),t("h3",{attrs:{id:"aliases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" Aliases:")]),e._v(" "),t("ul",[t("li",[e._v("Class "),t("code",[e._v("tf.compat.v1.keras.layers.LayerNormalization")])]),e._v(" "),t("li",[e._v("Class "),t("code",[e._v("tf.compat.v2.keras.layers.LayerNormalization")])])]),e._v(" "),t("h3",{attrs:{id:"used-in-the-tutorials"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#used-in-the-tutorials","aria-hidden":"true"}},[e._v("#")]),e._v(" Used in the tutorials:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("T")]),e._v("r"),t("code",[e._v("a")]),e._v("n"),t("code",[e._v("s")]),e._v("f"),t("code",[e._v("o")]),e._v("r"),t("code",[e._v("m")]),e._v("e"),t("code",[e._v("r")]),e._v(" "),t("code",[e._v("m")]),e._v("o"),t("code",[e._v("d")]),e._v("e"),t("code",[e._v("l")]),e._v(" "),t("code",[e._v("f")]),e._v("o"),t("code",[e._v("r")]),e._v(" "),t("code",[e._v("l")]),e._v("a"),t("code",[e._v("n")]),e._v("g"),t("code",[e._v("u")]),e._v("a"),t("code",[e._v("g")]),e._v("e"),t("code"),e._v("u"),t("code",[e._v("n")]),e._v("d"),t("code",[e._v("e")]),e._v("r"),t("code",[e._v("s")]),e._v("t"),t("code",[e._v("a")]),e._v("n"),t("code",[e._v("d")]),e._v("i"),t("code",[e._v("n")]),e._v("g``")])]),e._v(" "),t("p",[e._v("Normalize the activations of the previous layer for each given example in a batch independently, rather than across a batch like Batch Normalization. i.e. applies a transformation that maintains the mean activation within each example close to 0 and the activation standard deviation close to 1.")]),e._v(" "),t("h4",{attrs:{id:"arguments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Arguments:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("axis")]),e._v(": Integer or List/Tuple. The "),t("code",[e._v("axis")]),e._v(" that should be normalized (typically the features "),t("code",[e._v("axis")]),e._v(").")]),e._v(" "),t("li",[t("code",[e._v("epsilon")]),e._v(": Small float added to variance to avoid dividing by zero.")]),e._v(" "),t("li",[t("code",[e._v("center")]),e._v(": If True, add offset of "),t("code",[e._v("beta")]),e._v(" to normalized tensor. If False, "),t("code",[e._v("beta")]),e._v(" is ignored.")]),e._v(" "),t("li",[t("code",[e._v("scale")]),e._v(": If True, multiply by "),t("code",[e._v("gamma")]),e._v(". If False, "),t("code",[e._v("gamma")]),e._v(" is not used. When the next layer is linear (also e.g. "),t("code",[e._v("nn.relu")]),e._v("), this can be disabled since the scaling will be done by the next layer.")]),e._v(" "),t("li",[t("code",[e._v("beta")]),e._v("_initializer: Initializer for the "),t("code",[e._v("beta")]),e._v(" weight.")]),e._v(" "),t("li",[t("code",[e._v("gamma")]),e._v("_initializer: Initializer for the "),t("code",[e._v("gamma")]),e._v(" weight.")]),e._v(" "),t("li",[t("code",[e._v("beta")]),e._v("_regularizer: Optional regularizer for the "),t("code",[e._v("beta")]),e._v(" weight.")]),e._v(" "),t("li",[t("code",[e._v("gamma")]),e._v("_regularizer: Optional regularizer for the "),t("code",[e._v("gamma")]),e._v(" weight.")]),e._v(" "),t("li",[t("code",[e._v("beta")]),e._v("_constraint: Optional constraint for the "),t("code",[e._v("beta")]),e._v(" weight.")]),e._v(" "),t("li",[t("code",[e._v("gamma")]),e._v("_constraint: Optional constraint for the "),t("code",[e._v("gamma")]),e._v(" weight.")]),e._v(" "),t("li",[t("code",[e._v("trainable")]),e._v(": Boolean, if "),t("code",[e._v("True")]),e._v(" the variables will be marked as "),t("code",[e._v("trainable")]),e._v(".")])]),e._v(" "),t("h4",{attrs:{id:"input-shape"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#input-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" Input shape:")]),e._v(" "),t("p",[e._v("Arbitrary. Use the keyword argument input_shape (tuple of integers, does not include the samples axis) when using this layer as the first layer in a model.")]),e._v(" "),t("h4",{attrs:{id:"output-shape"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#output-shape","aria-hidden":"true"}},[e._v("#")]),e._v(" Output shape:")]),e._v(" "),t("p",[e._v("Same shape as input.")]),e._v(" "),t("h4",{attrs:{id:"references"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#references","aria-hidden":"true"}},[e._v("#")]),e._v(" References:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("L")]),e._v("a"),t("code",[e._v("y")]),e._v("e"),t("code",[e._v("r")]),e._v(" "),t("code",[e._v("N")]),e._v("o"),t("code",[e._v("r")]),e._v("m"),t("code",[e._v("a")]),e._v("l"),t("code",[e._v("i")]),e._v("z"),t("code",[e._v("a")]),e._v("t"),t("code",[e._v("i")]),e._v("o"),t("code",[e._v("n")])])]),e._v(" "),t("h2",{attrs:{id:"init"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("init")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/normalization.py#L913-L947",target:"_blank",rel:"noopener noreferrer"}},[e._v("View source"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" __init__(\n    axis=-1,\n    epsilon=0.001,\n    center=True,\n    scale=True,\n    beta_initializer='zeros',\n    gamma_initializer='ones',\n    beta_regularizer=None,\n    gamma_regularizer=None,\n    beta_constraint=None,\n    gamma_constraint=None,\n    trainable=True,\n    name=None,\n    **kwargs\n)\n")])])])])}),[],!1,null,null,null);a.default=i.exports}}]);