(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{318:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/scatter_update",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.scatter_update"),a("OutboundLink")],1),e._v("Generalization of  to axis different than 0. (deprecated)")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" tf.compat.v1.batch_scatter_update(\n    ref,\n    indices,\n    updates,\n    use_locking=True,\n    name=None\n)\n")])])]),a("p",[e._v("Analogous to batch_gather. This assumes that ref, indices and updates have a series of leading dimensions that are the same for all of them, and the updates are performed on the last dimension of indices. In other words, the dimensions should be the following:")]),e._v(" "),a("p",[e._v("num_prefix_dims = indices.ndims - 1 batch_dim = num_prefix_dims + 1 updates.shape = indices.shape + var.shape[batch_dim:]")]),e._v(" "),a("p",[e._v("where")]),e._v(" "),a("p",[e._v("updates.shape[:num_prefix_dims] == indices.shape[:num_prefix_dims] == var.shape[:num_prefix_dims]")]),e._v(" "),a("p",[e._v("And the operation performed can be expressed as:")]),e._v(" "),a("p",[e._v("var[i_1, ..., i_n, indices[i_1, ..., i_n, j]] = updates[i_1, ..., i_n, j]\n"),a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/scatter_update",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.scatter_update"),a("OutboundLink")],1),e._v("When indices is a 1D tensor, this operation is equivalent to .")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/reshape",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.reshape"),a("OutboundLink")],1),e._v("To avoid this operation there would be 2 alternatives: 1) Reshaping the variable by merging the first ndims dimensions. However, this is not possible because  returns a Tensor, which we cannot use tf.compat.v1.scatter_update on. 2) Looping over the first ndims of the variable and using tf.compat.v1.scatter_update on the subtensors that result of slicing the first dimension. This is a valid option for ndims = 1, but less efficient than this implementation.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.tensorflow.org/api_docs/python/tf/compat/v1/scatter_update",target:"_blank",rel:"noopener noreferrer"}},[e._v("tf.compat.v1.scatter_update"),a("OutboundLink")],1),e._v("See also  and tf.compat.v1.scatter_nd_update.")]),e._v(" "),a("h4",{attrs:{id:"args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args","aria-hidden":"true"}},[e._v("#")]),e._v(" Args:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ref")]),e._v(": "),a("code",[e._v("Variable")]),e._v(" to scatter onto.")]),e._v(" "),a("li",[a("code",[e._v("indices")]),e._v(": Tensor containing "),a("code",[e._v("indices")]),e._v(" as described above.")]),e._v(" "),a("li",[a("code",[e._v("updates")]),e._v(": Tensor of "),a("code",[e._v("updates")]),e._v(" to apply to "),a("code",[e._v("ref")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("use_locking")]),e._v(": Boolean indicating whether to lock the writing operation.")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(": Optional scope "),a("code",[e._v("name")]),e._v(" string.")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[e._v("#")]),e._v(" Returns:")]),e._v(" "),a("p",[e._v("Ref to variable after it has been modified.")]),e._v(" "),a("h4",{attrs:{id:"raises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raises","aria-hidden":"true"}},[e._v("#")]),e._v(" Raises:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ValueError")]),e._v(": If the initial "),a("code",[e._v("ndims")]),e._v(" of "),a("code",[e._v("ref")]),e._v(", "),a("code",[e._v("indices")]),e._v(", and "),a("code",[e._v("updates")]),e._v(" are not the same.")])])])}),[],!1,null,null,null);t.default=r.exports}}]);